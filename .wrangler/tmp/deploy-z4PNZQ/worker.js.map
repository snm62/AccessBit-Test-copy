{
  "version": 3,
  "sources": ["../../../worker.js"],
  "sourceRoot": "C:\\Users\\sures\\ContrastKit\\.wrangler\\tmp\\deploy-z4PNZQ",
  "sourcesContent": ["// Complete Accessibility Widget Cloudflare Worker\nexport default {\n  async fetch(request, env, ctx) {\n    const url = new URL(request.url);\n    \n    // Handle CORS preflight\n    if (request.method === 'OPTIONS') {\n      return handleCORS();\n    }\n    \n    // OAuth Authorization - redirect to Webflow\n    if (url.pathname === '/api/auth/authorize') {\n      return handleOAuthAuthorize(request, env);\n    }\n    \n    // OAuth Callback - handle Webflow redirect\n    if (url.pathname === '/api/auth/callback') {\n      return handleOAuthCallback(request, env);\n    }\n    \n    // Token Authentication\n    if (url.pathname === '/api/auth/token' && request.method === 'POST') {\n      return handleTokenAuth(request, env);\n    }\n    \n    // Get accessibility settings\n    if (url.pathname === '/api/accessibility/settings' && request.method === 'GET') {\n      return handleGetSettings(request, env);\n    }\n    \n    // Update accessibility settings\n    if (url.pathname === '/api/accessibility/settings' && (request.method === 'POST' || request.method === 'PUT')) {\n      return handleUpdateSettings(request, env);\n    }\n    \n    // Verify authentication\n    if (url.pathname === '/api/auth/verify') {\n      return handleVerifyAuth(request, env);\n    }\n    \n    // Publish accessibility settings\n    if (url.pathname === '/api/accessibility/publish' && request.method === 'POST') {\n      return handlePublishSettings(request, env);\n    }\n    \n    // Default response\n    return new Response('Accessibility Widget API', { \n      status: 200,\n      headers: { \n        'Content-Type': 'text/plain',\n        'Access-Control-Allow-Origin': '*'\n      }\n    });\n  }\n};\n\n// Handle CORS preflight requests\nfunction handleCORS() {\n  return new Response(null, {\n    status: 204,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, POST, PUT, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n      'Access-Control-Max-Age': '86400'\n    }\n  });\n}\n\n// Handle OAuth Authorization\nasync function handleOAuthAuthorize(request, env) {\n  const url = new URL(request.url);\n  const incomingState = url.searchParams.get(\"state\");\n  const siteId = url.searchParams.get(\"siteId\");\n  \n  // Determine flow type and extract site ID\n  const isDesigner = incomingState && incomingState.startsWith(\"webflow_designer\");\n  \n  const scopes = [\n    \"sites:read\",\n    \"sites:write\", \n    \"custom_code:read\",\n    \"custom_code:write\",\n    \"authorized_user:read\"\n  ];\n  \n  // Use your worker's redirect URI for both flows\n  const redirectUri = \"https://accessibility-widget.web-8fb.workers.dev/api/auth/callback\";\n  \n  const authUrl = new URL('https://webflow.com/oauth/authorize');\n  authUrl.searchParams.set('client_id', env.WEBFLOW_CLIENT_ID);\n  authUrl.searchParams.set('response_type', 'code');\n  authUrl.searchParams.set('redirect_uri', redirectUri);\n  authUrl.searchParams.set('scope', scopes.join(' '));\n  \n  // Set state parameter with site ID for App Interface\n  if (isDesigner) {\n    const currentSiteId = siteId || (incomingState.includes('_') ? incomingState.split('_')[1] : null);\n    if (currentSiteId) {\n      authUrl.searchParams.set('state', `webflow_designer_${currentSiteId}`);\n    } else {\n      authUrl.searchParams.set('state', 'webflow_designer');\n    }\n  } else {\n    authUrl.searchParams.set('state', 'accessibility_widget');\n  }\n  \n  return new Response(null, {\n    status: 302,\n    headers: {\n      'Location': authUrl.toString()\n    }\n  });\n}\n\n// Handle OAuth Callback\nasync function handleOAuthCallback(request, env) {\n  const url = new URL(request.url);\n  const code = url.searchParams.get('code');\n  const state = url.searchParams.get('state');\n  \n  if (!code) {\n    return new Response(JSON.stringify({ error: 'No authorization code provided' }), {\n      status: 400,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n\n  // Handle missing state parameter - assume Apps & Integrations flow\n  if (!state) {\n    // Continue with Apps & Integrations flow instead of throwing error\n  }\n  \n  try {\n    const isDesigner = state && state.startsWith('webflow_designer');\n    const redirectUri = \"https://accessibility-widget.web-8fb.workers.dev/api/auth/callback\";\n    \n    console.log('=== OAUTH CALLBACK DEBUG ===');\n    console.log('Request URL:', request.url);\n    console.log('Code received:', code);\n    console.log('State:', state);\n    console.log('Using redirect URI:', redirectUri);\n    console.log('Client ID:', env.WEBFLOW_CLIENT_ID);\n    console.log('Flow type:', isDesigner ? 'App Interface' : 'Apps & Integrations');\n    \n    // Build token exchange request body conditionally\n    const tokenRequestBody = {\n      client_id: env.WEBFLOW_CLIENT_ID,\n      client_secret: env.WEBFLOW_CLIENT_SECRET,\n      code: code,\n      grant_type: 'authorization_code'\n    };\n    \n    // Only include redirect_uri for App Interface flow\n    if (isDesigner) {\n      tokenRequestBody.redirect_uri = redirectUri;\n    }\n    \n    console.log('Token request body:', JSON.stringify(tokenRequestBody, null, 2));\n    \n    const tokenResponse = await fetch('https://api.webflow.com/oauth/access_token', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(tokenRequestBody)\n    });\n    \n    if (!tokenResponse.ok) {\n      const errorText = await tokenResponse.text();\n      console.error('Token exchange failed:', tokenResponse.status, errorText);\n      throw new Error(`Token exchange failed: ${tokenResponse.status} - ${errorText}`);\n    }\n    \n    const tokenData = await tokenResponse.json();\n    console.log('Token exchange successful');\n    \n    // Get user info\n    const userResponse = await fetch('https://api.webflow.com/v2/token/authorized_by', {\n      headers: {\n        'Authorization': `Bearer ${tokenData.access_token}`,\n        'accept-version': '2.0.0'\n      }\n    });\n    \n    if (!userResponse.ok) {\n      throw new Error(`User fetch failed: ${userResponse.status}`);\n    }\n    \n    const userData = await userResponse.json();\n    \n    // Get sites\n    const sitesResponse = await fetch('https://api.webflow.com/v2/sites', {\n      headers: {\n        'Authorization': `Bearer ${tokenData.access_token}`,\n        'accept-version': '2.0.0'\n      }\n    });\n    \n    if (!sitesResponse.ok) {\n      throw new Error(`Sites fetch failed: ${sitesResponse.status}`);\n    }\n    \n    const sitesData = await sitesResponse.json();\n    let sites = [];\n    if (sitesData.sites) {\n      sites = sitesData.sites;\n    } else if (sitesData.items) {\n      sites = sitesData.items;\n    } else if (Array.isArray(sitesData)) {\n      sites = sitesData;\n    }\n    \n    if (sites.length === 0) {\n      throw new Error('No Webflow sites found');\n    }\n    \n    // Generate JWT session token FIRST\n    const sessionToken = await createSessionToken(userData, env);\n    \n    // Handle different redirect scenarios\n    if (isDesigner) {\n      // App Interface flow - only store data for the current site\n      const siteIdFromState = state.includes('_') ? state.split('_')[1] : null;\n      \n      // Find the specific site or use the first one\n      let currentSite;\n      if (siteIdFromState) {\n        currentSite = sites.find(site => site.id === siteIdFromState) || sites[0];\n      } else {\n        currentSite = sites[0];\n      }\n      \n      // Store data only for the current site\n      await env.ACCESSIBILITY_AUTH.put(currentSite.id, JSON.stringify({\n        accessToken: tokenData.access_token,\n        siteName: currentSite.shortName,\n        siteId: currentSite.id,\n        user: userData,\n        installedAt: new Date().toISOString(),\n        accessibilitySettings: {\n          fontSize: 'medium',\n          contrast: 'normal',\n          animations: true,\n          screenReader: false,\n          keyboardNavigation: true,\n          focusIndicators: true,\n          highContrast: false,\n          reducedMotion: false,\n          textSpacing: 'normal',\n          cursorSize: 'normal'\n        },\n        widgetVersion: '1.0.0',\n        lastUsed: new Date().toISOString()\n      }), { expirationTtl: 86400 });\n      \n      // App Interface flow - send data to parent window\n      return new Response(`<!DOCTYPE html>\n        <html>\n          <head>\n            <title>Accessibility Widget Installed</title>\n            <style>\n              body { font-family: Arial, sans-serif; text-align: center; padding: 50px; }\n              .success { color: #28a745; }\n            </style>\n          </head>\n          <body>\n            <h1 class=\"success\">\u2705 Accessibility Widget Installed Successfully!</h1>\n            <p>Your accessibility widget is now active on this site.</p>\n            <script>\n              const sessionData = {\n                type: 'AUTH_SUCCESS',\n                sessionToken: '${sessionToken.token}',\n                user: {\n                  firstName: '${userData.firstName || 'User'}',\n                  email: '${userData.email}',\n                  siteId: '${currentSite.id}'\n                },\n                siteInfo: {\n                  siteId: '${currentSite.id}',\n                  siteName: '${currentSite.name || currentSite.shortName || 'Unknown Site'}',\n                  shortName: '${currentSite.shortName}',\n                  url: '${currentSite.url || `https://${currentSite.shortName}.webflow.io`}'\n                }\n              };\n              \n              window.opener.postMessage(sessionData, '*');\n              window.close();\n            </script>\n          </body>\n        </html>`, {\n        headers: { 'Content-Type': 'text/html' }\n      });\n    }\n    \n    // Apps & Integrations flow - store data for all sites\n    const storePromises = sites.map(site => \n      env.ACCESSIBILITY_AUTH.put(site.id, JSON.stringify({\n        accessToken: tokenData.access_token,\n        siteName: site.shortName,\n        siteId: site.id,\n        user: userData,\n        installedAt: new Date().toISOString(),\n        accessibilitySettings: {\n          fontSize: 'medium',\n          contrast: 'normal',\n          animations: true,\n          screenReader: false,\n          keyboardNavigation: true,\n          focusIndicators: true,\n          highContrast: false,\n          reducedMotion: false,\n          textSpacing: 'normal',\n          cursorSize: 'normal'\n        },\n        widgetVersion: '1.0.0',\n        lastUsed: new Date().toISOString()\n      }), { expirationTtl: 86400 })\n    );\n    \n    await Promise.all(storePromises);\n    \n    // Apps & Integrations flow - redirect to site with success message\n    const firstSite = sites[0];\n    return new Response(`<!DOCTYPE html>\n      <html>\n        <head>\n          <title>Accessibility Widget Installed</title>\n          <style>\n            body { font-family: Arial, sans-serif; text-align: center; padding: 50px; }\n            .success { color: #28a745; }\n            .redirect { color: #007bff; margin-top: 20px; }\n          </style>\n        </head>\n        <body>\n          <h1 class=\"success\">\u2705Accessibility Widget Installed Successfully!</h1>\n          <p>Your accessibility widget is now active on this site.</p>\n          <p class=\"redirect\">Redirecting to your site...</p>\n          <script>\n            // Store site info in session storage\n            sessionStorage.setItem('wf_hybrid_user', JSON.stringify({\n              sessionToken: '${sessionToken.token}',\n              firstName: '${userData.firstName || 'User'}',\n              email: '${userData.email}',\n              exp: Date.now() + (24 * 60 * 60 * 1000),\n              siteInfo: {\n                siteId: '${firstSite.id}',\n                siteName: '${firstSite.name || firstSite.shortName || 'Unknown Site'}',\n                shortName: '${firstSite.shortName}',\n                url: '${firstSite.url || `https://${firstSite.shortName}.webflow.io`}'\n              }\n            }));\n            \n            // Redirect to the site after a short delay\n            setTimeout(() => {\n              window.location.href = 'https://${firstSite.shortName}.design.webflow.com?app=${env.WEBFLOW_CLIENT_ID}';\n            }, 2000);\n          </script>\n        </body>\n      </html>`, {\n      headers: { 'Content-Type': 'text/html' }\n    });\n    \n  } catch (error) {\n    console.error('OAuth callback error:', error);\n    return new Response(JSON.stringify({ \n      error: 'Authorization failed', \n      details: error.message\n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\n// Handle publish accessibility settings\nasync function handlePublishSettings(request, env) {\n  const requestId = `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  console.log(`[PUBLISH] ${requestId} Starting publish request`);\n  \n  try {\n    // Verify authentication\n    const authResult = await verifyAuth(request, env);\n    if (!authResult) {\n      console.log(`[PUBLISH] ${requestId} Authentication failed`);\n      return new Response(JSON.stringify({ \n        error: \"Unauthorized\", \n        requestId \n      }), {\n        status: 401,\n        headers: { \n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'POST, OPTIONS',\n          'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n        }\n      });\n    }\n    \n    const { siteId } = authResult;\n    console.log(`[PUBLISH] ${requestId} Authenticated for siteId: ${siteId}`);\n    \n    // Parse the request body\n    const body = await request.json();\n    console.log(`[PUBLISH] ${requestId} Received body:`, body);\n    \n    const { customization, accessibilityProfiles, customDomain, publishedAt } = body;\n    \n    // Get existing site data\n    const siteData = await env.ACCESSIBILITY_AUTH.get(siteId);\n    if (!siteData) {\n      console.log(`[PUBLISH] ${requestId} Site not found: ${siteId}`);\n      return new Response(JSON.stringify({ \n        error: \"Site not found\", \n        requestId \n      }), {\n        status: 404,\n        headers: { \n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'POST, OPTIONS',\n          'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n        }\n      });\n    }\n    \n    const siteInfo = JSON.parse(siteData);\n    \n    // Update site data with published settings\n    siteInfo.customization = customization || {};\n    siteInfo.accessibilityProfiles = accessibilityProfiles || [];\n    siteInfo.customDomain = customDomain || null;\n    siteInfo.publishedAt = publishedAt || new Date().toISOString();\n    siteInfo.lastUpdated = new Date().toISOString();\n    siteInfo.lastUsed = new Date().toISOString();\n    \n    // Store the updated site data\n    const kvKey = `Accessibility-Settings:${siteId}`;\n    console.log(`[PUBLISH] ${requestId} Storing settings with key: ${kvKey}`);\n    \n    const dataToStore = {\n      ...siteInfo,\n      accessToken: siteInfo.accessToken,\n      siteId: siteId,\n      updatedAt: new Date().toISOString()\n    };\n    \n    await env.ACCESSIBILITY_AUTH.put(kvKey, JSON.stringify(dataToStore));\n    \n    // If custom domain is provided, create a domain mapping\n    if (customDomain) {\n      const domainKey = `domain:${customDomain}`;\n      await env.ACCESSIBILITY_AUTH.put(domainKey, JSON.stringify({\n        siteId: siteId,\n        customDomain: customDomain,\n        connectedAt: new Date().toISOString()\n      }), { expirationTtl: 86400 });\n    }\n    \n    console.log(`[PUBLISH] ${requestId} Settings published successfully`);\n    \n    return new Response(JSON.stringify({\n      success: true,\n      message: \"Accessibility settings published successfully\",\n      data: {\n        customization: siteInfo.customization,\n        accessibilityProfiles: siteInfo.accessibilityProfiles,\n        customDomain: siteInfo.customDomain,\n        publishedAt: siteInfo.publishedAt\n      },\n      requestId\n    }), {\n      status: 200,\n      headers: { \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'POST, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n      }\n    });\n    \n  } catch (error) {\n    console.error(`[PUBLISH] ${requestId} Error in publish handler:`, error);\n    return new Response(JSON.stringify({\n      error: \"Failed to publish accessibility settings\",\n      details: String(error),\n      requestId\n    }), {\n      status: 500,\n      headers: { \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'POST, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n      }\n    });\n  }\n}\n\n// Get accessibility settings - UPDATED TO USE ONLY PUBLISHED SETTINGS\nasync function handleGetSettings(request, env) {\n  const authResult = await verifyAuth(request, env);\n  if (!authResult) {\n    return new Response(JSON.stringify({ error: 'Unauthorized' }), {\n      status: 401,\n      headers: { \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n      }\n    });\n  }\n  \n  const { siteId } = authResult;\n  \n  const publishedData = await env.ACCESSIBILITY_AUTH.get(`Accessibility-Settings:${siteId}`);\n  if (!publishedData) {\n    return new Response(JSON.stringify({ error: 'Site not found' }), {\n      status: 404,\n      headers: { \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n      }\n    });\n  }\n  \n  const published = JSON.parse(publishedData);\n  return new Response(JSON.stringify({\n    settings: published.accessibilitySettings,\n    customization: published.customization,\n    accessibilityProfiles: published.accessibilityProfiles,\n    customDomain: published.customDomain,\n    siteId: siteId,\n    siteName: published.siteName,\n    installedAt: published.installedAt,\n    lastUsed: published.lastUsed,\n    widgetVersion: published.widgetVersion,\n    publishedAt: published.publishedAt\n  }), {\n    headers: { \n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n    }\n  });\n}\n\n// Handle Token Authentication - UPDATED TO USE PUBLISHED SETTINGS\nasync function handleTokenAuth(request, env) {\n  try {\n    console.log('=== TOKEN AUTH DEBUG START ===');\n    console.log('Request method:', request.method);\n    console.log('Request URL:', request.url);\n    console.log('Request headers:', Object.fromEntries(request.headers.entries()));\n    \n    const { siteId, idToken } = await request.json();\n    console.log('Parsed request body:', { siteId: !!siteId, idToken: !!idToken });\n    \n    if (!siteId || !idToken) {\n      console.error('Missing required parameters');\n      return new Response(JSON.stringify({ error: 'Missing siteId or idToken' }), {\n        status: 400,\n        headers: { \n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'POST, OPTIONS',\n          'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n        }\n      });\n    }\n    \n    // Get access token from published settings\n    console.log('Looking up published settings for siteId:', siteId);\n    const publishedData = await env.ACCESSIBILITY_AUTH.get(`Accessibility-Settings:${siteId}`);\n    if (!publishedData) {\n      console.error('Published settings not found in KV store');\n      return new Response(JSON.stringify({ error: 'Site not found or not authorized' }), {\n        status: 401,\n        headers: { \n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'POST, OPTIONS',\n          'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n        }\n      });\n    }\n    \n    const { accessToken } = JSON.parse(publishedData);\n    console.log('Found access token for site');\n    \n    // Verify user with Webflow - UPDATED TO V2\n    console.log('Verifying user with Webflow...');\n    const resolveResponse = await fetch('https://api.webflow.com/v2/token/resolve', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${accessToken}`,\n        'accept-version': '2.0.0'\n      },\n      body: JSON.stringify({ idToken })\n    });\n    \n    console.log('Webflow resolve response status:', resolveResponse.status);\n    \n    if (!resolveResponse.ok) {\n      const errorText = await resolveResponse.text();\n      console.error('Token resolve failed:', resolveResponse.status, errorText);\n      return new Response(JSON.stringify({ error: 'Failed to verify user' }), {\n        status: 401,\n        headers: { \n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'POST, OPTIONS',\n          'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n        }\n      });\n    }\n    \n    const userData = await resolveResponse.json();\n    console.log('Resolved user data:', JSON.stringify(userData, null, 2));\n    \n    if (!userData.id || !userData.email) {\n      console.error('Invalid user data received');\n      return new Response(JSON.stringify({ error: 'Invalid user data received' }), {\n        status: 400,\n        headers: { \n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'POST, OPTIONS',\n          'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n        }\n      });\n    }\n    \n    // Create session token\n    console.log('Creating session token...');\n    const sessionToken = await createSessionToken(userData, env);\n    console.log('Session token created successfully');\n    \n    // Store user authentication\n    await env.ACCESSIBILITY_AUTH.put(`user-auth:${userData.id}`, JSON.stringify({\n      accessToken,\n      userData: {\n        id: userData.id,\n        email: userData.email,\n        firstName: userData.firstName\n      },\n      siteId,\n      widgetType: 'accessibility'\n    }), { expirationTtl: 86400 });\n    \n    console.log('User authentication stored');\n    console.log('=== TOKEN AUTH DEBUG END ===');\n    \n    return new Response(JSON.stringify({\n      sessionToken: sessionToken.token,\n      email: userData.email,\n      firstName: userData.firstName,\n      exp: sessionToken.exp,\n      widgetType: 'accessibility'\n    }), {\n      headers: { \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'POST, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n      }\n    });\n    \n  } catch (error) {\n    console.error('Token auth error:', error);\n    return new Response(JSON.stringify({ \n      error: 'Authentication failed',\n      details: error.message \n    }), {\n      status: 500,\n      headers: { \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'POST, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n      }\n    });\n  }\n}\n\n// Update accessibility settings - UPDATED TO USE PUBLISHED SETTINGS\nasync function handleUpdateSettings(request, env) {\n  const authResult = await verifyAuth(request, env);\n  if (!authResult) {\n    return new Response(JSON.stringify({ error: 'Unauthorized' }), {\n      status: 401,\n      headers: { \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'POST, PUT, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n      }\n    });\n  }\n  \n  const { siteId } = authResult;\n  const newSettings = await request.json();\n  \n  const publishedData = await env.ACCESSIBILITY_AUTH.get(`Accessibility-Settings:${siteId}`);\n  if (!publishedData) {\n    return new Response(JSON.stringify({ error: 'Site not found' }), {\n      status: 404,\n      headers: { \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'POST, PUT, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n      }\n    });\n  }\n  \n  const siteInfo = JSON.parse(publishedData);\n  siteInfo.accessibilitySettings = { ...siteInfo.accessibilitySettings, ...newSettings };\n  siteInfo.lastUpdated = new Date().toISOString();\n  siteInfo.lastUsed = new Date().toISOString();\n  \n  await env.ACCESSIBILITY_AUTH.put(`Accessibility-Settings:${siteId}`, JSON.stringify(siteInfo));\n  \n  return new Response(JSON.stringify({\n    success: true,\n    settings: siteInfo.accessibilitySettings,\n    lastUpdated: siteInfo.lastUpdated\n  }), {\n    headers: { \n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'POST, PUT, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n    }\n  });\n}\n\n// Verify authentication\nasync function handleVerifyAuth(request, env) {\n  const authResult = await verifyAuth(request, env);\n  \n  return new Response(JSON.stringify({\n    authenticated: !!authResult,\n    user: authResult?.userData || null\n  }), {\n    headers: { \n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n    }\n  });\n}\n\n// Helper function to verify authentication\nasync function verifyAuth(request, env) {\n  const authHeader = request.headers.get('authorization');\n  if (!authHeader) return null;\n  \n  const token = authHeader.split(' ')[1];\n  if (!token) return null;\n  \n  try {\n    // Verify JWT token\n    const payload = await verifyJWT(token, env.WEBFLOW_CLIENT_SECRET);\n    const userId = payload.user.id;\n    \n    // Get user data from KV\n    const userData = await env.ACCESSIBILITY_AUTH.get(`user-auth:${userId}`);\n    if (!userData) return null;\n    \n    const { accessToken, userData: user, siteId } = JSON.parse(userData);\n    \n    return {\n      accessToken,\n      userData: user,\n      siteId\n    };\n  } catch (error) {\n    console.error('Auth verification error:', error);\n    return null;\n  }\n}\n\n// Create JWT session token\nasync function createSessionToken(user, env) {\n  const header = {\n    alg: 'HS256',\n    typ: 'JWT'\n  };\n  \n  const payload = {\n    user: user,\n    exp: Math.floor(Date.now() / 1000) + (24 * 60 * 60) // 24 hours\n  };\n  \n  const encodedHeader = base64UrlEncode(JSON.stringify(header));\n  const encodedPayload = base64UrlEncode(JSON.stringify(payload));\n  \n  const signature = await signJWT(\n    `${encodedHeader}.${encodedPayload}`,\n    env.WEBFLOW_CLIENT_SECRET\n  );\n  \n  return {\n    token: `${encodedHeader}.${encodedPayload}.${signature}`,\n    exp: payload.exp\n  };\n}\n\n// Verify JWT token\nasync function verifyJWT(token, secret) {\n  const parts = token.split('.');\n  if (parts.length !== 3) throw new Error('Invalid JWT format');\n  \n  const [header, payload, signature] = parts;\n  \n  // Verify signature\n  const expectedSignature = await signJWT(`${header}.${payload}`, secret);\n  if (signature !== expectedSignature) {\n    throw new Error('Invalid signature');\n  }\n  \n  // Check expiration\n  const decodedPayload = JSON.parse(base64UrlDecode(payload));\n  if (decodedPayload.exp < Math.floor(Date.now() / 1000)) {\n    throw new Error('Token expired');\n  }\n  \n  return decodedPayload;\n}\n\n// Sign JWT\nasync function signJWT(data, secret) {\n  const key = await crypto.subtle.importKey(\n    'raw',\n    new TextEncoder().encode(secret),\n    { name: 'HMAC', hash: 'SHA-256' },\n    false,\n    ['sign']\n  );\n  \n  const signature = await crypto.subtle.sign('HMAC', key, new TextEncoder().encode(data));\n  return base64UrlEncode(new Uint8Array(signature));\n}\n\n// Base64 URL encoding helpers\nfunction base64UrlEncode(str) {\n  return btoa(str)\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n    .replace(/=/g, '');\n}\n\nfunction base64UrlDecode(str) {\n  str += '='.repeat((4 - str.length % 4) % 4);\n  str = str.replace(/-/g, '+').replace(/_/g, '/');\n  return atob(str);\n}"],
  "mappings": "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",
  "names": []
}
