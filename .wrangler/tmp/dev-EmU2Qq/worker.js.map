{
  "version": 3,
  "sources": ["../bundle-crb4vj/checked-fetch.js", "../../../worker.js", "../../../../AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-crb4vj/middleware-insertion-facade.js", "../../../../AppData/Roaming/npm/node_modules/wrangler/templates/middleware/common.ts", "../bundle-crb4vj/middleware-loader.entry.ts"],
  "sourceRoot": "C:\\Users\\sures\\ContrastKit\\.wrangler\\tmp\\dev-EmU2Qq",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "// Security Headers\r\nconst securityHeaders = {\r\n    'Content-Security-Policy': \"default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.stripe.com https://*.stripe.com https://cdn.prod.website-files.com; script-src-elem 'self' 'unsafe-inline' https://js.stripe.com https://*.stripe.com https://cdn.prod.website-files.com; script-src-attr 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdn.prod.website-files.com; style-src-elem 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdn.prod.website-files.com; img-src 'self' data: https:; font-src 'self' data: https://fonts.gstatic.com; connect-src 'self' https://api.stripe.com https://*.stripe.com https://accessibility-widget.web-8fb.workers.dev https://d3e54v103j8qbb.cloudfront.net; frame-src 'self' https://js.stripe.com; base-uri 'self'; form-action 'self'; frame-ancestors 'self' https://*.webflow.com; object-src 'none'; upgrade-insecure-requests;\",\r\n    'X-Content-Type-Options': 'nosniff',\r\n    'X-Frame-Options': 'SAMEORIGIN',\r\n    'X-XSS-Protection': '1; mode=block',\r\n    'Referrer-Policy': 'strict-origin-when-cross-origin',\r\n    'Strict-Transport-Security': 'max-age=31536000; includeSubDomains',\r\n    'Cross-Origin-Opener-Policy': 'same-origin',\r\n    'Cross-Origin-Embedder-Policy': 'require-corp',\r\n    'Cross-Origin-Resource-Policy': 'same-origin',\r\n    'X-DNS-Prefetch-Control': 'on',\r\n    'X-Download-Options': 'noopen',\r\n    'X-Permitted-Cross-Domain-Policies': 'none',\r\n    'Permissions-Policy': 'payment=*'\r\n};\r\n// Rate limiting storage\r\nconst rateLimitStore = new Map();\r\n\r\n// Handle Webflow App Installation\r\nasync function handleWebflowAppInstallation(request, env) {\r\n  const origin = request.headers.get('origin');\r\n  \r\n  try {\r\n    const { siteId, userId, userEmail, siteName, installationData } = await request.json();\r\n    \r\n    console.log('Webflow app installation detected:', { siteId, userId, userEmail, siteName });\r\n    \r\n    // Send webhook to Make.com for email automation\r\n    try {\r\n      const webhookUrl = env.MAKE_WEBHOOK_URL || 'https://hook.us1.make.com/mjcnn3ydks2o2pbkrdna9czn7bb253z0';\r\n      await fetch(webhookUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          event: 'webflow_app_installed',\r\n          customer: {\r\n            email: userEmail,\r\n            firstName: installationData?.firstName || 'User',\r\n            siteId: siteId,\r\n            siteName: siteName,\r\n            userId: userId\r\n          },\r\n          installation: {\r\n            timestamp: new Date().toISOString(),\r\n            data: installationData || {}\r\n          }\r\n        })\r\n      });\r\n      console.log('Webflow installation webhook sent to Make.com successfully');\r\n    } catch (webhookError) {\r\n      console.warn('Webflow webhook failed (non-critical):', webhookError);\r\n    }\r\n    \r\n    // Store installation data\r\n    const installationRecord = {\r\n      siteId,\r\n      userId,\r\n      userEmail,\r\n      siteName,\r\n      installedAt: new Date().toISOString(),\r\n      status: 'installed'\r\n    };\r\n    \r\n    await env.ACCESSIBILITY_AUTH.put(`installation_${siteId}`, JSON.stringify(installationRecord));\r\n    \r\n    // Start 7-day trial immediately for new installs\r\n    const now = new Date();\r\n    const trialEnd = new Date(now.getTime() + 7 * 24 * 60 * 60 * 1000);\r\n    \r\n    // Ledger record\r\n    const userData = {\r\n      siteId,\r\n      email: userEmail || '',\r\n      domain: '',\r\n      paymentStatus: 'trial',\r\n      trialStartDate: now.toISOString(),\r\n      trialEndDate: trialEnd.toISOString(),\r\n      createdAt: now.toISOString()\r\n    };\r\n    await env.ACCESSIBILITY_AUTH.put(`user_data_${siteId}`, JSON.stringify(userData));\r\n    \r\n    // Unified settings\r\n    await mergeSiteSettings(env, siteId, {\r\n      siteId,\r\n      email: userEmail || '',\r\n      siteName: siteName || '',\r\n      paymentStatus: 'trial',\r\n      trialStartDate: now.toISOString(),\r\n      trialEndDate: trialEnd.toISOString()\r\n    });\r\n    \r\n    const successResponse = secureJsonResponse({ \r\n      success: true,\r\n      message: 'App installation recorded successfully'\r\n    });\r\n    return addSecurityAndCorsHeaders(successResponse, origin);\r\n    \r\n  } catch (error) {\r\n    console.error('Webflow app installation error:', error);\r\n    const errorResponse = secureJsonResponse({ \r\n      error: 'Failed to process app installation',\r\n      details: error.message \r\n    }, 500);\r\n    return addSecurityAndCorsHeaders(errorResponse, origin);\r\n  }\r\n}\r\n\r\n// Security Functions\r\nfunction secureJsonResponse(data, status = 200) {\r\n    return new Response(JSON.stringify(data), {\r\n        status,\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\n}\r\n\r\nfunction sanitizeInput(input) {\r\n    return input.replace(/[<>\\\"'&]/g, (match) => {\r\n        const escapeMap = {\r\n            '<': '&lt;',\r\n            '>': '&gt;',\r\n            '\"': '&quot;',\r\n            \"'\": '&#x27;',\r\n            '&': '&amp;'\r\n        };\r\n        return escapeMap[match];\r\n    });\r\n}\r\nfunction rateLimitCheck(ip, requests) {\r\n    const now = Date.now();\r\n    const windowMs = 15 * 60 * 1000; // 15 minutes\r\n    const maxRequests = 100;\r\n\r\n    const userRequests = requests.get(ip);\r\n    \r\n    if (!userRequests || now > userRequests.resetTime) {\r\n        requests.set(ip, { count: 1, resetTime: now + windowMs });\r\n        return true;\r\n    }\r\n\r\n    if (userRequests.count >= maxRequests) {\r\n        return false;\r\n    }\r\n\r\n    userRequests.count++;\r\n    return true;\r\n}\r\n\r\n// Unified site settings storage helpers (canonical key: accessibility-settings:<siteId>)\r\nasync function getSiteSettings(env, siteId) {\r\n  const existing = await env.ACCESSIBILITY_AUTH.get(`accessibility-settings:${siteId}`);\r\n  if (!existing) {\r\n    return {\r\n      siteId,\r\n      customization: {},\r\n      accessibilityProfiles: {},\r\n      email: '',\r\n      domain: '',\r\n      paymentStatus: 'unknown',\r\n      trialStartDate: null,\r\n      trialEndDate: null,\r\n      customerId: '',\r\n      subscriptionId: '',\r\n      lastPaymentDate: null,\r\n      lastUpdated: new Date().toISOString(),\r\n      lastUsed: new Date().toISOString()\r\n    };\r\n  }\r\n  try { return JSON.parse(existing); } catch { return { siteId, customization: {} }; }\r\n}\r\n\r\nasync function mergeSiteSettings(env, siteId, patch) {\r\n  const current = await getSiteSettings(env, siteId);\r\n  const updated = { ...current, ...patch, lastUpdated: new Date().toISOString(), lastUsed: new Date().toISOString() };\r\n  await env.ACCESSIBILITY_AUTH.put(`accessibility-settings:${siteId}`, JSON.stringify(updated));\r\n  return updated;\r\n}\r\n\r\n// Persist payment record per site in KV\r\nasync function savePaymentRecord(env, siteId, record) {\r\n  if (!siteId) return;\r\n  const key = `payments:${siteId}`;\r\n  let existing = [];\r\n  try {\r\n    const raw = await env.ACCESSIBILITY_AUTH.get(key);\r\n    if (raw) existing = JSON.parse(raw);\r\n  } catch (_) {}\r\n  const enriched = {\r\n    id: record.id || crypto.randomUUID?.() || `${Date.now()}`,\r\n    siteId,\r\n    type: record.type || 'unknown',\r\n    timestamp: record.timestamp || new Date().toISOString(),\r\n    currency: record.currency || null,\r\n    amount: record.amount || null,\r\n    status: record.status || null,\r\n    customerId: record.customerId || null,\r\n    subscriptionId: record.subscriptionId || null,\r\n    invoiceId: record.invoiceId || null,\r\n    paymentIntentId: record.paymentIntentId || null,\r\n    paymentMethodId: record.paymentMethodId || null,\r\n    currentPeriodStart: record.currentPeriodStart || null,\r\n    currentPeriodEnd: record.currentPeriodEnd || null,\r\n    metadata: record.metadata || {},\r\n  };\r\n  existing.push(enriched);\r\n  await env.ACCESSIBILITY_AUTH.put(key, JSON.stringify(existing));\r\n  // Also keep last-payment shortcut\r\n  await env.ACCESSIBILITY_AUTH.put(`payments:last:${siteId}`, JSON.stringify(enriched));\r\n  return enriched;\r\n}\r\n\r\nfunction addSecurityAndCorsHeaders(response, origin) {\r\n    const headers = new Headers(response.headers);\r\n    \r\n    // Add all security headers\r\n    Object.entries(securityHeaders).forEach(([key, value]) => {\r\n        headers.set(key, value);\r\n    });\r\n    // CORS Headers\r\n    headers.set('Access-Control-Allow-Origin', origin || '*');\r\n    headers.set('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');\r\n    headers.set('Access-Control-Allow-Headers', 'Content-Type, Authorization, X-Requested-With, Accept, Origin, X-CSRF-Token');\r\n    headers.set('Access-Control-Allow-Credentials', 'true');\r\n    headers.set('Access-Control-Max-Age', '86400');\r\n    headers.set('Vary', 'Origin');\r\n    \r\n    return new Response(response.body, {\r\n        status: response.status,\r\n        statusText: response.statusText,\r\n        headers,\r\n    });\r\n}\r\n\r\n\r\n\r\n// Complete Accessibility Widget Cloudflare Worker\r\nexport default {\r\n  async fetch(request, env, ctx) {\r\n    const url = new URL(request.url);\r\n    const origin = request.headers.get('origin');\r\n    const clientIP = request.headers.get('x-forwarded-for') || 'unknown';\r\n    \r\n    // Handle CORS preflight\r\n    if (request.method === 'OPTIONS') {\r\n      return handleCORS();\r\n    }\r\n    \r\n    // OAuth Authorization - redirect to Webflow\r\n    if (url.pathname === '/api/auth/authorize') {\r\n      return handleOAuthAuthorize(request, env);\r\n    }\r\n    \r\n    // OAuth Callback - handle Webflow redirect\r\n    if (url.pathname === '/api/auth/callback') {\r\n      return handleOAuthCallback(request, env);\r\n    }\r\n    \r\n    \r\n    // Token Authentication\r\n    if (url.pathname === '/api/auth/token' && request.method === 'POST') {\r\n      return handleTokenAuth(request, env);\r\n    }\r\n    \r\n     if (url.pathname === '/api/auth/verify') {\r\n      return handleVerifyAuth(request, env);\r\n    }\r\n    \r\n    // Publish accessibility settings\r\n    if (url.pathname === '/api/accessibility/publish' && request.method === 'POST') {\r\n      return handlePublishSettings(request, env);\r\n    }\r\n    \r\n    // Register accessibility script\r\n    if (url.pathname === '/api/accessibility/register-script') {\r\n      return handleRegisterScript(request, env);\r\n    }\r\n    \r\n    // Apply accessibility script\r\n    if (url.pathname === '/api/accessibility/apply-script') {\r\n      return handleApplyScript(request, env);\r\n    }\r\n    \r\n    // Get access token by site ID from URL params\r\nif (url.pathname === '/api/accessibility/get-token' && request.method === 'GET') {\r\n  return handleGetTokenBySiteId(request, env);\r\n}\r\n\r\n  // ADD RATE LIMITING ONLY FOR NON-OAUTH AND NON-PAYMENT ENDPOINTS\r\n  // Payment endpoints are exempt from rate limiting to prevent payment failures\r\n  const isPaymentEndpoint = url.pathname.includes('/setup-payment') ||\r\n                          url.pathname.includes('/verify-payment-method') ||\r\n                          url.pathname.includes('/create-subscription') ||\r\n                          url.pathname.includes('/cancel-subscription') ||\r\n                          url.pathname.includes('/subscription-status') ||\r\n                          url.pathname.includes('/update-subscription') ||\r\n                          url.pathname.includes('/create-payment-intent') ||\r\n                          url.pathname.includes('/check-subscription-status') ||\r\n                          url.pathname.includes('/activate-subscription') ||\r\n                          url.pathname.includes('/reactivate-subscription') ||\r\n                          url.pathname.includes('/check-payment-status') ||\r\n                          url.pathname.includes('/domain-lookup') ||\r\n                          url.pathname.includes('/validate-domain');\r\n  \r\n  if (!isPaymentEndpoint && !rateLimitCheck(clientIP, rateLimitStore)) {\r\n    const errorResponse = secureJsonResponse(\r\n      { error: 'Rate limit exceeded' }, \r\n      429\r\n    );\r\n    return addSecurityAndCorsHeaders(errorResponse, origin);\r\n  }\r\n    \r\n\r\n    // Get accessibility settings\r\n    if (url.pathname === '/api/accessibility/settings' && request.method === 'GET') {\r\n      return handleGetSettings(request, env);\r\n    }\r\n    \r\n    // Update accessibility settings\r\n    if (url.pathname === '/api/accessibility/settings' && (request.method === 'POST' || request.method === 'PUT')) {\r\n      return handleUpdateSettings(request, env);\r\n    }\r\n    \r\n   \r\n   \r\n    \r\n// Get accessibility configuration for hosted script\r\nif (url.pathname === '/api/accessibility/config' && request.method === 'GET') {\r\n  return handleGetConfig(request, env);\r\n}\r\n\r\n\r\n// Domain lookup endpoint\r\nif (url.pathname === '/api/accessibility/domain-lookup' && request.method === 'GET') {\r\n  return handleDomainLookup(request, env);\r\n}\r\n\r\n// Save accessibility settings\r\nif (url.pathname === '/api/accessibility/save-settings' && request.method === 'POST') {\r\n  return handleSaveSettings(request, env);\r\n}\r\n\r\n// NEW PAYMENT ENDPOINTS\r\nif (url.pathname === '/api/accessibility/create-trial' && request.method === 'POST') {\r\n  return handleCreateTrial(request, env);\r\n}\r\nif (url.pathname === '/api/accessibility/payment-status' && request.method === 'GET') {\r\n  return handlePaymentStatus(request, env);\r\n}\r\nif (url.pathname === '/api/accessibility/validate-domain' && request.method === 'POST') {\r\n  return handleValidateDomain(request, env);\r\n}\r\nif (url.pathname === '/api/accessibility/user-data' && request.method === 'GET') {\r\n  return handleUserData(request, env);\r\n}\r\nif (url.pathname === '/api/accessibility/update-payment' && request.method === 'POST') {\r\n  return handleUpdatePayment(request, env);\r\n}\r\nif (url.pathname === '/api/accessibility/create-setup-intent' && request.method === 'POST') {\r\n  return handleCreateSetupIntent(request, env);\r\n}\r\nif (url.pathname === '/api/accessibility/create-subscription' && request.method === 'POST') {\r\n  return handleCreateSubscription(request, env);\r\n}\r\nif (url.pathname === '/api/accessibility/cancel-subscription' && request.method === 'POST') {\r\n  return handleCancelSubscription(request, env);\r\n}\r\nif (url.pathname === '/api/accessibility/subscription-status' && request.method === 'POST') {\r\n  return handleGetSubscriptionStatus(request, env);\r\n}\r\nif (url.pathname === '/api/accessibility/update-subscription-metadata' && request.method === 'POST') {\r\n  return handleUpdateSubscriptionMetadata(request, env);\r\n}\r\nif (url.pathname === '/api/accessibility/create-payment-intent' && request.method === 'POST') {\r\n  return handleCreatePaymentIntent(request, env);\r\n}\r\n\r\n    // Stripe Webhook endpoint\r\n    if (url.pathname === '/api/stripe/webhook' && request.method === 'POST') {\r\n      return handleStripeWebhook(request, env);\r\n    }\r\n    \r\n    // Webflow App Installation Webhook\r\n    if (url.pathname === '/api/webflow/app-installed' && request.method === 'POST') {\r\n      return handleWebflowAppInstallation(request, env);\r\n    }\r\n    \r\n    // Manual subscription activation\r\n    if (url.pathname === '/api/accessibility/activate-subscription' && request.method === 'POST') {\r\n      console.log('Manual activation endpoint called');\r\n      return handleActivateSubscription(request, env);\r\n    }\r\n    \r\n    // Check subscription status\r\n    if (url.pathname === '/api/accessibility/check-subscription-status' && request.method === 'GET') {\r\n      return handleCheckSubscriptionStatus(request, env);\r\n    }\r\n    \r\n    // Get subscription plan details\r\n    if (url.pathname === '/api/accessibility/get-subscription-plan' && request.method === 'GET') {\r\n      return handleGetSubscriptionPlan(request, env);\r\n    }\r\n    \r\n    // Debug: Log all unmatched routes\r\n    console.log('Unmatched route:', url.pathname, request.method);\r\n    \r\n    // Test endpoint to verify worker is working\r\n    if (url.pathname === '/api/test' && request.method === 'GET') {\r\n      return new Response(JSON.stringify({ message: 'Worker is working', timestamp: new Date().toISOString() }), {\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n    }\r\n    \r\n// Check payment status for custom domain\r\nif (url.pathname === '/api/accessibility/check-payment-status' && request.method === 'GET') {\r\n  return handleCheckPaymentStatus(request, env);\r\n}\r\n\r\n// Manual domain mapping fix endpoint\r\nif (url.pathname === '/api/accessibility/fix-domain-mapping' && request.method === 'POST') {\r\n  return handleFixDomainMapping(request, env);\r\n}\r\n\r\n// Debug payment data endpoint\r\nif (url.pathname === '/api/accessibility/debug-payment' && request.method === 'GET') {\r\n  return handleDebugPayment(request, env);\r\n}\r\n\r\n\r\n// Reactivate subscription endpoint\r\nif (url.pathname === '/api/accessibility/reactivate-subscription' && request.method === 'POST') {\r\n  return handleReactivateSubscription(request, env);\r\n}\r\n    \r\n    // Widget script with payment check\r\n    if (url.pathname === '/widget.js' && request.method === 'GET') {\r\n      return handleWidgetScript(request, env);\r\n    }\r\n    \r\n    // Setup payment method\r\n    if (url.pathname === '/api/accessibility/setup-payment' && request.method === 'POST') {\r\n      return handleSetupPayment(request, env);\r\n    }\r\n    \r\n    // Verify payment method\r\n    if (url.pathname === '/api/accessibility/verify-payment-method' && request.method === 'POST') {\r\n      return handleVerifyPaymentMethod(request, env);\r\n    }\r\n    \r\n\r\n// Save custom domain data (can be updated)\r\nif (url.pathname === '/api/accessibility/save-custom-domain' && request.method === 'POST') {\r\n    try {\r\n        const { siteId, customDomain, customization } = await request.json();\r\n        \r\n        if (!siteId || !customDomain) {\r\n            return new Response(JSON.stringify({ error: 'Missing siteId or customDomain' }), {\r\n                status: 400,\r\n                headers: { \r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Methods': 'POST, OPTIONS',\r\n                    'Access-Control-Allow-Headers': 'Content-Type'\r\n                }\r\n            });\r\n        }\r\n        \r\n        // Get existing custom domain data\r\n        const existingData = await env.ACCESSIBILITY_AUTH.get(`custom-domain-data:${siteId}`);\r\n        let existingDomainData = {};\r\n        \r\n        if (existingData) {\r\n            try {\r\n                existingDomainData = JSON.parse(existingData);\r\n            } catch (error) {\r\n                console.warn('Failed to parse existing custom domain data:', error);\r\n            }\r\n        }\r\n        \r\n        // Update custom domain data\r\n        const updatedDomainData = {\r\n            ...existingDomainData,\r\n            siteId: siteId,\r\n            customDomain: customDomain,\r\n            customization: customization || existingDomainData.customization || {},\r\n            lastUpdated: new Date().toISOString(),\r\n            lastUsed: new Date().toISOString()\r\n        };\r\n        \r\n        // Save custom domain data\r\n            await env.ACCESSIBILITY_AUTH.put(`custom-domain-data:${siteId}`, JSON.stringify(updatedDomainData));\r\n            // Also save a domain-scoped record as requested\r\n            const customDomainMirrorKey = `custom-domain:${customDomain}`;\r\n            await env.ACCESSIBILITY_AUTH.put(customDomainMirrorKey, JSON.stringify({\r\n              siteId,\r\n              customDomain,\r\n              customization: updatedDomainData.customization,\r\n              lastUpdated: new Date().toISOString(),\r\n              lastUsed: new Date().toISOString()\r\n            }));\r\n        \r\n        // Also create domain mapping for lookup\r\n        const domainKey = `domain:${customDomain}`;\r\n        await env.ACCESSIBILITY_AUTH.put(domainKey, JSON.stringify({\r\n            siteId: siteId,\r\n            customDomain: customDomain,\r\n            connectedAt: new Date().toISOString()\r\n        }), { expirationTtl: 86400 * 30 }); // 30 days\r\n        \r\n        return new Response(JSON.stringify({ success: true }), {\r\n            status: 200,\r\n            headers: { \r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Access-Control-Allow-Methods': 'POST, OPTIONS',\r\n                'Access-Control-Allow-Headers': 'Content-Type'\r\n            }\r\n        });\r\n        \r\n    } catch (error) {\r\n        return new Response(JSON.stringify({ error: 'Failed to save custom domain data' }), {\r\n            status: 500,\r\n            headers: { \r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Access-Control-Allow-Methods': 'POST, OPTIONS',\r\n                'Access-Control-Allow-Headers': 'Content-Type'\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Get authorization data (read-only, never updated)\r\nif (url.pathname === '/api/accessibility/auth-data' && request.method === 'GET') {\r\n    try {\r\n        const url = new URL(request.url);\r\n        const siteId = url.searchParams.get('siteId');\r\n        \r\n        if (!siteId) {\r\n            return new Response(JSON.stringify({ error: 'Missing siteId parameter' }), {\r\n                status: 400,\r\n                headers: { \r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Methods': 'GET, OPTIONS',\r\n                    'Access-Control-Allow-Headers': 'Content-Type'\r\n                }\r\n            });\r\n        }\r\n        \r\n        // Get authorization data from separate key (never overwritten)\r\n        const authData = await env.ACCESSIBILITY_AUTH.get(`auth-data:${siteId}`);\r\n        \r\n        if (!authData) {\r\n            return new Response(JSON.stringify({ error: 'Authorization data not found' }), {\r\n                status: 404,\r\n                headers: { \r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Methods': 'GET, OPTIONS',\r\n                    'Access-Control-Allow-Headers': 'Content-Type'\r\n                }\r\n            });\r\n        }\r\n        \r\n        const parsedData = JSON.parse(authData);\r\n        \r\n        // Return only authorization data (access token, site info, user info)\r\n        const authResponse = {\r\n            accessToken: parsedData.accessToken,\r\n            siteId: parsedData.siteId,\r\n            siteName: parsedData.siteName,\r\n            user: parsedData.user,\r\n            installedAt: parsedData.installedAt,\r\n            widgetVersion: parsedData.widgetVersion\r\n        };\r\n        \r\n        return new Response(JSON.stringify(authResponse), {\r\n            headers: { \r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Access-Control-Allow-Methods': 'GET, OPTIONS',\r\n                'Access-Control-Allow-Headers': 'Content-Type'\r\n            }\r\n        });\r\n        \r\n    } catch (error) {\r\n        return new Response(JSON.stringify({ error: 'Failed to get authorization data' }), {\r\n            status: 500,\r\n            headers: { \r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Access-Control-Allow-Methods': 'GET, OPTIONS',\r\n                'Access-Control-Allow-Headers': 'Content-Type'\r\n            }\r\n        });\r\n    }\r\n}\r\n    // Default response\r\n    return new Response('Accessibility Widget API', { \r\n      status: 200,\r\n      headers: { \r\n        'Content-Type': 'text/plain',\r\n        'Access-Control-Allow-Origin': '*'\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\n// Handle CORS preflight requests\r\nfunction handleCORS() {\r\n  const corsResponse = new Response(null, {\r\n    status: 204,\r\n    headers: {\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Access-Control-Allow-Methods': 'GET, POST, PUT, OPTIONS',\r\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\r\n      'Access-Control-Max-Age': '86400'\r\n    }\r\n  });\r\n  return addSecurityAndCorsHeaders(corsResponse, '*');\r\n}\r\n// Handle OAuth Authorization\r\nasync function handleOAuthAuthorize(request, env) {\r\n  const url = new URL(request.url);\r\n  const incomingState = url.searchParams.get(\"state\");\r\n  const siteId = url.searchParams.get(\"siteId\");\r\n  // Determine flow type and extract site ID\r\n  const isDesigner = incomingState && incomingState.startsWith(\"webflow_designer\");\r\n  const scopes = [\r\n    \"sites:read\",\r\n    \"sites:write\",\r\n    \"custom_code:read\",\r\n    \"custom_code:write\",\r\n    \"authorized_user:read\"\r\n  ];\r\n  // Use your worker's redirect URI for both flows\r\n  const redirectUri = \"https://accessibility-widget.web-8fb.workers.dev/api/auth/callback\";\r\n  const authUrl = new URL('https://webflow.com/oauth/authorize');\r\n  authUrl.searchParams.set('client_id', env.WEBFLOW_CLIENT_ID);\r\n  authUrl.searchParams.set('response_type', 'code');\r\n  authUrl.searchParams.set('redirect_uri', redirectUri);\r\n  authUrl.searchParams.set('scope', scopes.join(' '));\r\n  // Set state parameter with site ID for App Interface\r\n  if (isDesigner) {\r\n    const currentSiteId = siteId || (incomingState.includes('_') ? incomingState.split('_')[1] : null);\r\n    if (currentSiteId) {\r\n      authUrl.searchParams.set('state', `webflow_designer_${currentSiteId}`);\r\n    } else {\r\n      authUrl.searchParams.set('state', 'webflow_designer');\r\n    }\r\n  } else {\r\n    // For Apps & Integrations flow, try to get site info from referrer\r\n    const referrer = request.headers.get('referer') || '';\r\n    let siteInfo = '';\r\n    if (referrer.includes('.design.webflow.com')) {\r\n      const match = referrer.match(/([^.]+)\\.design\\.webflow\\.com/);\r\n      if (match) {\r\n        siteInfo = `_${match[1]}`;\r\n        console.log('Apps & Integrations: Including site info in state:', siteInfo);\r\n      }\r\n    }\r\n    authUrl.searchParams.set('state', `accessibility_widget${siteInfo}`);\r\n  }\r\n  return new Response(null, {\r\n    status: 302,\r\n    headers: {\r\n      'Location': authUrl.toString()\r\n    }\r\n  });\r\n}\r\n\r\n\r\nasync function handleOAuthCallback(request, env) {\r\n  const url = new URL(request.url);\r\n  const code = url.searchParams.get('code');\r\n  const state = url.searchParams.get('state');\r\n  \r\n  if (!code) {\r\n    return new Response(JSON.stringify({ error: 'No authorization code provided' }), {\r\n      status: 400,\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n  }\r\n\r\n  // Handle missing state parameter - assume Apps & Integrations flow\r\n  if (!state) {\r\n    // Continue with Apps & Integrations flow instead of throwing error\r\n  }\r\n  \r\n  try {\r\n    const isDesigner = state && state.startsWith('webflow_designer');\r\n    const isAppsIntegrations = state && state.startsWith('accessibility_widget');\r\n    const redirectUri = \"https://accessibility-widget.web-8fb.workers.dev/api/auth/callback\";\r\n    \r\n    // Extract site info from Apps & Integrations state\r\n    let appsIntegrationsSiteInfo = null;\r\n    if (isAppsIntegrations && state.includes('_')) {\r\n      const parts = state.split('_');\r\n      if (parts.length >= 3) {\r\n        appsIntegrationsSiteInfo = parts.slice(2).join('_'); // Get everything after accessibility_widget_\r\n        console.log('Apps & Integrations: Extracted site info from state:', appsIntegrationsSiteInfo);\r\n      }\r\n    }\r\n    \r\n    console.log('=== OAUTH CALLBACK DEBUG ===');\r\n    console.log('Request URL:', request.url);\r\n    console.log('Code received:', code);\r\n    console.log('State:', state);\r\n    console.log('Using redirect URI:', redirectUri);\r\n    console.log('Client ID:', env.WEBFLOW_CLIENT_ID);\r\n    console.log('Flow type:', isDesigner ? 'App Interface' : 'Apps & Integrations');\r\n    \r\n    // Extract siteId from URL parameters\r\n    const urlSiteId = url.searchParams.get('siteId');\r\n    console.log('SiteId from URL:', urlSiteId);\r\n    \r\n    // Build token exchange request body conditionally\r\n    const tokenRequestBody = {\r\n      client_id: env.WEBFLOW_CLIENT_ID,\r\n      client_secret: env.WEBFLOW_CLIENT_SECRET,\r\n      code: code,\r\n      grant_type: 'authorization_code'\r\n    };\r\n    \r\n    // Only include redirect_uri for App Interface flow\r\n    if (isDesigner) {\r\n      tokenRequestBody.redirect_uri = redirectUri;\r\n    }\r\n    \r\n    console.log('Token request body:', JSON.stringify(tokenRequestBody, null, 2));\r\n    \r\n    const tokenResponse = await fetch('https://api.webflow.com/oauth/access_token', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(tokenRequestBody)\r\n    });\r\n    \r\n    if (!tokenResponse.ok) {\r\n      const errorText = await tokenResponse.text();\r\n      console.error('Token exchange failed:', tokenResponse.status, errorText);\r\n      throw new Error(`Token exchange failed: ${tokenResponse.status} - ${errorText}`);\r\n    }\r\n    \r\n    const tokenData = await tokenResponse.json();\r\n    console.log(tokenData);\r\n    console.log('Token exchange successful');\r\n    \r\n    // Get user info\r\n    const userResponse = await fetch('https://api.webflow.com/v2/token/authorized_by', {\r\n      headers: {\r\n        'Authorization': `Bearer ${tokenData.access_token}`,\r\n        'accept-version': '2.0.0'\r\n      }\r\n    });\r\n    \r\n    if (!userResponse.ok) {\r\n      throw new Error(`User fetch failed: ${userResponse.status}`);\r\n    }\r\n    \r\n    const userData = await userResponse.json();\r\n    \r\n    // Get sites\r\n    const sitesResponse = await fetch('https://api.webflow.com/v2/sites', {\r\n      headers: {\r\n        'Authorization': `Bearer ${tokenData.access_token}`,\r\n        'accept-version': '2.0.0'\r\n      }\r\n    });\r\n    \r\n    if (!sitesResponse.ok) {\r\n      throw new Error(`Sites fetch failed: ${sitesResponse.status}`);\r\n    }\r\n    \r\n    const sitesData = await sitesResponse.json();\r\n    let sites = [];\r\n    if (sitesData.sites) {\r\n      sites = sitesData.sites;\r\n    } else if (sitesData.items) {\r\n      sites = sitesData.items;\r\n    } else if (Array.isArray(sitesData)) {\r\n      sites = sitesData;\r\n    }\r\n    \r\n    if (sites.length === 0) {\r\n      throw new Error('No Webflow sites found');\r\n    }\r\n    \r\n    // Determine the current site FIRST\r\n    let currentSite;\r\n    if (isDesigner) {\r\n      // App Interface flow - get site from state parameter\r\n      const siteIdFromState = state.includes('_') ? state.split('_')[1] : null;\r\n      if (siteIdFromState) {\r\n        currentSite = sites.find(site => site.id === siteIdFromState) || sites[0];\r\n      } else {\r\n        currentSite = sites[0];\r\n      }\r\n    } else {\r\n      // Apps & Integrations flow - determine site from URL parameter, state, or referrer\r\n      if (urlSiteId) {\r\n        // Use siteId from URL parameter if available\r\n        const foundSite = sites.find(site => site.id === urlSiteId);\r\n        if (foundSite) {\r\n          currentSite = foundSite;\r\n          console.log('Apps & Integrations: Using site from URL parameter:', currentSite.id, currentSite.shortName);\r\n        } else {\r\n          console.log('Apps & Integrations: Site not found for URL siteId:', urlSiteId);\r\n          currentSite = sites[0];\r\n        }\r\n      } else if (appsIntegrationsSiteInfo) {\r\n        const foundSite = sites.find(site => site.shortName === appsIntegrationsSiteInfo);\r\n        currentSite = foundSite || sites[0];\r\n      } else {\r\n        // Fallback: try to get site info from referrer\r\n        const referrer = request.headers.get('referer') || '';\r\n        if (referrer.includes('.design.webflow.com')) {\r\n          const match = referrer.match(/([^.]+)\\.design\\.webflow\\.com/);\r\n          if (match) {\r\n            const shortName = match[1];\r\n            const foundSite = sites.find(site => site.shortName === shortName);\r\n            currentSite = foundSite || sites[0];\r\n          } else {\r\n            currentSite = sites[0];\r\n          }\r\n        } else {\r\n          currentSite = sites[0];\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Generate JWT session token with the determined site\r\n    const userId = userData.id || userData.email;\r\n    const sessionToken = await createSessionToken({...userData, id: userId}, env, currentSite.id);\r\n    \r\n    // Handle different redirect scenarios\r\n    if (isDesigner) {\r\n      // App Interface flow - only store data for the current site\r\n      \r\n      // Store authorization data (canonical key)\r\n      await env.ACCESSIBILITY_AUTH.put(`auth-data:${currentSite.id}`, JSON.stringify({\r\n        accessToken: tokenData.access_token,\r\n        siteName: currentSite.name || currentSite.shortName,\r\n        siteId: currentSite.id,\r\n        user: userData,\r\n        email: userData.email || '',\r\n        domainUrl: '',\r\n        workspaceId: userData.workspaceId || '',\r\n        installedAt: new Date().toISOString(),\r\n        widgetVersion: '1.0.0',\r\n        lastUsed: new Date().toISOString()\r\n      }));\r\n      \r\n      // Store accessibility settings separately (can be updated)\r\n      await env.ACCESSIBILITY_AUTH.put(`accessibility-settings:${currentSite.id}`, JSON.stringify({\r\n        siteId: currentSite.id,\r\n        customization: {},\r\n        accessibilityProfiles: {},\r\n        customDomain: null,\r\n        lastUpdated: new Date().toISOString(),\r\n        lastUsed: new Date().toISOString()\r\n      }));\r\n\r\n\r\n      // App Interface flow - redirect directly to site\r\n      return new Response(null, {\r\n        status: 302,\r\n        headers: {\r\n          'Location': `https://${currentSite.shortName}.design.webflow.com?app=${env.WEBFLOW_CLIENT_ID}`\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Apps & Integrations flow - use the currentSite that was already determined\r\n    console.log('Apps & Integrations: Using determined site for data storage...');\r\n    console.log('Apps & Integrations: Storing data for site:', currentSite.id, currentSite.name || currentSite.shortName);\r\n    \r\n    // Store authorization data (canonical key)\r\n    await env.ACCESSIBILITY_AUTH.put(`auth-data:${currentSite.id}`, JSON.stringify({\r\n      accessToken: tokenData.access_token,\r\n      siteName: currentSite.name || currentSite.shortName,\r\n      siteId: currentSite.id,\r\n      user: userData,\r\n      email: userData.email || '',\r\n      domainUrl: '',\r\n      workspaceId: userData.workspaceId || '',\r\n      installedAt: new Date().toISOString(),\r\n      widgetVersion: '1.0.0',\r\n      lastUsed: new Date().toISOString()\r\n    }));\r\n    \r\n    // Initialize unified site settings (idempotent)\r\n    await mergeSiteSettings(env, currentSite.id, { siteId: currentSite.id });\r\n    // Initialize unified site settings (idempotent)\r\n    await mergeSiteSettings(env, currentSite.id, { siteId: currentSite.id });\r\n    \r\n    // Also store the Webflow subdomain mapping for this site\r\n    try {\r\n      if (currentSite.shortName) {\r\n        const webflowSubdomain = `${currentSite.shortName}.webflow.io`;\r\n        const domainKey = `domain:${webflowSubdomain}`;\r\n        \r\n        await env.ACCESSIBILITY_AUTH.put(domainKey, JSON.stringify({\r\n          siteId: currentSite.id,\r\n          domain: webflowSubdomain,\r\n          isPrimary: true,\r\n          isWebflowSubdomain: true,\r\n          connectedAt: new Date().toISOString()\r\n        }), { expirationTtl: 86400 * 30 }); // 30 days\r\n        \r\n        console.log('Apps & Integrations: Stored Webflow subdomain mapping:', webflowSubdomain, '->', currentSite.id);\r\n      }\r\n    } catch (domainError) {\r\n      console.warn('Apps & Integrations: Failed to store subdomain mapping:', domainError);\r\n    }\r\n    \r\n    // Apps & Integrations flow - redirect to site with auth data in URL params\r\n    // Get the real email from the stored KV data (not the proxy email from userData)\r\n    const storedAuthData = await env.ACCESSIBILITY_AUTH.get(`auth-data:${currentSite.id}`);\r\n    let realEmail = userData.email || '';\r\n    if (storedAuthData) {\r\n      try {\r\n        const parsed = JSON.parse(storedAuthData);\r\n        realEmail = parsed.email || userData.email || '';\r\n      } catch (e) {\r\n        console.warn('Failed to parse stored auth data:', e);\r\n      }\r\n    }\r\n    \r\n    // Direct redirect to the Webflow site\r\n    return new Response(null, {\r\n      status: 302,\r\n      headers: {\r\n        'Location': `https://${currentSite.shortName}.design.webflow.com`\r\n      }\r\n    });\r\n    \r\n    \r\n  } catch (error) {\r\n    console.error('OAuth callback error:', error);\r\n    return new Response(JSON.stringify({ \r\n      error: 'Authorization failed', \r\n      details: error.message\r\n    }), {\r\n      status: 500,\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n  }\r\n}\r\n\r\n// Handle OAuth Success Page\r\n\r\n// Handle publish accessibility settings\r\nasync function handlePublishSettings(request, env) {\r\n  const requestId = `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  console.log(`[PUBLISH] ${requestId} Starting publish request`);\r\n  \r\n  try {\r\n    // Verify authentication\r\n    const authResult = await verifyAuth(request, env);\r\n    if (!authResult) {\r\n      console.log(`[PUBLISH] ${requestId} Authentication failed`);\r\n      return new Response(JSON.stringify({ \r\n        error: \"Unauthorized\", \r\n        requestId \r\n      }), {\r\n        status: 401,\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Access-Control-Allow-Origin': '*',\r\n          'Access-Control-Allow-Methods': 'POST, OPTIONS',\r\n          'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Get siteId from URL parameter (preferred) or from auth result\r\n    const url = new URL(request.url);\r\n    const urlSiteId = url.searchParams.get('siteId');\r\n    const siteId = urlSiteId || authResult.siteId;\r\n    \r\n    console.log(`[PUBLISH] ${requestId} Using siteId: ${siteId} (from ${urlSiteId ? 'URL parameter' : 'auth result'})`);\r\n    \r\n    if (!siteId) {\r\n      console.log(`[PUBLISH] ${requestId} No siteId available`);\r\n      return new Response(JSON.stringify({ \r\n        error: \"No siteId provided\", \r\n        requestId \r\n      }), {\r\n        status: 400,\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Access-Control-Allow-Origin': '*',\r\n          'Access-Control-Allow-Methods': 'POST, OPTIONS',\r\n          'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Parse the request body\r\n    const body = await request.json();\r\n    console.log(`[PUBLISH] ${requestId} Received body:`, body);\r\n    console.log(`[PUBLISH] ${requestId} Body keys:`, Object.keys(body));\r\n    console.log(`[PUBLISH] ${requestId} Customization keys:`, body.customization ? Object.keys(body.customization) : 'No customization');\r\n    \r\n        // Extract data from frontend\r\n    const { \r\n      customization, \r\n      accessibilityProfiles, \r\n      customDomain, \r\n      publishedAt,\r\n      interfaceLanguage\r\n    } = body;\r\n    \r\n        // Debug authResult\r\n    console.log(`[PUBLISH] ${requestId} Auth result:`, JSON.stringify(authResult, null, 2));\r\n    console.log(`[PUBLISH] ${requestId} User data from auth:`, authResult.userData);\r\n    console.log(`[PUBLISH] ${requestId} Site name from auth:`, authResult.siteName);\r\n    \r\n    // Get existing accessibility settings (separate from auth data)\r\n    const existingSettingsData = await env.ACCESSIBILITY_AUTH.get(`accessibility-settings:${siteId}`);\r\n    let existingSettings = {};\r\n    \r\n    if (existingSettingsData) {\r\n      try {\r\n        existingSettings = JSON.parse(existingSettingsData);\r\n        console.log(`[PUBLISH] ${requestId} Found existing accessibility settings`);\r\n      } catch (error) {\r\n        console.warn(`[PUBLISH] ${requestId} Failed to parse existing accessibility settings:`, error);\r\n      }\r\n    }\r\n    \r\n    // Get authorization data separately (never overwritten)\r\n    const authData = await env.ACCESSIBILITY_AUTH.get(`auth-data:${siteId}`);\r\n    let authInfo = {};\r\n    if (authData) {\r\n      try {\r\n        authInfo = JSON.parse(authData);\r\n        console.log(`[PUBLISH] ${requestId} Found authorization data`);\r\n      } catch (error) {\r\n        console.warn(`[PUBLISH] ${requestId} Failed to parse authorization data:`, error);\r\n      }\r\n    }\r\n    // Get accessToken from auth data\r\n    let accessToken = authInfo.accessToken;\r\n    console.log(`[PUBLISH] ${requestId} Access token status:`, !!accessToken);\r\n    \r\n    // Create accessibility settings data (separate from auth data)\r\n    const accessibilityData = {\r\n      siteId: siteId,\r\n      customization: {\r\n        ...existingSettings.customization, // Preserve existing customization\r\n        ...customization, // Override with new customization\r\n        interfaceLanguage: interfaceLanguage || customization?.interfaceLanguage || existingSettings.customization?.interfaceLanguage\r\n      },\r\n      accessibilityProfiles: accessibilityProfiles || existingSettings.accessibilityProfiles,\r\n      customDomain: customDomain || existingSettings.customDomain,\r\n      publishedAt: publishedAt,\r\n      lastUpdated: new Date().toISOString(),\r\n      lastUsed: new Date().toISOString()\r\n    };\r\n    \r\n    // Store accessibility settings separately\r\n    const accessibilityKey = `accessibility-settings:${siteId}`;\r\n    console.log(`[PUBLISH] ${requestId} Storing accessibility settings with key: ${accessibilityKey}`);\r\n    console.log(`[PUBLISH] ${requestId} Accessibility data to store:`, JSON.stringify(accessibilityData, null, 2));\r\n    \r\n    await env.ACCESSIBILITY_AUTH.put(accessibilityKey, JSON.stringify(accessibilityData));\r\n    \r\n    // Also store domain mappings for easy lookup\r\n    // Get the site's domains from Webflow API\r\n    try {\r\n      const domainsResponse = await fetch(`https://api.webflow.com/v2/sites/${siteId}/domains`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${accessToken}`,\r\n          'accept-version': '1.0.0'\r\n        }\r\n      });\r\n      \r\n      if (domainsResponse.ok) {\r\n        const domainsData = await domainsResponse.json();\r\n        console.log(`[PUBLISH] ${requestId} Found domains:`, domainsData);\r\n        \r\n        // Store mapping for each domain\r\n        for (const domain of domainsData.domains || []) {\r\n          const domainKey = `domain:${domain.name}`;\r\n          await env.ACCESSIBILITY_AUTH.put(domainKey, JSON.stringify({\r\n            siteId: siteId,\r\n            domain: domain.name,\r\n            isPrimary: domain.isPrimary,\r\n            connectedAt: new Date().toISOString()\r\n          }), { expirationTtl: 86400 * 30 }); // 30 days\r\n          \r\n          console.log(`[PUBLISH] ${requestId} Stored domain mapping: ${domain.name} -> ${siteId}`);\r\n        }\r\n      }\r\n    } catch (domainError) {\r\n      console.warn(`[PUBLISH] ${requestId} Failed to get domains:`, domainError);\r\n    }\r\n    \r\n    // IMPORTANT: Also store the Webflow subdomain mapping\r\n    // This is crucial for sites that only have Webflow subdomains (like test-dbae38.webflow.io)\r\n    try {\r\n      // Get site info to get the shortName for Webflow subdomain\r\n      const siteResponse = await fetch(`https://api.webflow.com/v2/sites/${siteId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${accessToken}`,\r\n          'accept-version': '2.0.0'\r\n        }\r\n      });\r\n      \r\n      if (siteResponse.ok) {\r\n        const siteData = await siteResponse.json();\r\n        console.log(`[PUBLISH] ${requestId} Site data:`, siteData);\r\n        \r\n        if (siteData.shortName) {\r\n          const webflowSubdomain = `${siteData.shortName}.webflow.io`;\r\n          const domainKey = `domain:${webflowSubdomain}`;\r\n          \r\n          await env.ACCESSIBILITY_AUTH.put(domainKey, JSON.stringify({\r\n            siteId: siteId,\r\n            domain: webflowSubdomain,\r\n            isPrimary: true, // Webflow subdomain is always primary\r\n            isWebflowSubdomain: true,\r\n            connectedAt: new Date().toISOString()\r\n          }), { expirationTtl: 86400 * 30 }); // 30 days\r\n          \r\n          console.log(`[PUBLISH] ${requestId} Stored Webflow subdomain mapping: ${webflowSubdomain} -> ${siteId}`);\r\n        }\r\n      }\r\n    } catch (siteError) {\r\n      console.warn(`[PUBLISH] ${requestId} Failed to get site info for subdomain mapping:`, siteError);\r\n    }\r\n    \r\n    // If custom domain is provided, create a domain mapping\r\n    if (customDomain) {\r\n      const domainKey = `domain:${customDomain}`;\r\n      await env.ACCESSIBILITY_AUTH.put(domainKey, JSON.stringify({\r\n        siteId: siteId,\r\n        customDomain: customDomain,\r\n        connectedAt: new Date().toISOString()\r\n      }), { expirationTtl: 86400 });\r\n    }\r\n    \r\n    console.log(`[PUBLISH] ${requestId} Settings published successfully`);\r\n    \r\n    return new Response(JSON.stringify({\r\n      success: true,\r\n      message: \"Accessibility settings published successfully\",\r\n      data: {\r\n        customization: accessibilityData.customization,\r\n        accessibilityProfiles: accessibilityData.accessibilityProfiles,\r\n        customDomain: accessibilityData.customDomain,\r\n        publishedAt: accessibilityData.publishedAt\r\n      },\r\n      requestId\r\n    }), {\r\n      status: 200,\r\n      headers: { \r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Methods': 'POST, OPTIONS',\r\n        'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n      }\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.error(`[PUBLISH] ${requestId} Error in publish handler:`, error);\r\n    return new Response(JSON.stringify({\r\n      error: \"Failed to publish accessibility settings\",\r\n      details: String(error),\r\n      requestId\r\n    }), {\r\n      status: 500,\r\n      headers: { \r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Methods': 'POST, OPTIONS',\r\n        'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// Get accessibility settings - UPDATED TO USE ONLY PUBLISHED SETTINGS\r\nasync function handleGetSettings(request, env) {\r\n  const origin = request.headers.get('origin');\r\n  \r\n  const authResult = await verifyAuth(request, env);\r\n  if (!authResult) {\r\n    const errorResponse = secureJsonResponse({ error: 'Unauthorized' }, 401);\r\n    return addSecurityAndCorsHeaders(errorResponse, origin);\r\n  }\r\n  \r\n  // Get siteId from URL parameter (preferred) or from auth result\r\n  const url = new URL(request.url);\r\n  const urlSiteId = url.searchParams.get('siteId');\r\n  const siteId = urlSiteId || authResult.siteId;\r\n  \r\n  if (!siteId) {\r\n    const errorResponse = secureJsonResponse({ error: 'No siteId provided' }, 400);\r\n    return addSecurityAndCorsHeaders(errorResponse, origin);\r\n  }\r\n  \r\n  // Get accessibility settings from separate key\r\n  const accessibilityData = await env.ACCESSIBILITY_AUTH.get(`accessibility-settings:${siteId}`);\r\n  if (!accessibilityData) {\r\n    const errorResponse = secureJsonResponse({ error: 'Accessibility settings not found' }, 404);\r\n    return addSecurityAndCorsHeaders(errorResponse, origin);\r\n  }\r\n  \r\n  // Get authorization data for site info\r\n  const authData = await env.ACCESSIBILITY_AUTH.get(`auth-data:${siteId}`);\r\n  let authInfo = {};\r\n  if (authData) {\r\n    try {\r\n      authInfo = JSON.parse(authData);\r\n    } catch (error) {\r\n      console.warn('Failed to parse authorization data:', error);\r\n    }\r\n  }\r\n  \r\n  const settings = JSON.parse(accessibilityData);\r\n  const successResponse = secureJsonResponse({\r\n    customization: settings.customization,\r\n    accessibilityProfiles: settings.accessibilityProfiles,\r\n    customDomain: settings.customDomain,\r\n    siteId: siteId,\r\n    siteName: authInfo.siteName,\r\n    installedAt: authInfo.installedAt,\r\n    lastUsed: settings.lastUsed,\r\n    widgetVersion: authInfo.widgetVersion,\r\n    publishedAt: settings.publishedAt\r\n  });\r\n  return addSecurityAndCorsHeaders(successResponse, origin);\r\n}\r\n\r\n// Handle Token Authentication - UPDATED TO SUPPORT FIRST-TIME INSTALLS\r\nasync function handleTokenAuth(request, env) {\r\n  try {\r\n    console.log('=== TOKEN AUTH DEBUG START ===');\r\n    console.log('Request method:', request.method);\r\n    console.log('Request URL:', request.url);\r\n    console.log('Request headers:', Object.fromEntries(request.headers.entries()));\r\n    \r\n    const { siteId, idToken } = await request.json();\r\n    console.log('Parsed request body:', { siteId: !!siteId, idToken: !!idToken });\r\n    \r\n    if (!siteId || !idToken) {\r\n      console.error('Missing required parameters');\r\n      return new Response(JSON.stringify({ error: 'Missing siteId or idToken' }), {\r\n        status: 400,\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Access-Control-Allow-Origin': '*',\r\n          'Access-Control-Allow-Methods': 'POST, OPTIONS',\r\n          'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Always decode ID token directly - no Webflow API calls needed\r\n    console.log('Decoding ID token directly for authentication...');\r\n    let userData;\r\n    \r\n    try {\r\n      const tokenParts = idToken.split('.');\r\n      if (tokenParts.length !== 3) {\r\n        throw new Error('Invalid ID token format');\r\n      }\r\n      \r\n      const payload = JSON.parse(atob(tokenParts[1]));\r\n      console.log('ID token payload:', payload);\r\n      \r\n      // Get real email from stored auth data instead of using proxy email from ID token\r\n      const storedAuthData = await env.ACCESSIBILITY_AUTH.get(`auth-data:${siteId}`);\r\n      let realEmail = payload.email || '';\r\n      let realFirstName = payload.given_name || payload.name || 'User';\r\n      \r\n      if (storedAuthData) {\r\n        try {\r\n          const parsed = JSON.parse(storedAuthData);\r\n          realEmail = parsed.email || payload.email || '';\r\n          realFirstName = parsed.user?.firstName || payload.given_name || payload.name || 'User';\r\n        } catch (e) {\r\n          console.warn('Failed to parse stored auth data:', e);\r\n        }\r\n      }\r\n      \r\n      userData = {\r\n        id: payload.sub || payload.user_id,\r\n        email: realEmail,\r\n        firstName: realFirstName\r\n      };\r\n      \r\n      console.log('Decoded user data from ID token:', JSON.stringify(userData, null, 2));\r\n      \r\n      // Validate required fields - only ID is required\r\n      if (!userData.id) {\r\n        console.error('Missing required user ID in ID token:', userData);\r\n        return new Response(JSON.stringify({ error: 'Invalid user ID in ID token' }), {\r\n          status: 401,\r\n          headers: { \r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Access-Control-Allow-Methods': 'POST, OPTIONS',\r\n            'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n          }\r\n        });\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('ID token verification failed:', error);\r\n      return new Response(JSON.stringify({ error: 'Invalid ID token' }), {\r\n        status: 401,\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Access-Control-Allow-Origin': '*',\r\n          'Access-Control-Allow-Methods': 'POST, OPTIONS',\r\n          'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Create session token\r\n    console.log('Creating session token...');\r\n    const sessionToken = await createSessionToken(userData, env, siteId);\r\n    console.log('Session token created successfully');\r\n    \r\n    // Try to get accessToken from existing published settings using siteId\r\n    let accessToken = null;\r\n    const existingPublishedData = await env.ACCESSIBILITY_AUTH.get(`accessibility-settings:${siteId}`);\r\n    if (existingPublishedData) {\r\n      const parsedData = JSON.parse(existingPublishedData);\r\n      accessToken = parsedData.accessToken;\r\n      console.log('Found accessToken from existing published settings:', !!accessToken);\r\n    }\r\n    \r\n    // Store user authentication\r\n    await env.ACCESSIBILITY_AUTH.put(`user-auth:${userData.id}`, JSON.stringify({\r\n      accessToken: accessToken, // Use found accessToken or null\r\n      userData: {\r\n        id: userData.id,\r\n        email: userData.email,\r\n        firstName: userData.firstName\r\n      },\r\n      siteId,\r\n      widgetType: 'accessibility',\r\n      authType: 'silent_auth'\r\n    }), { expirationTtl: 86400 });\r\n    \r\n    // Check if authorization data exists, if not create initial auth data\r\n    const authData = await env.ACCESSIBILITY_AUTH.get(`auth-data:${siteId}`);\r\n    if (!authData) {\r\n      console.log('No authorization data found, creating initial auth data...');\r\n      await env.ACCESSIBILITY_AUTH.put(`auth-data:${siteId}`, JSON.stringify({\r\n        accessToken: null, // No access token for silent auth\r\n        siteName: 'Unknown Site', // Will be updated when user publishes\r\n        siteId: siteId,\r\n        user: userData,\r\n        installedAt: new Date().toISOString(),\r\n        widgetVersion: '1.0.0',\r\n        lastUsed: new Date().toISOString()\r\n      }));\r\n      console.log('Initial authorization data created');\r\n    } else {\r\n      console.log('Authorization data already exists, skipping creation');\r\n    }\r\n    \r\n    // Check if accessibility settings exist, if not create initial settings\r\n    const accessibilityData = await env.ACCESSIBILITY_AUTH.get(`accessibility-settings:${siteId}`);\r\n    if (!accessibilityData) {\r\n      console.log('No accessibility settings found, creating initial settings...');\r\n      await env.ACCESSIBILITY_AUTH.put(`accessibility-settings:${siteId}`, JSON.stringify({\r\n        siteId: siteId,\r\n        customization: {},\r\n        accessibilityProfiles: {},\r\n        customDomain: null,\r\n        lastUpdated: new Date().toISOString(),\r\n        lastUsed: new Date().toISOString()\r\n      }));\r\n      console.log('Initial accessibility settings created');\r\n    } else {\r\n      console.log('Accessibility settings already exist, skipping creation');\r\n    }\r\n    \r\n    console.log('User authentication stored');\r\n    console.log('=== TOKEN AUTH DEBUG END ===');\r\n    \r\n    // Get real email from stored auth data (not proxy email from userData)\r\n    const storedAuthData = await env.ACCESSIBILITY_AUTH.get(`auth-data:${siteId}`);\r\n    let realEmail = userData.email || '';\r\n    let realFirstName = userData.firstName || 'User';\r\n    \r\n    if (storedAuthData) {\r\n      try {\r\n        const parsed = JSON.parse(storedAuthData);\r\n        realEmail = parsed.email || userData.email || '';\r\n        realFirstName = parsed.user?.firstName || userData.firstName || 'User';\r\n      } catch (e) {\r\n        console.warn('Failed to parse stored auth data:', e);\r\n      }\r\n    }\r\n    \r\n    return new Response(JSON.stringify({\r\n      sessionToken: sessionToken.token,\r\n      email: realEmail,\r\n      firstName: realFirstName,\r\n      exp: sessionToken.exp,\r\n      widgetType: 'accessibility'\r\n    }), {\r\n      headers: { \r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Methods': 'POST, OPTIONS',\r\n        'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n      }\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.error('Token auth error:', error);\r\n    return new Response(JSON.stringify({ \r\n      error: 'Authentication failed',\r\n      details: error.message \r\n    }), {\r\n      status: 500,\r\n      headers: { \r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Methods': 'POST, OPTIONS',\r\n        'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// Update accessibility settings - UPDATED TO USE PUBLISHED SETTINGS\r\nasync function handleUpdateSettings(request, env) {\r\n  const origin = request.headers.get('origin');\r\n  \r\n  const authResult = await verifyAuth(request, env);\r\n  if (!authResult) {\r\n    const errorResponse = secureJsonResponse({ error: 'Unauthorized' }, 401);\r\n    return addSecurityAndCorsHeaders(errorResponse, origin);\r\n  }\r\n  \r\n  const { siteId } = authResult;\r\n  const newSettings = await request.json();\r\n  \r\n  // Sanitize input data\r\n  const sanitizedSettings = {};\r\n  for (const [key, value] of Object.entries(newSettings)) {\r\n    if (typeof value === 'string') {\r\n      sanitizedSettings[key] = sanitizeInput(value);\r\n    } else if (typeof value === 'object' && value !== null) {\r\n      // Recursively sanitize object values\r\n      sanitizedSettings[key] = {};\r\n      for (const [subKey, subValue] of Object.entries(value)) {\r\n        if (typeof subValue === 'string') {\r\n          sanitizedSettings[key][subKey] = sanitizeInput(subValue);\r\n        } else {\r\n          sanitizedSettings[key][subKey] = subValue;\r\n        }\r\n      }\r\n    } else {\r\n      sanitizedSettings[key] = value;\r\n    }\r\n  }\r\n  \r\n  // Get existing accessibility settings\r\n  const accessibilityData = await env.ACCESSIBILITY_AUTH.get(`accessibility-settings:${siteId}`);\r\n  if (!accessibilityData) {\r\n    const errorResponse = secureJsonResponse({ error: 'Accessibility settings not found' }, 404);\r\n    return addSecurityAndCorsHeaders(errorResponse, origin);\r\n  }\r\n  \r\n  const settings = JSON.parse(accessibilityData);\r\n  settings.accessibilitySettings = { ...settings.accessibilitySettings, ...sanitizedSettings };\r\n  settings.lastUpdated = new Date().toISOString();\r\n  settings.lastUsed = new Date().toISOString();\r\n  \r\n  await env.ACCESSIBILITY_AUTH.put(`accessibility-settings:${siteId}`, JSON.stringify(settings));\r\n  \r\n  const successResponse = secureJsonResponse({\r\n    success: true,\r\n    settings: settings.accessibilitySettings,\r\n    lastUpdated: settings.lastUpdated\r\n  });\r\n  return addSecurityAndCorsHeaders(successResponse, origin);\r\n}\r\n\r\n// Verify authentication\r\nasync function handleVerifyAuth(request, env) {\r\n  const authResult = await verifyAuth(request, env);\r\n  \r\n  return new Response(JSON.stringify({\r\n    authenticated: !!authResult,\r\n    user: authResult?.userData || null\r\n  }), {\r\n    headers: { \r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Access-Control-Allow-Methods': 'GET, OPTIONS',\r\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n    }\r\n  });\r\n}\r\n\r\n\r\n// Register Script - Using actual Webflow API\r\nasync function handleRegisterScript(request, env) {\r\n  try {\r\n    console.log('=== REGISTER SCRIPT DEBUG START ===');\r\n    \r\n    // Get siteId from URL parameters\r\n    const url = new URL(request.url);\r\n    const siteIdFromUrl = url.searchParams.get('siteId');\r\n    console.log('SiteId from URL:', siteIdFromUrl);\r\n\r\n    const authResult = await verifyAuth(request, env);\r\n    if (!authResult) {\r\n      console.log('Authentication failed in register script');\r\n      return new Response(JSON.stringify({ error: 'Authentication failed' }), {\r\n        status: 401,\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Access-Control-Allow-Origin': '*'\r\n        }\r\n      });\r\n    }\r\n    console.log('Authentication successful, siteId from auth:', authResult.siteId);\r\n    \r\n    // Get access token from authorization data using the new key structure\r\n    let accessToken = null;\r\n    const authData = await env.ACCESSIBILITY_AUTH.get(`auth-data:${siteIdFromUrl}`);\r\n    if (authData) {\r\n      const parsedAuthData = JSON.parse(authData);\r\n      accessToken = parsedAuthData.accessToken;\r\n      console.log('Found access token from auth-data:', !!accessToken);\r\n    } else {\r\n      console.log('No auth-data found for siteId:', siteIdFromUrl);\r\n    }\r\n    \r\n    console.log('Access token status:', !!accessToken);\r\n    \r\n    // If still no access token, skip script registration\r\n    if (!accessToken) {\r\n      console.log('No access token available - skipping script registration');\r\n      return new Response(JSON.stringify({\r\n        success: true,\r\n        message: \"Script registration skipped - no access token available\",\r\n        skipApplyScript: true\r\n      }), {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Access-Control-Allow-Origin': '*'\r\n        }\r\n      });\r\n    }\r\n    \r\n    const scriptUrl = 'https://cdn.jsdelivr.net/gh/snm62/accessibility-test@255a604/accessibility-widget.js';\r\n    console.log(accessToken);\r\n    // Check if script is already registered - CORRECTED: Use exact match\r\n    const existingScriptsResponse = await fetch(`https://api.webflow.com/v2/sites/${siteIdFromUrl}/registered_scripts`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'accept-version': '2.0.0'\r\n      }\r\n    });\r\n    if (existingScriptsResponse.ok) {\r\n      const existingScripts = await existingScriptsResponse.json();\r\n      // CORRECTED: Use exact match instead of includes\r\n      const existingScript = existingScripts.registeredScripts?.find(script =>\r\n        script.hostedLocation === scriptUrl  // Exact match\r\n      );\r\n      if (existingScript) {\r\n        console.log('Script already registered:', existingScript.id);\r\n        return new Response(JSON.stringify({\r\n          success: true,\r\n          message: \"Script already registered\",\r\n          result: existingScript,\r\n          skipApplyScript: true  // ADDED: Flag to skip apply script in frontend\r\n        }), {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*'\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n   \r\n    const scriptResponse = await fetch(scriptUrl);\r\n    const scriptContent = await scriptResponse.text();\r\n    const scriptBuffer = new TextEncoder().encode(scriptContent);\r\n    const hashBuffer = await crypto.subtle.digest('SHA-384', scriptBuffer);\r\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n    const hashBase64 = btoa(String.fromCharCode.apply(null, hashArray));\r\n    const integrityHash = `sha384-${hashBase64}`;\r\n    \r\n    console.log('Generated SRI hash:', integrityHash);\r\n    \r\n    // Register the script with Webflow\r\n    const registerResponse = await fetch(`https://api.webflow.com/v2/sites/${siteIdFromUrl}/registered_scripts/hosted`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'Content-Type': 'application/json',\r\n        'accept-version': '2.0.0'\r\n      },\r\n      body: JSON.stringify({\r\n        displayName: `ContrastKit${Date.now()}`,\r\n        scriptUrl: scriptUrl,\r\n        version: '1.0.0',\r\n        hostedLocation: scriptUrl,\r\n        integrityHash: integrityHash,\r\n        canCopy: false,\r\n        isRequired: false\r\n      })\r\n    });\r\n    \r\n    console.log('Webflow API response status:', registerResponse.status);\r\n    \r\n    if (!registerResponse.ok) {\r\n      const errorText = await registerResponse.text();\r\n      console.error('Script registration failed:', registerResponse.status, errorText);\r\n      throw new Error(`Script registration failed: ${registerResponse.status} - ${errorText}`);\r\n    }\r\n    \r\n    const scriptResult = await registerResponse.json();\r\n    console.log('Script registered successfully:', JSON.stringify(scriptResult, null, 2));\r\n    console.log('=== REGISTER SCRIPT DEBUG END ===');\r\n    \r\n    return new Response(JSON.stringify({\r\n      success: true,\r\n      result: scriptResult\r\n    }), {\r\n      headers: { \r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*'\r\n      }\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.error('Register script error:', error);\r\n    console.error('Error details:', error.message, error.stack);\r\n    return new Response(JSON.stringify({ \r\n      error: 'Failed to register script',\r\n      details: error.message \r\n    }), {\r\n      status: 500,\r\n      headers: { \r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*'\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// Apply Script\r\nasync function handleApplyScript(request, env) {\r\n  try {\r\n    const authResult = await verifyAuth(request, env);\r\n    if (!authResult) {\r\n      return new Response(JSON.stringify({ error: 'Authentication failed' }), {\r\n        status: 401,\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Access-Control-Allow-Origin': '*'\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Get siteId from URL parameter (preferred) or from auth result\r\n    const url = new URL(request.url);\r\n    const urlSiteId = url.searchParams.get('siteId');\r\n    const siteId = urlSiteId || authResult.siteId;\r\n    \r\n    if (!siteId) {\r\n      return new Response(JSON.stringify({ error: 'No siteId provided' }), {\r\n        status: 400,\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Access-Control-Allow-Origin': '*'\r\n        }\r\n      });\r\n    }\r\n    \r\n    const requestBody = await request.json();\r\n    const { targetType, scriptId, location, version } = requestBody;\r\n    console.log(\"script request body:\", requestBody);\r\n    \r\n    // Get access token from authorization data\r\n    let accessToken = null;\r\n    const authData = await env.ACCESSIBILITY_AUTH.get(`auth-data:${siteId}`);\r\n    if (authData) {\r\n      const parsedAuthData = JSON.parse(authData);\r\n      accessToken = parsedAuthData.accessToken;\r\n    }\r\n    \r\n    if (!accessToken) {\r\n      return new Response(JSON.stringify({ error: 'No access token available' }), {\r\n        status: 401,\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Access-Control-Allow-Origin': '*'\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Get existing custom code\r\n    const existingResponse = await fetch(`https://api.webflow.com/v2/sites/${siteId}/custom_code`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'accept-version': '2.0.0'\r\n      }\r\n    });\r\n    console.log(\"existing response status:\", existingResponse.status);\r\n\r\n    const already_registered_scripts = await fetch(`https://api.webflow.com/v2/sites/${siteId}/registered_scripts`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        \r\n      }\r\n    });\r\n    console.log(already_registered_scripts.registeredScripts,\"already registered script\");\r\n    let existingScripts = [];\r\n    if (existingResponse.ok) {\r\n      const existingData = await existingResponse.json();\r\n      existingScripts = existingData.scripts || [];\r\n    }\r\n    \r\n        // Filter out duplicates - remove any existing accessibility widget scripts\r\n    // Filter out duplicates - remove ALL accessibility widget scripts and any with same ID\r\n    const scriptUrl = 'https://cdn.jsdelivr.net/gh/snm62/accessibility-test@255a604/accessibility-widget.js';\r\n\r\n    const existingAccessibilityScript = existingScripts.find(script => \r\n      script.scriptUrl === scriptUrl\r\n      \r\n    );\r\n    console.log(existingAccessibilityScript);\r\n    \r\n    if (existingAccessibilityScript) {\r\n      console.log(\"Exact same script already exists, not adding duplicate\");\r\n      return new Response(JSON.stringify({\r\n        success: true,\r\n        message: \"Script already exists\",\r\n        result: existingAccessibilityScript\r\n      }), {\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Access-Control-Allow-Origin': '*'\r\n        }\r\n      });\r\n    }\r\n\r\n    const isAccessibilityScript = (url) => {\r\n      return (\r\n        url &&\r\n        (url === scriptUrl ||                // exact match\r\n         url.includes('snm-accessibility-widget') || // any version of this widget\r\n         url.includes('accessibility-widget'))\r\n      );\r\n    };\r\n     \r\n    const filteredScripts = existingScripts.filter(script =>\r\n      !isAccessibilityScript(script.scriptUrl)\r\n    );\r\n    \r\n    // Add new script\r\n    const newScript = {\r\n      id: scriptId,\r\n      version: version,\r\n      location: 'header',\r\n      \r\n    };\r\n    \r\n    filteredScripts.push(newScript);\r\n    \r\n    console.log(\"Scripts to send to custom_code API:\", JSON.stringify(filteredScripts, null, 2));\r\n    \r\n    // Update custom code\r\n    const updateResponse = await fetch(`https://api.webflow.com/v2/sites/${siteId}/custom_code`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'Content-Type': 'application/json',\r\n        'accept-version': '2.0.0'\r\n      },\r\n      body: JSON.stringify({\r\n        scripts: filteredScripts\r\n      })\r\n    });\r\n    console.log(\"update response status:\", updateResponse.status);\r\n    if (!updateResponse.ok) {\r\n      const errorText = await updateResponse.text();\r\n      console.error('Script application failed:', updateResponse.status, errorText);\r\n      throw new Error(`Script application failed: ${updateResponse.status} - ${errorText}`);\r\n    }\r\n    \r\n    const result = await updateResponse.json();\r\n    \r\n    return new Response(JSON.stringify({\r\n      success: true,\r\n      result: {\r\n        ...result,\r\n        scriptUrl: newScript.scriptUrl\r\n      }\r\n    }), {\r\n      headers: { \r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*'\r\n      }\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.error('Apply script error:', error);\r\n    return new Response(JSON.stringify({ error: 'Failed to apply script' }), {\r\n      status: 500,\r\n      headers: { \r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*'\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// Helper function to verify authentication\r\nasync function verifyAuth(request, env) {\r\n  const authHeader = request.headers.get('authorization');\r\n  if (!authHeader) return null;\r\n  \r\n  const token = authHeader.split(' ')[1];\r\n  if (!token) return null;\r\n  \r\n  try {\r\n    // Verify JWT token\r\n    const payload = await verifyJWT(token, env.WEBFLOW_CLIENT_SECRET);\r\n    const userId = payload.user.id;\r\n    \r\n    // Get user data from KV\r\n    const userData = await env.ACCESSIBILITY_AUTH.get(`user-auth:${userId}`);\r\n    if (!userData) return null;\r\n    \r\n    const { accessToken, userData: user, siteId } = JSON.parse(userData);\r\n    \r\n    // Get site name from the site-specific data\r\n    let siteName;\r\n    try {\r\n      const siteData = await env.ACCESSIBILITY_AUTH.get(`accessibility-settings:${siteId}`);\r\n      if (siteData) {\r\n        const parsedSiteData = JSON.parse(siteData);\r\n        siteName = parsedSiteData.siteName;\r\n      }\r\n    } catch (error) {\r\n      console.warn('Failed to get site name:', error);\r\n    }\r\n    \r\n    return {\r\n      accessToken,\r\n      userData: user,\r\n      siteId,\r\n      siteName\r\n    };\r\n  } catch (error) {\r\n    console.error('Auth verification error:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n// Create JWT session token\r\nasync function createSessionToken(user, env,siteId=null) {\r\n  const header = {\r\n    alg: 'HS256',\r\n    typ: 'JWT'\r\n  };\r\n  \r\n  const payload = {\r\n    user: user,\r\n    siteId:siteId,\r\n    exp: Math.floor(Date.now() / 1000) + (24 * 60 * 60)\r\n     // 24 hours\r\n  };\r\n  \r\n  const encodedHeader = base64UrlEncode(JSON.stringify(header));\r\n  const encodedPayload = base64UrlEncode(JSON.stringify(payload));\r\n  \r\n  const signature = await signJWT(\r\n    `${encodedHeader}.${encodedPayload}`,\r\n    env.WEBFLOW_CLIENT_SECRET\r\n  );\r\n  \r\n  return {\r\n    token: `${encodedHeader}.${encodedPayload}.${signature}`,\r\n    exp: payload.exp\r\n  };\r\n}\r\n\r\n// Verify JWT token\r\nasync function verifyJWT(token, secret) {\r\n  const parts = token.split('.');\r\n  if (parts.length !== 3) throw new Error('Invalid JWT format');\r\n  \r\n  const [header, payload, signature] = parts;\r\n  \r\n  // Verify signature\r\n  const expectedSignature = await signJWT(`${header}.${payload}`, secret);\r\n  if (signature !== expectedSignature) {\r\n    throw new Error('Invalid signature');\r\n  }\r\n  \r\n  // Check expiration\r\n  const decodedPayload = JSON.parse(base64UrlDecode(payload));\r\n  if (decodedPayload.exp < Math.floor(Date.now() / 1000)) {\r\n    throw new Error('Token expired');\r\n  }\r\n  \r\n  return decodedPayload;\r\n}\r\n\r\n// Sign JWT\r\nasync function signJWT(data, secret) {\r\n  const key = await crypto.subtle.importKey(\r\n    'raw',\r\n    new TextEncoder().encode(secret),\r\n    { name: 'HMAC', hash: 'SHA-256' },\r\n    false,\r\n    ['sign']\r\n  );\r\n  \r\n  const signature = await crypto.subtle.sign('HMAC', key, new TextEncoder().encode(data));\r\n  return base64UrlEncode(new Uint8Array(signature));\r\n}\r\n\r\n// Base64 URL encoding helpers\r\nfunction base64UrlEncode(str) {\r\n  return btoa(str)\r\n    .replace(/\\+/g, '-')\r\n    .replace(/\\//g, '_')\r\n    .replace(/=/g, '');\r\n}\r\n\r\nfunction base64UrlDecode(str) {\r\n  str += '='.repeat((4 - str.length % 4) % 4);\r\n  str = str.replace(/-/g, '+').replace(/_/g, '/');\r\n  return atob(str);\r\n}\r\n\r\n// Get accessibility configuration for hosted script\r\nasync function handleGetConfig(request, env) {\r\n  const origin = request.headers.get('origin');\r\n  \r\n  try {\r\n    const url = new URL(request.url);\r\n    const siteId = url.searchParams.get('siteId');\r\n    \r\n    if (!siteId) {\r\n      const errorResponse = secureJsonResponse({ \r\n        error: 'Missing siteId parameter' \r\n      }, 400);\r\n      return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    }\r\n    \r\n    // Get accessibility settings from separate key\r\n    const accessibilityKey = `accessibility-settings:${siteId}`;\r\n    const accessibilityData = await env.ACCESSIBILITY_AUTH.get(accessibilityKey);\r\n    \r\n    if (!accessibilityData) {\r\n      const errorResponse = secureJsonResponse({ \r\n        error: 'Accessibility settings not found' \r\n      }, 404);\r\n      return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    }\r\n    \r\n    // Get authorization data for widget version\r\n    const authData = await env.ACCESSIBILITY_AUTH.get(`auth-data:${siteId}`);\r\n    let authInfo = {};\r\n    if (authData) {\r\n      try {\r\n        authInfo = JSON.parse(authData);\r\n      } catch (error) {\r\n        console.warn('Failed to parse authorization data:', error);\r\n      }\r\n    }\r\n    \r\n    const settings = JSON.parse(accessibilityData);\r\n    \r\n    // Return only the customization data needed by the widget\r\n    const config = {\r\n      customization: settings.customization,\r\n      accessibilityProfiles: settings.accessibilityProfiles,\r\n      siteId: siteId,\r\n      publishedAt: settings.publishedAt,\r\n      widgetVersion: authInfo.widgetVersion || '1.0.0'\r\n    };\r\n    \r\n    const successResponse = secureJsonResponse(config);\r\n    const responseWithHeaders = addSecurityAndCorsHeaders(successResponse, origin);\r\n    \r\n    // Add cache headers\r\n    const headers = new Headers(responseWithHeaders.headers);\r\n    headers.set('Cache-Control', 'public, max-age=300'); // Cache for 5 minutes\r\n    \r\n    return new Response(responseWithHeaders.body, {\r\n      status: responseWithHeaders.status,\r\n      statusText: responseWithHeaders.statusText,\r\n      headers\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.error('Get config error:', error);\r\n    const errorResponse = secureJsonResponse({ \r\n      error: 'Failed to get configuration',\r\n      details: error.message \r\n    }, 500);\r\n    return addSecurityAndCorsHeaders(errorResponse, origin);\r\n  }\r\n}\r\n\r\n// Domain lookup function\r\nasync function handleDomainLookup(request, env) {\r\n  const origin = request.headers.get('origin');\r\n  \r\n  try {\r\n    const url = new URL(request.url);\r\n    const domain = url.searchParams.get('domain');\r\n    \r\n    console.log('Domain lookup request for:', domain);\r\n    \r\n    if (!domain) {\r\n      const errorResponse = secureJsonResponse({ error: 'Missing domain parameter' }, 400);\r\n      return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    }\r\n    \r\n    // Sanitize domain input\r\n    const sanitizedDomain = sanitizeInput(domain);\r\n    \r\n    // Check if there's a domain mapping\r\n    const domainKey = `domain:${sanitizedDomain}`;\r\n    const domainData = await env.ACCESSIBILITY_AUTH.get(domainKey);\r\n    \r\n    if (domainData) {\r\n      const data = JSON.parse(domainData);\r\n      console.log('Found domain mapping:', data);\r\n      const successResponse = secureJsonResponse({ \r\n        siteId: data.siteId,\r\n        domain: data.domain,\r\n        isPrimary: data.isPrimary\r\n      });\r\n      return addSecurityAndCorsHeaders(successResponse, origin);\r\n    }\r\n    \r\n    console.log('No domain mapping found for:', sanitizedDomain);\r\n    const errorResponse = secureJsonResponse({ error: 'Domain not found' }, 404);\r\n    return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    \r\n  } catch (error) {\r\n    console.error('Domain lookup error:', error);\r\n    const errorResponse = secureJsonResponse({ error: 'Lookup failed' }, 500);\r\n    return addSecurityAndCorsHeaders(errorResponse, origin);\r\n  }\r\n}\r\n\r\n// Save accessibility settings\r\nasync function handleSaveSettings(request, env) {\r\n  const origin = request.headers.get('origin');\r\n  \r\n  try {\r\n    const body = await request.json();\r\n    const { siteId, settings } = body;\r\n    \r\n    if (!siteId || !settings) {\r\n      const errorResponse = secureJsonResponse({ error: 'Missing siteId or settings' }, 400);\r\n      return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    }\r\n    \r\n    // Sanitize input data\r\n    const sanitizedSettings = {};\r\n    for (const [key, value] of Object.entries(settings)) {\r\n      if (typeof value === 'string') {\r\n        sanitizedSettings[key] = sanitizeInput(value);\r\n      } else if (typeof value === 'object' && value !== null) {\r\n        // Recursively sanitize object values\r\n        sanitizedSettings[key] = {};\r\n        for (const [subKey, subValue] of Object.entries(value)) {\r\n          if (typeof subValue === 'string') {\r\n            sanitizedSettings[key][subKey] = sanitizeInput(subValue);\r\n          } else {\r\n            sanitizedSettings[key][subKey] = subValue;\r\n          }\r\n        }\r\n      } else {\r\n        sanitizedSettings[key] = value;\r\n      }\r\n    }\r\n    \r\n    // Get existing accessibility settings\r\n    const existingData = await env.ACCESSIBILITY_AUTH.get(`accessibility-settings:${siteId}`);\r\n    let existingSettings = {};\r\n    \r\n    if (existingData) {\r\n      try {\r\n        existingSettings = JSON.parse(existingData);\r\n      } catch (error) {\r\n        console.warn('Failed to parse existing accessibility settings:', error);\r\n      }\r\n    }\r\n    \r\n    // Update settings\r\n    const updatedSettings = {\r\n      ...existingSettings,\r\n      ...sanitizedSettings,\r\n      siteId: siteId,\r\n      lastUpdated: new Date().toISOString(),\r\n      lastUsed: new Date().toISOString()\r\n    };\r\n    \r\n    // Save to KV storage\r\n    await env.ACCESSIBILITY_AUTH.put(`accessibility-settings:${siteId}`, JSON.stringify(updatedSettings));\r\n    \r\n    const successResponse = secureJsonResponse({ \r\n      success: true,\r\n      message: 'Settings saved successfully',\r\n      settings: updatedSettings\r\n    });\r\n    return addSecurityAndCorsHeaders(successResponse, origin);\r\n    \r\n  } catch (error) {\r\n    console.error('Save settings error:', error);\r\n    const errorResponse = secureJsonResponse({ \r\n      error: 'Failed to save settings',\r\n      details: error.message \r\n    }, 500);\r\n    return addSecurityAndCorsHeaders(errorResponse, origin);\r\n  }\r\n}\r\n\r\n// Get access token by site ID from URL params\r\nasync function handleGetTokenBySiteId(request, env) {\r\n  try {\r\n    const url = new URL(request.url);\r\n    const siteId = url.searchParams.get('siteId');\r\n    \r\n    if (!siteId) {\r\n      return new Response(JSON.stringify({ error: 'Missing siteId parameter' }), {\r\n        status: 400,\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Access-Control-Allow-Origin': '*',\r\n          'Access-Control-Allow-Methods': 'GET, OPTIONS',\r\n          'Access-Control-Allow-Headers': 'Content-Type'\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Get authorization data for the site\r\n    const authData = await env.ACCESSIBILITY_AUTH.get(`auth-data:${siteId}`);\r\n    \r\n    if (!authData) {\r\n      return new Response(JSON.stringify({ error: 'Site not found' }), {\r\n        status: 404,\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Access-Control-Allow-Origin': '*',\r\n          'Access-Control-Allow-Methods': 'GET, OPTIONS',\r\n          'Access-Control-Allow-Headers': 'Content-Type'\r\n        }\r\n      });\r\n    }\r\n    \r\n    const parsedData = JSON.parse(authData);\r\n    \r\n    // Return access token and site info\r\n    return new Response(JSON.stringify({\r\n      accessToken: parsedData.accessToken,\r\n      siteId: parsedData.siteId,\r\n      siteName: parsedData.siteName,\r\n      user: parsedData.user,\r\n      hasAccessToken: !!parsedData.accessToken\r\n    }), {\r\n      headers: { \r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Methods': 'GET, OPTIONS',\r\n        'Access-Control-Allow-Headers': 'Content-Type'\r\n      }\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.error('Get token by site ID error:', error);\r\n    return new Response(JSON.stringify({ error: 'Failed to get token' }), {\r\n      status: 500,\r\n      headers: { \r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Methods': 'GET, OPTIONS',\r\n        'Access-Control-Allow-Headers': 'Content-Type'\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// Helper function to get site ID from URL params and retrieve access token\r\nasync function getSiteIdAndToken(request, env) {\r\n  try {\r\n    const url = new URL(request.url);\r\n    const siteId = url.searchParams.get('siteId');\r\n    \r\n    if (!siteId) {\r\n      return { error: 'No siteId provided in URL parameters' };\r\n    }\r\n    \r\n    // Get authorization data for the site\r\n    const authData = await env.ACCESSIBILITY_AUTH.get(`auth-data:${siteId}`);\r\n    \r\n    if (!authData) {\r\n      return { error: 'Site not found' };\r\n    }\r\n    \r\n    const parsedData = JSON.parse(authData);\r\n    \r\n    return {\r\n      siteId: parsedData.siteId,\r\n      accessToken: parsedData.accessToken,\r\n      siteName: parsedData.siteName,\r\n      user: parsedData.user,\r\n      hasAccessToken: !!parsedData.accessToken\r\n    };\r\n    \r\n  } catch (error) {\r\n    console.error('Get site ID and token error:', error);\r\n    return { error: 'Failed to get site data' };\r\n  }\r\n}\r\n\r\n// ===== PAYMENT HANDLER FUNCTIONS =====\r\n\r\n// Create trial for new users\r\nasync function handleCreateTrial(request, env) {\r\n  const origin = request.headers.get('origin');\r\n  \r\n  try {\r\n    const { siteId, email, domain, paymentStatus, trialStartDate, trialEndDate } = await request.json();\r\n    \r\n    if (!siteId || !email || !domain) {\r\n      const errorResponse = secureJsonResponse({ error: 'Missing required fields' }, 400);\r\n      return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    }\r\n    \r\n    // Sanitize input data\r\n    const sanitizedEmail = sanitizeInput(email);\r\n    const sanitizedDomain = sanitizeInput(domain);\r\n    \r\n    // Store user data with payment info\r\n    const userData = {\r\n      siteId,\r\n      email: sanitizedEmail,\r\n      domain: sanitizedDomain,\r\n      paymentStatus,\r\n      trialStartDate,\r\n      trialEndDate,\r\n      createdAt: new Date().toISOString()\r\n    };\r\n    \r\n    // Store in KV\r\n    await env.ACCESSIBILITY_AUTH.put(`user_data_${siteId}`, JSON.stringify(userData));\r\n    await mergeSiteSettings(env, siteId, {\r\n      siteId,\r\n      domain: sanitizedDomain,\r\n      customerId,\r\n      subscriptionId: subscription.id,\r\n      paymentStatus: 'pending'\r\n    });\r\n    \r\n    // Store domain mapping\r\n    await env.ACCESSIBILITY_AUTH.put(`domain_${sanitizedDomain}`, JSON.stringify({ \r\n      siteId, \r\n      verified: true \r\n    }));\r\n    \r\n  // Also merge into unified site settings\r\n  await mergeSiteSettings(env, siteId, {\r\n    siteId,\r\n    email: sanitizedEmail,\r\n    domain: sanitizedDomain,\r\n    paymentStatus,\r\n    trialStartDate,\r\n    trialEndDate\r\n  });\r\n\r\n  const successResponse = secureJsonResponse({ \r\n    success: true, \r\n    message: 'Trial created successfully' \r\n  });\r\n    return addSecurityAndCorsHeaders(successResponse, origin);\r\n    \r\n  } catch (error) {\r\n    console.error('Create trial error:', error);\r\n    const errorResponse = secureJsonResponse({ \r\n      error: 'Failed to create trial',\r\n      details: error.message \r\n    }, 500);\r\n    return addSecurityAndCorsHeaders(errorResponse, origin);\r\n  }\r\n}\r\n\r\n// Check payment status\r\nasync function handlePaymentStatus(request, env) {\r\n  const origin = request.headers.get('origin');\r\n  \r\n  try {\r\n    const url = new URL(request.url);\r\n    const siteId = url.searchParams.get('siteId');\r\n    \r\n    if (!siteId) {\r\n      const errorResponse = secureJsonResponse({ error: 'SiteId required' }, 400);\r\n      return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    }\r\n    \r\n    // Get user data\r\n    const userDataStr = await env.ACCESSIBILITY_AUTH.get(`user_data_${siteId}`);\r\n    if (!userDataStr) {\r\n      const errorResponse = secureJsonResponse({ error: 'User not found' }, 404);\r\n      return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    }\r\n    \r\n    const userData = JSON.parse(userDataStr);\r\n    \r\n    // Auto-derive status\r\n    const now = new Date();\r\n    if (userData.paymentStatus === 'trial' && userData.trialEndDate && now > new Date(userData.trialEndDate)) {\r\n      userData.paymentStatus = 'inactive';\r\n    }\r\n    if (userData.paymentStatus === 'active' && userData.subscriptionPeriodEnd && now > new Date(userData.subscriptionPeriodEnd)) {\r\n      userData.paymentStatus = 'expired';\r\n    }\r\n    await env.ACCESSIBILITY_AUTH.put(`user_data_${siteId}`, JSON.stringify(userData));\r\n    \r\n    // Keep unified settings current\r\n    await mergeSiteSettings(env, siteId, {\r\n      siteId,\r\n      paymentStatus: userData.paymentStatus,\r\n      trialEndDate: userData.trialEndDate,\r\n      email: userData.email,\r\n      domain: userData.domain\r\n    });\r\n\r\n    const successResponse = secureJsonResponse({\r\n      paymentStatus: userData.paymentStatus,\r\n      trialEndDate: userData.trialEndDate,\r\n      email: userData.email,\r\n      domain: userData.domain\r\n    });\r\n    return addSecurityAndCorsHeaders(successResponse, origin);\r\n    \r\n  } catch (error) {\r\n    console.error('Payment status error:', error);\r\n    const errorResponse = secureJsonResponse({ \r\n      error: 'Failed to check payment status',\r\n      details: error.message \r\n    }, 500);\r\n    return addSecurityAndCorsHeaders(errorResponse, origin);\r\n  }\r\n}\r\n\r\n// Validate domain access\r\nasync function handleValidateDomain(request, env) {\r\n  const origin = request.headers.get('origin');\r\n  \r\n  try {\r\n    const { domain, siteId } = await request.json();\r\n    \r\n    if (!domain || !siteId) {\r\n      const errorResponse = secureJsonResponse({ error: 'Domain and siteId required' }, 400);\r\n      return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    }\r\n    \r\n    // Sanitize domain input\r\n    const sanitizedDomain = sanitizeInput(domain);\r\n    \r\n    // Check domain mapping\r\n    const domainDataStr = await env.ACCESSIBILITY_AUTH.get(`domain:${sanitizedDomain}`);\r\n    if (!domainDataStr) {\r\n      const successResponse = secureJsonResponse({ isValid: false });\r\n      return addSecurityAndCorsHeaders(successResponse, origin);\r\n    }\r\n    \r\n    const domainData = JSON.parse(domainDataStr);\r\n    const isValid = domainData.siteId === siteId;\r\n    \r\n    const successResponse = secureJsonResponse({ isValid });\r\n    return addSecurityAndCorsHeaders(successResponse, origin);\r\n    \r\n  } catch (error) {\r\n    console.error('Validate domain error:', error);\r\n    const errorResponse = secureJsonResponse({ \r\n      isValid: false,\r\n      error: error.message \r\n    }, 500);\r\n    return addSecurityAndCorsHeaders(errorResponse, origin);\r\n  }\r\n}\r\n\r\n// Get user data\r\nasync function handleUserData(request, env) {\r\n  const origin = request.headers.get('origin');\r\n  \r\n  try {\r\n    const url = new URL(request.url);\r\n    const siteId = url.searchParams.get('siteId');\r\n    \r\n    if (!siteId) {\r\n      const errorResponse = secureJsonResponse({ error: 'SiteId required' }, 400);\r\n      return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    }\r\n    \r\n    const userDataStr = await env.ACCESSIBILITY_AUTH.get(`user_data_${siteId}`);\r\n    if (!userDataStr) {\r\n      const errorResponse = secureJsonResponse({ error: 'User not found' }, 404);\r\n      return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    }\r\n    \r\n    const userData = JSON.parse(userDataStr);\r\n    \r\n    const successResponse = secureJsonResponse({ \r\n      email: userData.email,\r\n      domain: userData.domain,\r\n      paymentStatus: userData.paymentStatus,\r\n      trialEndDate: userData.trialEndDate\r\n    });\r\n    return addSecurityAndCorsHeaders(successResponse, origin);\r\n    \r\n  } catch (error) {\r\n    console.error('Get user data error:', error);\r\n    const errorResponse = secureJsonResponse({ \r\n      error: 'Failed to get user data',\r\n      details: error.message \r\n    }, 500);\r\n    return addSecurityAndCorsHeaders(errorResponse, origin);\r\n  }\r\n}\r\n\r\n// Create Stripe subscription with products\r\nasync function handleUpdatePayment(request, env) {\r\n  try {\r\n    const { siteId, paymentStatus, subscriptionId, customerId } = await request.json();\r\n    \r\n    console.log('Updating payment status:', { siteId, paymentStatus, subscriptionId, customerId });\r\n    \r\n    // Update subscription status in Stripe\r\n    if (subscriptionId) {\r\n      const updateResponse = await fetch(`https://api.stripe.com/v1/subscriptions/${subscriptionId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Authorization: `Bearer ${env.STRIPE_SECRET_KEY}`,\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n        },\r\n        body: new URLSearchParams({\r\n          'metadata[status]': paymentStatus\r\n        })\r\n      });\r\n      \r\n      if (!updateResponse.ok) {\r\n        console.error('Failed to update subscription in Stripe');\r\n      }\r\n    }\r\n    \r\n    // Update local storage\r\n    const userData = {\r\n      siteId,\r\n      paymentStatus,\r\n      subscriptionId,\r\n      customerId,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    \r\n    await env.CONTRAST_KV.put(`user-data:${siteId}`, JSON.stringify(userData));\r\n    \r\n    return new Response(JSON.stringify({ success: true }), {\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.error('Update payment error:', error);\r\n    return new Response(JSON.stringify({ error: error.message }), {\r\n      status: 500,\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n  }\r\n}\r\n\r\nasync function handleCreateSetupIntent(request, env) {\r\n  const origin = request.headers.get('origin');\r\n  \r\n  try {\r\n    const { siteId, email, domainUrl } = await request.json();\r\n    \r\n    console.log('Creating setup intent for:', { siteId, email, domainUrl });\r\n    \r\n    // Sanitize domain\r\n    const sanitizedDomain = domainUrl ? domainUrl.replace(/^https?:\\/\\//, '').replace(/\\/$/, '') : '';\r\n    \r\n    // Find or create customer\r\n    let customerId;\r\n    if (email) {\r\n      const customersResponse = await fetch(`https://api.stripe.com/v1/customers?email=${encodeURIComponent(email)}&limit=1`, {\r\n        headers: {\r\n          Authorization: `Bearer ${env.STRIPE_SECRET_KEY}`\r\n        }\r\n      });\r\n      \r\n      if (customersResponse.ok) {\r\n        const customers = await customersResponse.json();\r\n        if (customers.data.length > 0) {\r\n          customerId = customers.data[0].id;\r\n          console.log('Found existing customer:', customerId);\r\n        }\r\n      }\r\n    }\r\n    \r\n    if (!customerId) {\r\n      const customerData = new URLSearchParams();\r\n      customerData.append('email', email || '');\r\n      if (domainUrl || sanitizedDomain) {\r\n        customerData.append('metadata[domain]', domainUrl || sanitizedDomain);\r\n      }\r\n      customerData.append('metadata[siteId]', siteId);\r\n      \r\n      const customerResponse = await fetch('https://api.stripe.com/v1/customers', {\r\n        method: 'POST',\r\n        headers: {\r\n          Authorization: `Bearer ${env.STRIPE_SECRET_KEY}`,\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n        },\r\n        body: customerData\r\n      });\r\n      \r\n      if (!customerResponse.ok) {\r\n        const errorText = await customerResponse.text();\r\n        throw new Error(`Failed to create customer: ${errorText}`);\r\n      }\r\n      \r\n      const customer = await customerResponse.json();\r\n      customerId = customer.id;\r\n      console.log('Created new customer:', customerId);\r\n    }\r\n    \r\n    // Create a Setup Intent to collect payment details\r\n    const setupIntentData = new URLSearchParams();\r\n    setupIntentData.append('customer', customerId);\r\n    setupIntentData.append('payment_method_types[0]', 'card');\r\n    setupIntentData.append('usage', 'off_session');\r\n    setupIntentData.append('metadata[siteId]', siteId);\r\n    setupIntentData.append('metadata[domain]', domainUrl || sanitizedDomain);\r\n    \r\n    console.log('Creating setup intent with data:', setupIntentData.toString());\r\n    \r\n    const setupIntentResponse = await fetch('https://api.stripe.com/v1/setup_intents', {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${env.STRIPE_SECRET_KEY}`,\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      },\r\n      body: setupIntentData\r\n    });\r\n    \r\n    if (!setupIntentResponse.ok) {\r\n      const errorText = await setupIntentResponse.text();\r\n      throw new Error(`Failed to create setup intent: ${errorText}`);\r\n    }\r\n    \r\n    const setupIntent = await setupIntentResponse.json();\r\n    console.log('Setup intent created successfully:', setupIntent);\r\n    console.log('Setup intent client_secret:', setupIntent.client_secret);\r\n    \r\n    if (!setupIntent.client_secret) {\r\n      console.error('No client_secret in setup intent response:', setupIntent);\r\n      throw new Error('Setup intent did not return a client secret');\r\n    }\r\n    \r\n    // Store setup intent data temporarily\r\n    await env.ACCESSIBILITY_AUTH.put(`setup_intent_${siteId}`, JSON.stringify({\r\n      siteId,\r\n      customerId,\r\n      setupIntentId: setupIntent.id,\r\n      createdAt: new Date().toISOString()\r\n    }));\r\n    \r\n    const successResponse = secureJsonResponse({ \r\n      success: true,\r\n      clientSecret: setupIntent.client_secret,\r\n      customerId: customerId,\r\n      setupIntentId: setupIntent.id\r\n    });\r\n    return addSecurityAndCorsHeaders(successResponse, origin);\r\n    \r\n  } catch (error) {\r\n    console.error('Setup intent creation error:', error);\r\n    const errorResponse = secureJsonResponse({ \r\n      error: 'Failed to create setup intent', \r\n      details: error.message \r\n    });\r\n    return addSecurityAndCorsHeaders(errorResponse, origin);\r\n  }\r\n}\r\n\r\nasync function handleCreateSubscription(request, env) {\r\n  const origin = request.headers.get('origin');\r\n  \r\n  try {\r\n    const { siteId, productId, domain, email, domainUrl, firstName, paymentMethodId, customerId: providedCustomerId } = await request.json();\r\n    \r\n    console.log('Create subscription request data:', { siteId, productId, domain, email, domainUrl, paymentMethodId });\r\n    console.log('Email received:', email);\r\n    console.log('Domain received:', domain);\r\n    console.log('DomainUrl received:', domainUrl);\r\n    console.log('PaymentMethodId received:', paymentMethodId);\r\n    console.log('PaymentMethodId type:', typeof paymentMethodId);\r\n    console.log('PaymentMethodId value:', paymentMethodId);\r\n    \r\n    if (!siteId || !productId || !domain) {\r\n      const errorResponse = secureJsonResponse({ error: 'Missing required fields' }, 400);\r\n      return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    }\r\n    \r\n    // Sanitize input data\r\n    const sanitizedDomain = sanitizeInput(domain);\r\n    \r\n    // Use provided customerId if available (preferred)\r\n    let customerId = providedCustomerId || '';\r\n    if (!customerId && email) {\r\n      console.log('Checking for existing customer with email:', email);\r\n      const existingCustomersResponse = await fetch(`https://api.stripe.com/v1/customers?email=${encodeURIComponent(email)}&limit=1`, {\r\n        headers: {\r\n          Authorization: `Bearer ${env.STRIPE_SECRET_KEY}`\r\n        }\r\n      });\r\n      \r\n      if (existingCustomersResponse.ok) {\r\n        const existingCustomers = await existingCustomersResponse.json();\r\n        if (existingCustomers.data && existingCustomers.data.length > 0) {\r\n          customerId = existingCustomers.data[0].id;\r\n          console.log('Found existing customer:', customerId);\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Create new customer only if no existing customer found\r\n    if (!customerId) {\r\n      console.log('Creating new customer...');\r\n      const customerData = new URLSearchParams();\r\n      customerData.append('metadata[siteId]', siteId);\r\n      customerData.append('metadata[domain]', domainUrl || sanitizedDomain);\r\n      customerData.append('metadata[firstName]', firstName || '');\r\n      \r\n      if (email) {\r\n        customerData.append('email', email);\r\n      }\r\n      \r\n      \r\n      const customerResponse = await fetch('https://api.stripe.com/v1/customers', {\r\n        method: 'POST',\r\n        headers: {\r\n          Authorization: `Bearer ${env.STRIPE_SECRET_KEY}`,\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n        },\r\n        body: customerData\r\n      });\r\n      \r\n      if (!customerResponse.ok) {\r\n        const errorText = await customerResponse.text();\r\n        throw new Error(`Failed to create customer: ${errorText}`);\r\n      }\r\n      \r\n      const customer = await customerResponse.json();\r\n      customerId = customer.id;\r\n      console.log('Created new customer:', customerId);\r\n      console.log('Customer default payment method:', customer.invoice_settings?.default_payment_method);\r\n    }\r\n    \r\n    // Get product details to find the price\r\n    const productResponse = await fetch(`https://api.stripe.com/v1/products/${productId}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${env.STRIPE_SECRET_KEY}`\r\n      }\r\n    });\r\n    \r\n    if (!productResponse.ok) {\r\n      throw new Error('Failed to get product details');\r\n    }\r\n    \r\n    const product = await productResponse.json();\r\n    const priceId = product.default_price;\r\n    \r\n    // Create the subscription with verified payment method\r\n    const subscriptionData = new URLSearchParams();\r\n    subscriptionData.append('customer', customerId);\r\n    subscriptionData.append('items[0][price]', priceId);\r\n    \r\n    // Set the payment method if provided\r\n    if (paymentMethodId) {\r\n      subscriptionData.append('default_payment_method', paymentMethodId);\r\n      console.log('Creating subscription with payment method:', paymentMethodId);\r\n      // Try to charge immediately if we have a payment method\r\n      subscriptionData.append('payment_behavior', 'error_if_incomplete');\r\n    } else {\r\n      console.log('Creating subscription without payment method - will be set via SetupIntent webhook');\r\n    subscriptionData.append('payment_behavior', 'default_incomplete');\r\n    }\r\n    \r\n    subscriptionData.append('collection_method', 'charge_automatically');\r\n    subscriptionData.append('payment_settings[save_default_payment_method]', 'on_subscription');\r\n    subscriptionData.append('payment_settings[payment_method_types][0]', 'card');\r\n    subscriptionData.append('payment_settings[payment_method_options][card][request_three_d_secure]', 'automatic');\r\n    subscriptionData.append('expand[]', 'latest_invoice.payment_intent');\r\n    subscriptionData.append('metadata[siteId]', siteId);\r\n    subscriptionData.append('metadata[domain]', domainUrl || sanitizedDomain);\r\n    subscriptionData.append('metadata[email]', email || '');\r\n    subscriptionData.append('metadata[firstName]', firstName || '');\r\n    subscriptionData.append('metadata[productId]', productId);\r\n    subscriptionData.append('metadata[createdAt]', new Date().toISOString());\r\n    \r\n    console.log('Creating subscription with data:', subscriptionData.toString());\r\n    console.log('Payment method ID being used:', paymentMethodId);\r\n    console.log('Customer ID being used:', customerId);\r\n    console.log('Subscription metadata:', {\r\n      siteId: siteId,\r\n      domain: domainUrl || sanitizedDomain,\r\n      email: email || '',\r\n      domainUrl: domainUrl || '',\r\n      productId: productId\r\n    });\r\n    \r\n    const subscriptionResponse = await fetch('https://api.stripe.com/v1/subscriptions', {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${env.STRIPE_SECRET_KEY}`,\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      },\r\n      body: subscriptionData\r\n    });\r\n    \r\n    if (!subscriptionResponse.ok) {\r\n      const errorText = await subscriptionResponse.text();\r\n      console.error('Stripe subscription creation failed:', errorText);\r\n      throw new Error(`Failed to create subscription: ${errorText}`);\r\n    }\r\n    \r\n    const subscription = await subscriptionResponse.json();\r\n    console.log('Subscription created successfully:', subscription);\r\n    console.log('Subscription status:', subscription.status);\r\n    console.log('Subscription payment method:', subscription.default_payment_method);\r\n    console.log('Subscription latest invoice:', subscription.latest_invoice);\r\n    console.log('Subscription items:', subscription.items?.data?.[0]);\r\n    \r\n    // Store user data for subscription\r\n    const userData = {\r\n      siteId,\r\n      domain: sanitizedDomain,\r\n      customerId: customerId,\r\n      subscriptionId: subscription.id,\r\n      paymentStatus: subscription.status,\r\n      firstName: firstName || '',\r\n      currentPeriodStart: subscription.current_period_start,\r\n      currentPeriodEnd: subscription.current_period_end,\r\n      cancelAtPeriodEnd: subscription.cancel_at_period_end || false,\r\n      createdAt: new Date().toISOString()\r\n    };\r\n    \r\n    await env.ACCESSIBILITY_AUTH.put(`user_data_${siteId}`, JSON.stringify(userData));\r\n    // Save single payment snapshot per site\r\n    try {\r\n      const paymentSnapshot = {\r\n        id: subscription.id,\r\n        siteId,\r\n        type: 'subscription_created',\r\n        timestamp: new Date().toISOString(),\r\n        status: subscription.status,\r\n        currency: subscription.currency || null,\r\n        amount: subscription.items?.data?.[0]?.price?.unit_amount || null,\r\n        customerId,\r\n        subscriptionId: subscription.id,\r\n        invoiceId: subscription.latest_invoice || null,\r\n        paymentIntentId: subscription.latest_invoice?.payment_intent || null,\r\n        paymentMethodId: paymentMethodId || null,\r\n        firstName: firstName || '',\r\n        currentPeriodStart: subscription.current_period_start || null,\r\n        currentPeriodEnd: subscription.current_period_end || null,\r\n        metadata: subscription.metadata || {}\r\n      };\r\n      await env.ACCESSIBILITY_AUTH.put(`payment:${siteId}`, JSON.stringify(paymentSnapshot));\r\n    } catch (snapErr) {\r\n      console.warn('Failed to save payment snapshot:', snapErr);\r\n    }\r\n    \r\n    // Check subscription status and return appropriate response\r\n    if (subscription.status === 'incomplete') {\r\n      // Payment needs more actions - this is expected for our flow\r\n      console.log('Subscription created in incomplete status - will be completed by SetupIntent webhook');\r\n      \r\n      // If we have a payment method, try to activate the subscription immediately\r\n      if (paymentMethodId) {\r\n        console.log('Attempting to activate incomplete subscription with payment method:', paymentMethodId);\r\n        try {\r\n          const activateParams = new URLSearchParams();\r\n          activateParams.append('default_payment_method', paymentMethodId);\r\n          \r\n          const activateResponse = await fetch(`https://api.stripe.com/v1/subscriptions/${subscription.id}`, {\r\n            method: 'POST',\r\n            headers: {\r\n              Authorization: `Bearer ${env.STRIPE_SECRET_KEY}`,\r\n              'Content-Type': 'application/x-www-form-urlencoded'\r\n            },\r\n            body: activateParams\r\n          });\r\n          \r\n          if (activateResponse.ok) {\r\n            const activatedSubscription = await activateResponse.json();\r\n            console.log('Subscription activated successfully:', activatedSubscription.status);\r\n            \r\n            // Update user data\r\n            userData.paymentStatus = activatedSubscription.status;\r\n            await env.ACCESSIBILITY_AUTH.put(`user_data_${siteId}`, JSON.stringify(userData));\r\n            \r\n            return addSecurityAndCorsHeaders(secureJsonResponse({ \r\n              subscriptionId: subscription.id,\r\n              status: activatedSubscription.status,\r\n              requiresAction: false\r\n            }), origin);\r\n          } else {\r\n            const errorText = await activateResponse.text();\r\n            console.error('Failed to activate subscription:', errorText);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error activating subscription:', error);\r\n        }\r\n      }\r\n      \r\n      return addSecurityAndCorsHeaders(secureJsonResponse({ \r\n        subscriptionId: subscription.id,\r\n        status: subscription.status,\r\n        requiresAction: false, // No action needed - webhook will complete it\r\n        message: 'Subscription created successfully. Payment will be processed automatically.'\r\n      }), origin);\r\n    } else if (subscription.status === 'active') {\r\n      // Subscription is active immediately\r\n    await env.ACCESSIBILITY_AUTH.put(`domain_${sanitizedDomain}`, JSON.stringify({ \r\n      siteId, \r\n      verified: true \r\n    }));\r\n\r\n      return addSecurityAndCorsHeaders(secureJsonResponse({ \r\n      subscriptionId: subscription.id,\r\n        status: subscription.status,\r\n        requiresAction: false\r\n      }), origin);\r\n    } else {\r\n      // Some other status\r\n      return addSecurityAndCorsHeaders(secureJsonResponse({ \r\n        subscriptionId: subscription.id,\r\n        status: subscription.status,\r\n        requiresAction: false\r\n      }), origin);\r\n    }\r\n    \r\n  } catch (error) {\r\n    console.error('Create subscription error:', error);\r\n    const errorResponse = secureJsonResponse({ \r\n      error: 'Failed to create subscription',\r\n      details: error.message \r\n    }, 500);\r\n    return addSecurityAndCorsHeaders(errorResponse, origin);\r\n  }\r\n}\r\n\r\n\r\n// Create payment intent for Stripe Elements (REAL Stripe call)\r\nasync function handleCreatePaymentIntent(request, env) {\r\n  const origin = request.headers.get('origin');\r\n  try {\r\n    const { siteId, amount, currency = 'usd', email } = await request.json();\r\n    if (!siteId || !amount) {\r\n      return addSecurityAndCorsHeaders(secureJsonResponse({ error: 'Missing required fields' }, 400), origin);\r\n    }\r\n\r\n    // Optional: create/reuse a customer for saved methods / Link\r\n    let customerId = '';\r\n    if (email) {\r\n      const custRes = await fetch('https://api.stripe.com/v1/customers', {\r\n        method: 'POST',\r\n        headers: {\r\n          Authorization: `Bearer ${env.STRIPE_SECRET_KEY}`,\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n        },\r\n        body: new URLSearchParams({ email })\r\n      });\r\n      const cust = await custRes.json();\r\n      customerId = cust.id || '';\r\n    }\r\n\r\n    // Create PaymentIntent with Card payments only - completely disable automatic methods\r\n    const piRes = await fetch('https://api.stripe.com/v1/payment_intents', {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${env.STRIPE_SECRET_KEY}`,\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      },\r\n      body: new URLSearchParams({\r\n        amount: String(amount),\r\n        currency,\r\n        'payment_method_types[]': 'card',\r\n        'automatic_payment_methods[enabled]': 'false',\r\n        'payment_method_options[card][request_three_d_secure]': 'automatic',\r\n        ...(customerId ? { customer: customerId } : {}),\r\n        ...(siteId ? { 'metadata[siteId]': siteId } : {})\r\n      })\r\n    });\r\n\r\n    if (!piRes.ok) {\r\n      const text = await piRes.text();\r\n      return addSecurityAndCorsHeaders(secureJsonResponse({ error: `Stripe error: ${text}` }, 400), origin);\r\n    }\r\n    const pi = await piRes.json();\r\n    return addSecurityAndCorsHeaders(secureJsonResponse({ clientSecret: pi.client_secret }), origin);\r\n  } catch (error) {\r\n    return addSecurityAndCorsHeaders(secureJsonResponse({ error: error.message || 'failed' }, 500), origin);\r\n  }\r\n}\r\n\r\n// Verify and handle Stripe webhooks\r\nasync function handleStripeWebhook(request, env) {\r\n  const origin = request.headers.get('origin');\r\n  try {\r\n    const sig = request.headers.get('stripe-signature');\r\n    if (!sig || !env.STRIPE_WEBHOOK_SECRET) {\r\n      return addSecurityAndCorsHeaders(secureJsonResponse({ error: 'Missing signature or webhook secret' }, 400), origin);\r\n    }\r\n\r\n    const payload = await request.text();\r\n\r\n    // Minimal Stripe signature verification using raw HMAC\r\n    // Stripe header format: t=timestamp,v1=signature\r\n    const parts = Object.fromEntries(sig.split(',').map(kv => kv.split('=')));\r\n    const timestamp = parts['t'];\r\n    const v1 = parts['v1'];\r\n    if (!timestamp || !v1) {\r\n      return addSecurityAndCorsHeaders(secureJsonResponse({ error: 'Invalid signature header' }, 400), origin);\r\n    }\r\n\r\n    const signedPayload = `${timestamp}.${payload}`;\r\n    const encoder = new TextEncoder();\r\n    const key = await crypto.subtle.importKey(\r\n      'raw',\r\n      encoder.encode(env.STRIPE_WEBHOOK_SECRET),\r\n      { name: 'HMAC', hash: 'SHA-256' },\r\n      false,\r\n      ['sign']\r\n    );\r\n    const signatureBuffer = await crypto.subtle.sign('HMAC', key, encoder.encode(signedPayload));\r\n    const signatureHex = Array.from(new Uint8Array(signatureBuffer)).map(b => b.toString(16).padStart(2, '0')).join('');\r\n\r\n    // Constant-time compare\r\n    if (signatureHex !== v1) {\r\n      return addSecurityAndCorsHeaders(secureJsonResponse({ error: 'Signature verification failed' }, 400), origin);\r\n    }\r\n\r\n    const event = JSON.parse(payload);\r\n    // Handle subscription events\r\n    if (event.type === 'customer.subscription.created') {\r\n      const subscription = event.data.object || {};\r\n      const siteId = subscription.metadata?.siteId;\r\n      if (siteId) {\r\n        const userDataStr = await env.ACCESSIBILITY_AUTH.get(`user_data_${siteId}`);\r\n        const userData = userDataStr ? JSON.parse(userDataStr) : {};\r\n        userData.paymentStatus = 'active';\r\n        userData.subscriptionId = subscription.id;\r\n        userData.lastPaymentDate = new Date().toISOString();\r\n        await env.ACCESSIBILITY_AUTH.put(`user_data_${siteId}`, JSON.stringify(userData));\r\n        await mergeSiteSettings(env, siteId, {\r\n          siteId,\r\n          paymentStatus: 'active',\r\n          subscriptionId: subscription.id,\r\n          lastPaymentDate: userData.lastPaymentDate\r\n        });\r\n        \r\n        // Send webhook to Make.com for email automation\r\n        try {\r\n          const webhookUrl = env.MAKE_WEBHOOK_URL || 'https://hook.us1.make.com/mjcnn3ydks2o2pbkrdna9czn7bb253z0';\r\n          await fetch(webhookUrl, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n              event: 'subscription_created',\r\n              customer: {\r\n                email: subscription.metadata?.email || '',\r\n                firstName: subscription.metadata?.firstName || 'User',\r\n                domain: subscription.metadata?.domain || '',\r\n                siteId: siteId\r\n              },\r\n              subscription: {\r\n                id: subscription.id,\r\n                productId: subscription.metadata?.productId || ''\r\n              },\r\n              timestamp: new Date().toISOString()\r\n            })\r\n          });\r\n          console.log('Webhook sent to Make.com successfully');\r\n        } catch (webhookError) {\r\n          console.warn('Webhook failed (non-critical):', webhookError);\r\n        }\r\n      }\r\n    } else if (event.type === 'customer.subscription.updated') {\r\n      const subscription = event.data.object || {};\r\n      const siteId = subscription.metadata?.siteId;\r\n      if (siteId) {\r\n        const userDataStr = await env.ACCESSIBILITY_AUTH.get(`user_data_${siteId}`);\r\n        const userData = userDataStr ? JSON.parse(userDataStr) : {};\r\n        userData.paymentStatus = subscription.status === 'active' ? 'active' : 'inactive';\r\n        userData.lastPaymentDate = new Date().toISOString();\r\n        userData.currentPeriodStart = subscription.current_period_start;\r\n        userData.currentPeriodEnd = subscription.current_period_end;\r\n        userData.cancelAtPeriodEnd = subscription.cancel_at_period_end || false;\r\n        await env.ACCESSIBILITY_AUTH.put(`user_data_${siteId}`, JSON.stringify(userData));\r\n        await mergeSiteSettings(env, siteId, {\r\n          siteId,\r\n          paymentStatus: userData.paymentStatus,\r\n          lastPaymentDate: userData.lastPaymentDate\r\n        });\r\n        // Overwrite single payment snapshot\r\n        try {\r\n          const price = subscription.items?.data?.[0]?.price;\r\n          const snap = {\r\n            id: subscription.id,\r\n            siteId,\r\n            type: 'subscription_updated',\r\n            timestamp: new Date().toISOString(),\r\n            status: subscription.status,\r\n            currency: price?.currency || null,\r\n            amount: price?.unit_amount || null,\r\n            customerId: subscription.customer || null,\r\n            subscriptionId: subscription.id,\r\n            invoiceId: subscription.latest_invoice || null,\r\n            paymentIntentId: null,\r\n            paymentMethodId: null,\r\n            currentPeriodStart: subscription.current_period_start || null,\r\n            currentPeriodEnd: subscription.current_period_end || null,\r\n            cancelAtPeriodEnd: subscription.cancel_at_period_end || false,\r\n            productId: price?.product || null,\r\n            priceId: price?.id || null,\r\n            metadata: subscription.metadata || {}\r\n          };\r\n          await env.ACCESSIBILITY_AUTH.put(`payment:${siteId}`, JSON.stringify(snap));\r\n        } catch (e) {\r\n          console.warn('Failed to save payment snapshot (updated):', e);\r\n        }\r\n        \r\n        // Send webhook to Make.com for subscription updated email automation\r\n        try {\r\n          const webhookUrl = env.MAKE_WEBHOOK_URL || 'https://hook.us1.make.com/mjcnn3ydks2o2pbkrdna9czn7bb253z0';\r\n          await fetch(webhookUrl, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n              event: 'subscription_updated',\r\n              customer: {\r\n                email: subscription.metadata?.email || '',\r\n                firstName: subscription.metadata?.firstName || 'User',\r\n                domain: subscription.metadata?.domain || '',\r\n                siteId: siteId\r\n              },\r\n              subscription: {\r\n                id: subscription.id,\r\n                status: subscription.status,\r\n                productId: subscription.metadata?.productId || '',\r\n                currentPeriodStart: subscription.current_period_start,\r\n                currentPeriodEnd: subscription.current_period_end,\r\n                cancelAtPeriodEnd: subscription.cancel_at_period_end || false\r\n              },\r\n              timestamp: new Date().toISOString()\r\n            })\r\n          });\r\n          console.log('Subscription updated webhook sent to Make.com successfully');\r\n        } catch (webhookError) {\r\n          console.warn('Subscription updated webhook failed (non-critical):', webhookError);\r\n        }\r\n      }\r\n    } else if (event.type === 'customer.subscription.deleted') {\r\n      const subscription = event.data.object || {};\r\n      const siteId = subscription.metadata?.siteId;\r\n      if (siteId) {\r\n        const userDataStr = await env.ACCESSIBILITY_AUTH.get(`user_data_${siteId}`);\r\n        const userData = userDataStr ? JSON.parse(userDataStr) : {};\r\n        userData.paymentStatus = 'cancelled';\r\n        userData.lastPaymentDate = new Date().toISOString();\r\n        userData.canceled_at = new Date().toISOString();\r\n        userData.cancellationDate = new Date().toISOString();\r\n        await env.ACCESSIBILITY_AUTH.put(`user_data_${siteId}`, JSON.stringify(userData));\r\n        await mergeSiteSettings(env, siteId, {\r\n          siteId,\r\n          paymentStatus: 'cancelled',\r\n          lastPaymentDate: userData.lastPaymentDate\r\n        });\r\n        // Overwrite single payment snapshot\r\n        try {\r\n          // Extract product and price info from subscription items\r\n          let productId = null;\r\n          let priceId = null;\r\n          if (subscription.items && subscription.items.data && subscription.items.data.length > 0) {\r\n            const item = subscription.items.data[0];\r\n            productId = item.price?.product || null;\r\n            priceId = item.price?.id || null;\r\n          }\r\n          \r\n          const snap = {\r\n            id: subscription.id,\r\n            siteId,\r\n            type: 'subscription_deleted',\r\n            timestamp: new Date().toISOString(),\r\n            status: 'canceled',\r\n            currency: null,\r\n            amount: null,\r\n            customerId: subscription.customer || null,\r\n            subscriptionId: subscription.id,\r\n            invoiceId: subscription.latest_invoice || null,\r\n            paymentIntentId: null,\r\n            paymentMethodId: null,\r\n            currentPeriodStart: subscription.current_period_start || null,\r\n            currentPeriodEnd: subscription.current_period_end || null,\r\n            cancelAtPeriodEnd: true,\r\n            canceled_at: new Date().toISOString(),\r\n            cancellationDate: new Date().toISOString(),\r\n            productId: productId,\r\n            priceId: priceId,\r\n            metadata: subscription.metadata || {}\r\n          };\r\n          await env.ACCESSIBILITY_AUTH.put(`payment:${siteId}`, JSON.stringify(snap));\r\n        } catch (e) {\r\n          console.warn('Failed to save payment snapshot (deleted):', e);\r\n        }\r\n        \r\n        // Send webhook to Make.com for subscription cancelled email automation\r\n        try {\r\n          const webhookUrl = env.MAKE_WEBHOOK_URL || 'https://hook.us1.make.com/mjcnn3ydks2o2pbkrdna9czn7bb253z0';\r\n          await fetch(webhookUrl, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n              event: 'subscription_cancelled',\r\n              customer: {\r\n                email: subscription.metadata?.email || '',\r\n                firstName: subscription.metadata?.firstName || 'User',\r\n                domain: subscription.metadata?.domain || '',\r\n                siteId: siteId\r\n              },\r\n              subscription: {\r\n                id: subscription.id,\r\n                status: 'canceled',\r\n                productId: subscription.metadata?.productId || '',\r\n                cancelledAt: new Date().toISOString()\r\n              },\r\n              timestamp: new Date().toISOString()\r\n            })\r\n          });\r\n          console.log('Subscription cancelled webhook sent to Make.com successfully');\r\n        } catch (webhookError) {\r\n          console.warn('Subscription cancelled webhook failed (non-critical):', webhookError);\r\n        }\r\n      }\r\n    } else if (event.type === 'payment_intent.succeeded') {\r\n      const pi = event.data.object || {};\r\n      const siteId = pi.metadata?.siteId;\r\n      if (siteId) {\r\n        const userDataStr = await env.ACCESSIBILITY_AUTH.get(`user_data_${siteId}`);\r\n        const userData = userDataStr ? JSON.parse(userDataStr) : {};\r\n        userData.paymentStatus = 'active';\r\n        userData.lastPaymentDate = new Date().toISOString();\r\n        userData.paymentMethod = pi.payment_method_types?.[0] || 'unknown';\r\n        await env.ACCESSIBILITY_AUTH.put(`user_data_${siteId}`, JSON.stringify(userData));\r\n        await mergeSiteSettings(env, siteId, {\r\n          siteId,\r\n          paymentStatus: 'active',\r\n          lastPaymentDate: userData.lastPaymentDate\r\n        });\r\n      }\r\n    } else if (event.type === 'payment_intent.payment_failed') {\r\n      const pi = event.data.object || {};\r\n      const siteId = pi.metadata?.siteId;\r\n      if (siteId) {\r\n        const userDataStr = await env.ACCESSIBILITY_AUTH.get(`user_data_${siteId}`);\r\n        const userData = userDataStr ? JSON.parse(userDataStr) : {};\r\n        userData.paymentStatus = 'failed';\r\n        userData.lastPaymentDate = new Date().toISOString();\r\n        await env.ACCESSIBILITY_AUTH.put(`user_data_${siteId}`, JSON.stringify(userData));\r\n        await mergeSiteSettings(env, siteId, {\r\n          siteId,\r\n          paymentStatus: 'failed',\r\n          lastPaymentDate: userData.lastPaymentDate\r\n        });\r\n      }\r\n    } else if (event.type === 'setup_intent.succeeded') {\r\n      console.log('\uD83D\uDD14 SetupIntent succeeded webhook received');\r\n      const setupIntent = event.data.object || {};\r\n      const siteId = setupIntent.metadata?.siteId;\r\n      let subscriptionId = setupIntent.metadata?.subscriptionId;\r\n      const email = setupIntent.metadata?.email;\r\n      const domain = setupIntent.metadata?.domain;\r\n      \r\n      console.log('\uD83D\uDD14 SetupIntent webhook data:', { siteId, subscriptionId, email, domain });\r\n      \r\n      // If no subscriptionId in metadata, try to find it by customer\r\n      if (siteId && !subscriptionId) {\r\n        console.log('No subscriptionId in SetupIntent metadata, looking up by customer...');\r\n        try {\r\n          const userDataStr = await env.ACCESSIBILITY_AUTH.get(`user_data_${siteId}`);\r\n          if (userDataStr) {\r\n            const userData = JSON.parse(userDataStr);\r\n            subscriptionId = userData.subscriptionId;\r\n            console.log('Found subscriptionId from user data:', subscriptionId);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error looking up subscriptionId:', error);\r\n        }\r\n      }\r\n      \r\n      if (siteId && subscriptionId) {\r\n        console.log('SetupIntent succeeded, activating subscription:', subscriptionId);\r\n        console.log('SetupIntent metadata:', setupIntent.metadata);\r\n        console.log('Payment method from SetupIntent:', setupIntent.payment_method);\r\n        \r\n        // Update the subscription to use the payment method from setup intent AND update metadata\r\n        const updateParams = new URLSearchParams();\r\n        updateParams.append('default_payment_method', setupIntent.payment_method);\r\n        \r\n        // Also update subscription metadata if available\r\n        if (email) updateParams.append('metadata[email]', email);\r\n        if (domain) updateParams.append('metadata[domain]', domain);\r\n        if (siteId) updateParams.append('metadata[siteId]', siteId);\r\n        \r\n        const subscriptionUpdateResponse = await fetch(`https://api.stripe.com/v1/subscriptions/${subscriptionId}`, {\r\n          method: 'POST',\r\n          headers: {\r\n            Authorization: `Bearer ${env.STRIPE_SECRET_KEY}`,\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n          },\r\n          body: updateParams\r\n        });\r\n        \r\n        if (subscriptionUpdateResponse.ok) {\r\n          const updatedSubscription = await subscriptionUpdateResponse.json();\r\n          console.log('Subscription updated with payment method from SetupIntent');\r\n          console.log('Updated subscription status:', updatedSubscription.status);\r\n          console.log('Updated subscription metadata:', updatedSubscription.metadata);\r\n          \r\n          // Update local data\r\n          const userDataStr = await env.ACCESSIBILITY_AUTH.get(`user_data_${siteId}`);\r\n          const userData = userDataStr ? JSON.parse(userDataStr) : {};\r\n          userData.paymentStatus = 'active';\r\n          userData.lastPaymentDate = new Date().toISOString();\r\n          userData.paymentMethod = setupIntent.payment_method_types?.[0] || 'card';\r\n          userData.email = email || userData.email;\r\n          userData.domain = domain || userData.domain;\r\n          userData.currentPeriodStart = updatedSubscription.current_period_start;\r\n          userData.currentPeriodEnd = updatedSubscription.current_period_end;\r\n          userData.cancelAtPeriodEnd = updatedSubscription.cancel_at_period_end || false;\r\n          await env.ACCESSIBILITY_AUTH.put(`user_data_${siteId}`, JSON.stringify(userData));\r\n          await mergeSiteSettings(env, siteId, {\r\n            siteId,\r\n            email: email || '',\r\n            domain: domain || '',\r\n            paymentStatus: 'active',\r\n            lastPaymentDate: userData.lastPaymentDate\r\n          });\r\n        } else {\r\n          const errorText = await subscriptionUpdateResponse.text();\r\n          console.error('Failed to update subscription:', errorText);\r\n        }\r\n      }\r\n    }\r\n\r\n    return new Response('ok', { status: 200, headers: { 'Content-Type': 'text/plain' } });\r\n  } catch (err) {\r\n    return addSecurityAndCorsHeaders(secureJsonResponse({ error: err.message || 'webhook error' }, 500), origin);\r\n  }\r\n}\r\n\r\n// Manual subscription activation\r\nasync function handleActivateSubscription(request, env) {\r\n  const origin = request.headers.get('origin');\r\n  \r\n  try {\r\n    const { siteId, setupIntentId, paymentMethodId } = await request.json();\r\n    \r\n    if (!siteId || !setupIntentId || !paymentMethodId) {\r\n      const errorResponse = secureJsonResponse({ error: 'Missing required fields' }, 400);\r\n      return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    }\r\n    \r\n    console.log('Manual activation request:', { siteId, setupIntentId, paymentMethodId });\r\n    \r\n    // Get the subscription ID from the site data\r\n    const userDataStr = await env.ACCESSIBILITY_AUTH.get(`user_data_${siteId}`);\r\n    console.log('User data from KV:', userDataStr);\r\n    \r\n    if (!userDataStr) {\r\n      const errorResponse = secureJsonResponse({ error: 'No subscription found for site' }, 404);\r\n      return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    }\r\n    \r\n    const userData = JSON.parse(userDataStr);\r\n    const subscriptionId = userData.subscriptionId;\r\n    console.log('Found subscription ID:', subscriptionId);\r\n    \r\n    if (!subscriptionId) {\r\n      const errorResponse = secureJsonResponse({ error: 'No subscription ID found' }, 404);\r\n      return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    }\r\n    \r\n    // First, check if payment method is already attached to customer\r\n    console.log('Checking if payment method is already attached to customer:', userData.customerId);\r\n    \r\n    // Check if payment method is already attached by retrieving it\r\n    try {\r\n      const paymentMethodResponse = await fetch(`https://api.stripe.com/v1/payment_methods/${paymentMethodId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${env.STRIPE_SECRET_KEY}`\r\n        }\r\n      });\r\n      \r\n      if (paymentMethodResponse.ok) {\r\n        const paymentMethod = await paymentMethodResponse.json();\r\n        console.log('Payment method details:', paymentMethod);\r\n        \r\n        if (paymentMethod.customer === userData.customerId) {\r\n          console.log('Payment method is already attached to customer - continuing');\r\n        } else {\r\n          console.log('Payment method is attached to different customer, attempting to attach to correct customer');\r\n          \r\n          // Try to attach the payment method to the correct customer\r\n          const attachParams = new URLSearchParams();\r\n          attachParams.append('customer', userData.customerId);\r\n          \r\n          const attachResponse = await fetch(`https://api.stripe.com/v1/payment_methods/${paymentMethodId}/attach`, {\r\n            method: 'POST',\r\n            headers: {\r\n              Authorization: `Bearer ${env.STRIPE_SECRET_KEY}`,\r\n              'Content-Type': 'application/x-www-form-urlencoded'\r\n            },\r\n            body: attachParams\r\n          });\r\n          \r\n          if (attachResponse.ok) {\r\n            console.log('Payment method attached to customer successfully');\r\n          } else {\r\n            const attachError = await attachResponse.text();\r\n            console.error('Failed to attach payment method to customer:', attachError);\r\n            throw new Error(`Failed to attach payment method: ${attachError}`);\r\n          }\r\n        }\r\n      } else {\r\n        console.error('Failed to retrieve payment method details');\r\n        throw new Error('Failed to retrieve payment method details');\r\n      }\r\n    } catch (error) {\r\n      console.log('Payment method attachment check failed, but continuing:', error.message);\r\n      // Continue anyway - the payment method might already be attached\r\n    }\r\n    \r\n    // Ensure we're using the subscription's own customer id (source of truth)\r\n    const subscriptionLookup = await fetch(`https://api.stripe.com/v1/subscriptions/${subscriptionId}`, {\r\n      headers: { Authorization: `Bearer ${env.STRIPE_SECRET_KEY}` }\r\n    });\r\n    let subscriptionCustomerId = userData.customerId;\r\n    if (subscriptionLookup.ok) {\r\n      const sub = await subscriptionLookup.json();\r\n      subscriptionCustomerId = sub.customer || subscriptionCustomerId;\r\n      console.log('Subscription customer ID:', subscriptionCustomerId);\r\n    } else {\r\n      console.warn('Failed to look up subscription for customer id, proceeding with stored customerId');\r\n    }\r\n\r\n    // As an extra safety, if payment method is attached to some other customer, detach it first\r\n    try {\r\n      const pmResp = await fetch(`https://api.stripe.com/v1/payment_methods/${paymentMethodId}`, {\r\n        headers: { Authorization: `Bearer ${env.STRIPE_SECRET_KEY}` }\r\n      });\r\n      if (pmResp.ok) {\r\n        const pm = await pmResp.json();\r\n        if (pm.customer && pm.customer !== subscriptionCustomerId) {\r\n          // Do NOT detach; Stripe forbids reusing detached PMs. Return a clear error.\r\n          const conflict = secureJsonResponse({\r\n            error: 'payment_method_conflict',\r\n            details: 'Payment method belongs to a different customer. Please retry payment to create a new payment method for this site.'\r\n          }, 409);\r\n          return addSecurityAndCorsHeaders(conflict, origin);\r\n        }\r\n      }\r\n    } catch (pmErr) {\r\n      console.log('Payment method lookup warning:', pmErr?.message || pmErr);\r\n    }\r\n\r\n    // Now update the subscription with the payment method\r\n    const updateParams = new URLSearchParams();\r\n    updateParams.append('default_payment_method', paymentMethodId);\r\n    \r\n    console.log('Updating subscription with payment method:', paymentMethodId);\r\n    console.log('Update params:', updateParams.toString());\r\n    \r\n    const subscriptionUpdateResponse = await fetch(`https://api.stripe.com/v1/subscriptions/${subscriptionId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${env.STRIPE_SECRET_KEY}`,\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      },\r\n      body: updateParams\r\n    });\r\n    \r\n    console.log('Subscription update response status:', subscriptionUpdateResponse.status);\r\n    \r\n    if (subscriptionUpdateResponse.ok) {\r\n      let updatedSubscription = await subscriptionUpdateResponse.json();\r\n      console.log('Subscription manually activated (post-update):', updatedSubscription.status);\r\n      console.log('Updated subscription details:', updatedSubscription);\r\n      \r\n      // If still incomplete, try paying latest invoice explicitly\r\n      try {\r\n        if (updatedSubscription.status === 'incomplete' && updatedSubscription.latest_invoice) {\r\n          console.log('Attempting to pay latest invoice:', updatedSubscription.latest_invoice);\r\n          const payResp = await fetch(`https://api.stripe.com/v1/invoices/${updatedSubscription.latest_invoice}/pay`, {\r\n            method: 'POST',\r\n            headers: {\r\n              Authorization: `Bearer ${env.STRIPE_SECRET_KEY}`\r\n            }\r\n          });\r\n          if (!payResp.ok) {\r\n            const pt = await payResp.text();\r\n            console.warn('Failed to pay invoice:', pt);\r\n          } else {\r\n            console.log('Invoice payment attempted successfully');\r\n          }\r\n          // Re-fetch subscription to get fresh status\r\n          const refreshedResp = await fetch(`https://api.stripe.com/v1/subscriptions/${subscriptionId}`, {\r\n            headers: { Authorization: `Bearer ${env.STRIPE_SECRET_KEY}` }\r\n          });\r\n          if (refreshedResp.ok) {\r\n            updatedSubscription = await refreshedResp.json();\r\n            console.log('Subscription status after invoice pay attempt:', updatedSubscription.status);\r\n          }\r\n        }\r\n      } catch (invoiceErr) {\r\n        console.log('Invoice payment flow warning:', invoiceErr?.message || invoiceErr);\r\n      }\r\n      \r\n      // Update local data\r\n      userData.paymentStatus = 'active';\r\n      userData.lastPaymentDate = new Date().toISOString();\r\n      userData.paymentMethod = 'card';\r\n      await env.ACCESSIBILITY_AUTH.put(`user_data_${siteId}`, JSON.stringify(userData));\r\n      \r\n      await mergeSiteSettings(env, siteId, {\r\n        siteId,\r\n        paymentStatus: updatedSubscription.status === 'active' ? 'active' : updatedSubscription.status,\r\n        lastPaymentDate: userData.lastPaymentDate\r\n      });\r\n      // Overwrite single payment snapshot for site\r\n      try {\r\n        const snapshot = {\r\n          id: updatedSubscription.id,\r\n          siteId,\r\n          type: 'manual_activation',\r\n          timestamp: new Date().toISOString(),\r\n          status: updatedSubscription.status,\r\n          currency: updatedSubscription.currency || null,\r\n          amount: updatedSubscription.items?.data?.[0]?.price?.unit_amount || null,\r\n          customerId: updatedSubscription.customer || null,\r\n          subscriptionId: updatedSubscription.id,\r\n          invoiceId: updatedSubscription.latest_invoice || null,\r\n          paymentIntentId: null,\r\n          paymentMethodId: paymentMethodId,\r\n          currentPeriodStart: updatedSubscription.current_period_start || null,\r\n          currentPeriodEnd: updatedSubscription.current_period_end || null,\r\n          metadata: updatedSubscription.metadata || {}\r\n        };\r\n        await env.ACCESSIBILITY_AUTH.put(`payment:${siteId}`, JSON.stringify(snapshot));\r\n      } catch (snapErr) {\r\n        console.warn('Failed to save payment snapshot (manual activation):', snapErr);\r\n      }\r\n      \r\n      return addSecurityAndCorsHeaders(secureJsonResponse({ \r\n        success: true, \r\n        status: updatedSubscription.status \r\n      }), origin);\r\n    } else {\r\n      const errorText = await subscriptionUpdateResponse.text();\r\n      console.error('Subscription update failed:', errorText);\r\n      console.error('Response status:', subscriptionUpdateResponse.status);\r\n      throw new Error(`Failed to activate subscription: ${errorText}`);\r\n    }\r\n    \r\n  } catch (error) {\r\n    console.error('Manual activation error:', error);\r\n    console.error('Error stack:', error.stack);\r\n    console.error('Error details:', {\r\n      message: error.message,\r\n      name: error.name,\r\n      cause: error.cause\r\n    });\r\n    const errorResponse = secureJsonResponse({ \r\n      error: error.message || 'Activation failed',\r\n      details: error.stack \r\n    }, 500);\r\n    return addSecurityAndCorsHeaders(errorResponse, origin);\r\n  }\r\n}\r\n\r\n// Check subscription status\r\nasync function handleCheckSubscriptionStatus(request, env) {\r\n  const origin = request.headers.get('origin');\r\n  const url = new URL(request.url);\r\n  const subscriptionId = url.searchParams.get('id');\r\n    \r\n    if (!subscriptionId) {\r\n      const errorResponse = secureJsonResponse({ error: 'Missing subscription ID' }, 400);\r\n      return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    }\r\n    \r\n  try {\r\n    const subscriptionResponse = await fetch(`https://api.stripe.com/v1/subscriptions/${subscriptionId}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${env.STRIPE_SECRET_KEY}`\r\n      }\r\n    });\r\n    \r\n    if (!subscriptionResponse.ok) {\r\n      const errorText = await subscriptionResponse.text();\r\n      throw new Error(`Failed to retrieve subscription: ${errorText}`);\r\n    }\r\n    \r\n    const subscription = await subscriptionResponse.json();\r\n    \r\n    return addSecurityAndCorsHeaders(secureJsonResponse({\r\n      status: subscription.status,\r\n      subscriptionId: subscription.id,\r\n      current_period_end: subscription.current_period_end,\r\n      current_period_start: subscription.current_period_start,\r\n      cancel_at_period_end: subscription.cancel_at_period_end,\r\n      canceled_at: subscription.canceled_at,\r\n      access_details: {\r\n        has_access: subscription.status === 'active',\r\n        access_until: subscription.current_period_end,\r\n        access_start: subscription.current_period_start,\r\n        will_cancel: subscription.cancel_at_period_end,\r\n        canceled_at: subscription.canceled_at\r\n      }\r\n    }), origin);\r\n    \r\n  } catch (error) {\r\n    console.error('Check subscription status error:', error);\r\n    const errorResponse = secureJsonResponse({ \r\n      error: 'Failed to check subscription status',\r\n      details: error.message \r\n    }, 500);\r\n    return addSecurityAndCorsHeaders(errorResponse, origin);\r\n  }\r\n}\r\n\r\n// Get subscription plan details\r\nasync function handleGetSubscriptionPlan(request, env) {\r\n  const origin = request.headers.get('origin');\r\n  const url = new URL(request.url);\r\n  const subscriptionId = url.searchParams.get('id');\r\n    \r\n  if (!subscriptionId) {\r\n    const errorResponse = secureJsonResponse({ error: 'Missing subscription ID' }, 400);\r\n    return addSecurityAndCorsHeaders(errorResponse, origin);\r\n  }\r\n    \r\n  try {\r\n    const subscriptionResponse = await fetch(`https://api.stripe.com/v1/subscriptions/${subscriptionId}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${env.STRIPE_SECRET_KEY}`\r\n      }\r\n    });\r\n    \r\n    if (!subscriptionResponse.ok) {\r\n      const errorText = await subscriptionResponse.text();\r\n      throw new Error(`Failed to retrieve subscription: ${errorText}`);\r\n    }\r\n    \r\n    const subscription = await subscriptionResponse.json();\r\n    \r\n    // Extract plan type from subscription\r\n    let planType = 'monthly'; // default\r\n    if (subscription.items && subscription.items.data && subscription.items.data.length > 0) {\r\n      const priceId = subscription.items.data[0].price.id;\r\n      // Check if it's annual plan based on price ID\r\n      if (priceId === 'price_1SL2ZQRh1lS9W4XK8QJqJzKx' || priceId.includes('annual')) {\r\n        planType = 'annual';\r\n      } else if (priceId === 'price_1SL2ZQRh1lS9W4XK8QJqJzKy' || priceId.includes('monthly')) {\r\n        planType = 'monthly';\r\n      }\r\n    }\r\n    \r\n    // Calculate valid until date\r\n    const validUntil = new Date(subscription.current_period_end * 1000).toISOString();\r\n    \r\n    return addSecurityAndCorsHeaders(secureJsonResponse({\r\n      planType: planType,\r\n      validUntil: validUntil,\r\n      subscriptionId: subscription.id,\r\n      status: subscription.status,\r\n      current_period_end: subscription.current_period_end,\r\n      current_period_start: subscription.current_period_start\r\n    }), origin);\r\n    \r\n  } catch (error) {\r\n    console.error('Get subscription plan error:', error);\r\n    const errorResponse = secureJsonResponse({ \r\n      error: 'Failed to get subscription plan',\r\n      details: error.message \r\n    }, 500);\r\n    return addSecurityAndCorsHeaders(errorResponse, origin);\r\n  }\r\n}\r\n\r\n// Setup payment method\r\nasync function handleSetupPayment(request, env) {\r\n  const origin = request.headers.get('origin');\r\n  \r\n  try {\r\n    // Log the raw request body\r\n    const requestBody = await request.text();\r\n    console.log('\uD83D\uDD0D Raw request body:', requestBody);\r\n    console.log('\uD83D\uDD0D Request body length:', requestBody.length);\r\n    \r\n    let requestData;\r\n    try {\r\n      requestData = JSON.parse(requestBody);\r\n      console.log('\uD83D\uDD0D Parsed request data:', requestData);\r\n    } catch (parseError) {\r\n      console.error('\uD83D\uDD0D JSON parse error:', parseError);\r\n      const errorResponse = secureJsonResponse({ error: 'Invalid JSON in request body' }, 400);\r\n      return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    }\r\n    \r\n    const { email, domainUrl, siteId } = requestData;\r\n    \r\n    console.log('\uD83D\uDD0D Extracted fields:', { email, domainUrl, siteId });\r\n    console.log('\uD83D\uDD0D Email type:', typeof email, 'Email value:', email);\r\n    console.log('\uD83D\uDD0D SiteId type:', typeof siteId, 'SiteId value:', siteId);\r\n    console.log('\uD83D\uDD0D DomainUrl type:', typeof domainUrl, 'DomainUrl value:', domainUrl);\r\n    \r\n    if (!email || !siteId) {\r\n      console.error('\uD83D\uDD0D Missing required fields - email:', !!email, 'siteId:', !!siteId);\r\n      const errorResponse = secureJsonResponse({ error: 'Missing required fields', details: { email: !!email, siteId: !!siteId } }, 400);\r\n      return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    }\r\n    \r\n    console.log('Setting up payment for:', { email, domainUrl, siteId });\r\n    \r\n    // Create or retrieve customer\r\n    let customer;\r\n    const existingCustomersResponse = await fetch(`https://api.stripe.com/v1/customers?email=${encodeURIComponent(email)}&limit=1`, {\r\n      headers: {\r\n        Authorization: `Bearer ${env.STRIPE_SECRET_KEY}`\r\n      }\r\n    });\r\n    \r\n    if (existingCustomersResponse.ok) {\r\n      const existingCustomers = await existingCustomersResponse.json();\r\n      if (existingCustomers.data.length > 0) {\r\n        customer = existingCustomers.data[0];\r\n        console.log('Found existing customer:', customer.id);\r\n      }\r\n    }\r\n    \r\n    if (!customer) {\r\n      // Create new customer\r\n      const customerData = new URLSearchParams();\r\n      customerData.append('email', email);\r\n      customerData.append('metadata[siteId]', siteId);\r\n      customerData.append('metadata[domain]', domainUrl || '');\r\n      \r\n      const customerResponse = await fetch('https://api.stripe.com/v1/customers', {\r\n        method: 'POST',\r\n        headers: {\r\n          Authorization: `Bearer ${env.STRIPE_SECRET_KEY}`,\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n        },\r\n        body: customerData\r\n      });\r\n      \r\n      if (!customerResponse.ok) {\r\n        const errorText = await customerResponse.text();\r\n        throw new Error(`Failed to create customer: ${errorText}`);\r\n      }\r\n      \r\n      customer = await customerResponse.json();\r\n      console.log('Created new customer:', customer.id);\r\n    }\r\n    \r\n    // Create Setup Intent\r\n    const setupIntentData = new URLSearchParams();\r\n    setupIntentData.append('customer', customer.id);\r\n    setupIntentData.append('payment_method_types[]', 'card');\r\n    setupIntentData.append('usage', 'off_session');\r\n    setupIntentData.append('metadata[siteId]', siteId);\r\n    setupIntentData.append('metadata[email]', email);\r\n    setupIntentData.append('metadata[domain]', domainUrl || '');\r\n    \r\n    const setupIntentResponse = await fetch('https://api.stripe.com/v1/setup_intents', {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${env.STRIPE_SECRET_KEY}`,\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      },\r\n      body: setupIntentData\r\n    });\r\n    \r\n    if (!setupIntentResponse.ok) {\r\n      const errorText = await setupIntentResponse.text();\r\n      throw new Error(`Failed to create setup intent: ${errorText}`);\r\n    }\r\n    \r\n    const setupIntent = await setupIntentResponse.json();\r\n    console.log('Created setup intent:', setupIntent.id);\r\n    \r\n    return addSecurityAndCorsHeaders(secureJsonResponse({\r\n      setupIntentId: setupIntent.id,\r\n      clientSecret: setupIntent.client_secret,\r\n      customerId: customer.id\r\n    }), origin);\r\n    \r\n  } catch (error) {\r\n    console.error('Setup payment error:', error);\r\n    const errorResponse = secureJsonResponse({ \r\n      error: 'Failed to set up payment',\r\n      details: error.message \r\n    }, 500);\r\n    return addSecurityAndCorsHeaders(errorResponse, origin);\r\n  }\r\n}\r\n\r\n// Verify payment method\r\nasync function handleVerifyPaymentMethod(request, env) {\r\n  const origin = request.headers.get('origin');\r\n  \r\n  try {\r\n    const { setupIntentId } = await request.json();\r\n    \r\n    if (!setupIntentId) {\r\n      const errorResponse = secureJsonResponse({ error: 'Missing setupIntentId' }, 400);\r\n      return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    }\r\n    \r\n    console.log('Verifying payment method for setup intent:', setupIntentId);\r\n    \r\n    // Retrieve the setup intent\r\n    const setupIntentResponse = await fetch(`https://api.stripe.com/v1/setup_intents/${setupIntentId}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${env.STRIPE_SECRET_KEY}`\r\n      }\r\n    });\r\n    \r\n    if (!setupIntentResponse.ok) {\r\n      const errorText = await setupIntentResponse.text();\r\n      throw new Error(`Failed to retrieve setup intent: ${errorText}`);\r\n    }\r\n    \r\n    const setupIntent = await setupIntentResponse.json();\r\n    console.log('Setup intent status:', setupIntent.status);\r\n    \r\n    if (setupIntent.status !== 'succeeded') {\r\n      const errorResponse = secureJsonResponse({ \r\n        error: 'Setup intent not successful',\r\n        details: `Current status: ${setupIntent.status}` \r\n      }, 400);\r\n      return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    }\r\n    \r\n    if (!setupIntent.payment_method) {\r\n      const errorResponse = secureJsonResponse({ \r\n        error: 'No payment method attached',\r\n        details: 'The setup intent did not result in an attached payment method' \r\n      }, 400);\r\n      return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    }\r\n    \r\n    // Payment method is available from the setup intent\r\n    const paymentMethodId = setupIntent.payment_method;\r\n    const customerId = setupIntent.customer;\r\n    \r\n    console.log('Payment method attached:', paymentMethodId);\r\n    console.log('Customer ID:', customerId);\r\n    \r\n    // Set as default payment method\r\n    const customerUpdateData = new URLSearchParams();\r\n    customerUpdateData.append('invoice_settings[default_payment_method]', paymentMethodId);\r\n    \r\n    const customerUpdateResponse = await fetch(`https://api.stripe.com/v1/customers/${customerId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${env.STRIPE_SECRET_KEY}`,\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      },\r\n      body: customerUpdateData\r\n    });\r\n    \r\n    if (!customerUpdateResponse.ok) {\r\n      const errorText = await customerUpdateResponse.text();\r\n      console.warn('Failed to set default payment method:', errorText);\r\n    } else {\r\n      console.log('Default payment method set successfully');\r\n    }\r\n    \r\n    // Verify it was set\r\n    const customerResponse = await fetch(`https://api.stripe.com/v1/customers/${customerId}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${env.STRIPE_SECRET_KEY}`\r\n      }\r\n    });\r\n    \r\n    let isDefaultSet = false;\r\n    if (customerResponse.ok) {\r\n      const customer = await customerResponse.json();\r\n      isDefaultSet = customer.invoice_settings?.default_payment_method === paymentMethodId;\r\n      console.log('Default payment method verification:', isDefaultSet);\r\n    }\r\n    \r\n    return addSecurityAndCorsHeaders(secureJsonResponse({\r\n      success: true,\r\n      paymentMethodId: paymentMethodId,\r\n      customerId: customerId,\r\n      isDefaultPaymentMethodSet: isDefaultSet\r\n    }), origin);\r\n    \r\n  } catch (error) {\r\n    console.error('Payment method verification error:', error);\r\n    const errorResponse = secureJsonResponse({ \r\n      error: 'Failed to verify payment method',\r\n      details: error.message \r\n    }, 500);\r\n    return addSecurityAndCorsHeaders(errorResponse, origin);\r\n  }\r\n}\r\n\r\n// Check payment status for custom domain\r\nasync function handleCheckPaymentStatus(request, env) {\r\n  const origin = request.headers.get('origin');\r\n  const url = new URL(request.url);\r\n  const domain = url.searchParams.get('domain');\r\n  const siteId = url.searchParams.get('siteId');\r\n  \r\n  try {\r\n    console.log('Checking payment status for domain:', domain, 'siteId:', siteId);\r\n    \r\n    if (!domain) {\r\n      const errorResponse = secureJsonResponse({ error: 'Missing domain parameter' }, 400);\r\n      return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    }\r\n    \r\n    // Check if this is a staging domain (always allow)\r\n    const isStagingDomain = domain.includes('.webflow.io') || \r\n                           domain.includes('.webflow.com') || \r\n                           domain.includes('localhost') ||\r\n                           domain.includes('127.0.0.1') ||\r\n                           domain.includes('staging');\r\n    \r\n    if (isStagingDomain) {\r\n      console.log('Staging domain detected, allowing access:', domain);\r\n      return addSecurityAndCorsHeaders(secureJsonResponse({\r\n        hasAccess: true,\r\n        isStaging: true,\r\n        reason: 'Staging domain - no payment required'\r\n      }), origin);\r\n    }\r\n    \r\n    // For custom domains, check payment status\r\n    let paymentData = null;\r\n    \r\n    // First try to get payment data by siteId if provided\r\n    if (siteId) {\r\n      const paymentRecord = await env.ACCESSIBILITY_AUTH.get(`payment:${siteId}`);\r\n      if (paymentRecord) {\r\n        paymentData = JSON.parse(paymentRecord);\r\n        console.log('Found payment data by siteId:', paymentData);\r\n      }\r\n    }\r\n    \r\n    // If no payment data found by siteId, try to find by domain\r\n    if (!paymentData) {\r\n      const domainKey = `domain:${domain}`;\r\n      const domainData = await env.ACCESSIBILITY_AUTH.get(domainKey);\r\n      if (domainData) {\r\n        const domainInfo = JSON.parse(domainData);\r\n        const siteIdFromDomain = domainInfo.siteId;\r\n        if (siteIdFromDomain) {\r\n          const paymentRecord = await env.ACCESSIBILITY_AUTH.get(`payment:${siteIdFromDomain}`);\r\n          if (paymentRecord) {\r\n            paymentData = JSON.parse(paymentRecord);\r\n            console.log('Found payment data by domain lookup:', paymentData);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    if (!paymentData) {\r\n      console.log('No payment data found for domain:', domain);\r\n      return addSecurityAndCorsHeaders(secureJsonResponse({\r\n        hasAccess: false,\r\n        isStaging: false,\r\n        reason: 'No payment found for this domain',\r\n        requiresPayment: true\r\n      }), origin);\r\n    }\r\n    \r\n    // Check if payment is active\r\n    const now = new Date().getTime();\r\n    const currentPeriodEnd = paymentData.currentPeriodEnd;\r\n    \r\n    // Handle different currentPeriodEnd formats and null values\r\n    let isActive = false;\r\n    if (paymentData.status === 'active') {\r\n      if (currentPeriodEnd) {\r\n        // Convert to milliseconds if it's in seconds (Unix timestamp)\r\n        const periodEndMs = currentPeriodEnd > 1000000000000 ? currentPeriodEnd : currentPeriodEnd * 1000;\r\n        isActive = now < periodEndMs;\r\n        console.log('Payment validation:', {\r\n          status: paymentData.status,\r\n          currentPeriodEnd: currentPeriodEnd,\r\n          periodEndMs: periodEndMs,\r\n          now: now,\r\n          isActive: isActive\r\n        });\r\n      } else {\r\n        // If no currentPeriodEnd, consider active if status is active\r\n        isActive = true;\r\n        console.log('Payment validation: No currentPeriodEnd, using status only:', paymentData.status);\r\n      }\r\n    }\r\n    \r\n    // Special case: If payment data exists and status is active but periods are null,\r\n    // check if this is a recent subscription (within last 30 days)\r\n    if (!isActive && paymentData.status === 'active' && !currentPeriodEnd) {\r\n      const subscriptionDate = new Date(paymentData.timestamp);\r\n      const thirtyDaysAgo = new Date(now - 30 * 24 * 60 * 60 * 1000);\r\n      if (subscriptionDate > thirtyDaysAgo) {\r\n        isActive = true;\r\n        console.log('Payment validation: Recent subscription without period data, allowing access');\r\n      }\r\n    }\r\n    \r\n    if (isActive) {\r\n      console.log('Payment is active for domain:', domain);\r\n      return addSecurityAndCorsHeaders(secureJsonResponse({\r\n        hasAccess: true,\r\n        isStaging: false,\r\n        reason: 'Active payment found',\r\n        paymentStatus: paymentData.status,\r\n        validUntil: new Date(currentPeriodEnd * 1000).toISOString(),\r\n        subscriptionId: paymentData.subscriptionId\r\n      }), origin);\r\n    } else {\r\n      console.log('Payment is not active for domain:', domain, 'status:', paymentData.status);\r\n      return addSecurityAndCorsHeaders(secureJsonResponse({\r\n        hasAccess: false,\r\n        isStaging: false,\r\n        reason: 'Payment not active or expired',\r\n        paymentStatus: paymentData.status,\r\n        validUntil: currentPeriodEnd ? new Date(currentPeriodEnd * 1000).toISOString() : null,\r\n        requiresPayment: true\r\n      }), origin);\r\n    }\r\n    \r\n  } catch (error) {\r\n    console.error('Check payment status error:', error);\r\n    const errorResponse = secureJsonResponse({ \r\n      error: 'Failed to check payment status',\r\n      details: error.message \r\n    }, 500);\r\n    return addSecurityAndCorsHeaders(errorResponse, origin);\r\n  }\r\n}\r\n\r\n// Widget script with payment check\r\nasync function handleWidgetScript(request, env) {\r\n  const origin = request.headers.get('origin');\r\n  const url = new URL(request.url);\r\n  const domain = url.searchParams.get('domain');\r\n  const siteId = url.searchParams.get('siteId');\r\n  \r\n  try {\r\n    console.log('Widget script requested for domain:', domain, 'siteId:', siteId);\r\n    \r\n    // Get current domain from referer if not provided\r\n    const currentDomain = domain || request.headers.get('referer') || 'unknown';\r\n    \r\n    // Check if this is a staging domain (always allow)\r\n    const isStagingDomain = currentDomain.includes('.webflow.io') || \r\n                           currentDomain.includes('.webflow.com') || \r\n                           currentDomain.includes('localhost') ||\r\n                           currentDomain.includes('127.0.0.1') ||\r\n                           currentDomain.includes('staging');\r\n    \r\n    if (isStagingDomain) {\r\n      console.log('Staging domain detected, serving widget script:', currentDomain);\r\n      return new Response(getWidgetScript(true), {\r\n        headers: { \r\n          'Content-Type': 'application/javascript',\r\n          'Access-Control-Allow-Origin': '*',\r\n          'Cache-Control': 'public, max-age=3600'\r\n        }\r\n      });\r\n    }\r\n    \r\n    // For custom domains, check payment status\r\n    let paymentData = null;\r\n    \r\n    // First try to get payment data by siteId if provided\r\n    if (siteId) {\r\n      const paymentRecord = await env.ACCESSIBILITY_AUTH.get(`payment:${siteId}`);\r\n      if (paymentRecord) {\r\n        paymentData = JSON.parse(paymentRecord);\r\n        console.log('Found payment data by siteId:', paymentData);\r\n      }\r\n    }\r\n    \r\n    // If no payment data found by siteId, try to find by domain\r\n    if (!paymentData) {\r\n      const domainKey = `domain:${currentDomain}`;\r\n      const domainData = await env.ACCESSIBILITY_AUTH.get(domainKey);\r\n      if (domainData) {\r\n        const domainInfo = JSON.parse(domainData);\r\n        const siteIdFromDomain = domainInfo.siteId;\r\n        if (siteIdFromDomain) {\r\n          const paymentRecord = await env.ACCESSIBILITY_AUTH.get(`payment:${siteIdFromDomain}`);\r\n          if (paymentRecord) {\r\n            paymentData = JSON.parse(paymentRecord);\r\n            console.log('Found payment data by domain lookup:', paymentData);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    if (!paymentData) {\r\n      console.log('No payment data found for domain:', currentDomain);\r\n      return new Response(getWidgetScript(false, 'No payment found for this domain'), {\r\n        headers: { \r\n          'Content-Type': 'application/javascript',\r\n          'Access-Control-Allow-Origin': '*',\r\n          'Cache-Control': 'public, max-age=300'\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Check if payment is active\r\n    const now = new Date().getTime();\r\n    const currentPeriodEnd = paymentData.currentPeriodEnd;\r\n    \r\n    // Handle different currentPeriodEnd formats and null values\r\n    let isActive = false;\r\n    if (paymentData.status === 'active') {\r\n      if (currentPeriodEnd) {\r\n        // Convert to milliseconds if it's in seconds (Unix timestamp)\r\n        const periodEndMs = currentPeriodEnd > 1000000000000 ? currentPeriodEnd : currentPeriodEnd * 1000;\r\n        isActive = now < periodEndMs;\r\n        console.log('Payment validation:', {\r\n          status: paymentData.status,\r\n          currentPeriodEnd: currentPeriodEnd,\r\n          periodEndMs: periodEndMs,\r\n          now: now,\r\n          isActive: isActive\r\n        });\r\n      } else {\r\n        // If no currentPeriodEnd, consider active if status is active\r\n        isActive = true;\r\n        console.log('Payment validation: No currentPeriodEnd, using status only:', paymentData.status);\r\n      }\r\n    }\r\n    \r\n    // Special case: If payment data exists and status is active but periods are null,\r\n    // check if this is a recent subscription (within last 30 days)\r\n    if (!isActive && paymentData.status === 'active' && !currentPeriodEnd) {\r\n      const subscriptionDate = new Date(paymentData.timestamp);\r\n      const thirtyDaysAgo = new Date(now - 30 * 24 * 60 * 60 * 1000);\r\n      if (subscriptionDate > thirtyDaysAgo) {\r\n        isActive = true;\r\n        console.log('Payment validation: Recent subscription without period data, allowing access');\r\n      }\r\n    }\r\n    \r\n    if (isActive) {\r\n      console.log('Payment is active for domain:', currentDomain);\r\n      return new Response(getWidgetScript(true), {\r\n        headers: { \r\n          'Content-Type': 'application/javascript',\r\n          'Access-Control-Allow-Origin': '*',\r\n          'Cache-Control': 'public, max-age=3600'\r\n        }\r\n      });\r\n    } else {\r\n      console.log('Payment is not active for domain:', currentDomain, 'status:', paymentData.status);\r\n      const reason = paymentData.status === 'active' ? 'Payment expired' : 'Payment not active';\r\n      return new Response(getWidgetScript(false, reason), {\r\n        headers: { \r\n          'Content-Type': 'application/javascript',\r\n          'Access-Control-Allow-Origin': '*',\r\n          'Cache-Control': 'public, max-age=300'\r\n        }\r\n      });\r\n    }\r\n    \r\n  } catch (error) {\r\n    console.error('Widget script error:', error);\r\n    return new Response(getWidgetScript(false, 'Error checking payment status'), {\r\n      headers: { \r\n        'Content-Type': 'application/javascript',\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Cache-Control': 'no-cache'\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// Generate widget script based on payment status\r\nfunction getWidgetScript(hasAccess, reason = '') {\r\n  if (hasAccess) {\r\n    // Full widget script for paid users\r\n    return `\r\n(function() {\r\n  'use strict';\r\n  \r\n  // ContrastKit Accessibility Widget Script\r\n  console.log('ContrastKit Accessibility Widget loaded - Full Access');\r\n  \r\n  // Accessibility Widget Implementation\r\n  const ContrastKitWidget = {\r\n    isInitialized: false,\r\n    \r\n    init: function() {\r\n      if (this.isInitialized) return;\r\n      this.isInitialized = true;\r\n      \r\n      console.log('ContrastKit Accessibility Widget initialized');\r\n      \r\n      // Create accessibility toolbar\r\n      this.createToolbar();\r\n      \r\n      // Add keyboard navigation support\r\n      this.addKeyboardSupport();\r\n      \r\n      // Add screen reader support\r\n      this.addScreenReaderSupport();\r\n      \r\n      console.log('ContrastKit features activated');\r\n    },\r\n    \r\n    createToolbar: function() {\r\n      const toolbar = document.createElement('div');\r\n      toolbar.id = 'contrastkit-toolbar';\r\n      toolbar.innerHTML = \\`\r\n        <div style=\"\r\n          position: fixed;\r\n          top: 20px;\r\n          left: 20px;\r\n          background: #1a1a1a;\r\n          color: white;\r\n          padding: 12px;\r\n          border-radius: 8px;\r\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\r\n          font-size: 14px;\r\n          z-index: 9999;\r\n          box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\r\n          max-width: 200px;\r\n        \">\r\n          <div style=\"font-weight: 600; margin-bottom: 8px;\">Accessibility Tools</div>\r\n          <button onclick=\"ContrastKitWidget.increaseFontSize()\" style=\"\r\n            background: #3b82f6;\r\n            color: white;\r\n            border: none;\r\n            padding: 6px 12px;\r\n            border-radius: 4px;\r\n            margin: 2px;\r\n            cursor: pointer;\r\n            font-size: 12px;\r\n          \">A+</button>\r\n          <button onclick=\"ContrastKitWidget.decreaseFontSize()\" style=\"\r\n            background: #3b82f6;\r\n            color: white;\r\n            border: none;\r\n            padding: 6px 12px;\r\n            border-radius: 4px;\r\n            margin: 2px;\r\n            cursor: pointer;\r\n            font-size: 12px;\r\n          \">A-</button>\r\n          <button onclick=\"ContrastKitWidget.toggleHighContrast()\" style=\"\r\n            background: #3b82f6;\r\n            color: white;\r\n            border: none;\r\n            padding: 6px 12px;\r\n            border-radius: 4px;\r\n            margin: 2px;\r\n            cursor: pointer;\r\n            font-size: 12px;\r\n          \">High Contrast</button>\r\n        </div>\r\n      \\`;\r\n      document.body.appendChild(toolbar);\r\n    },\r\n    \r\n    increaseFontSize: function() {\r\n      const currentSize = parseFloat(getComputedStyle(document.body).fontSize);\r\n      document.body.style.fontSize = (currentSize + 2) + 'px';\r\n    },\r\n    \r\n    decreaseFontSize: function() {\r\n      const currentSize = parseFloat(getComputedStyle(document.body).fontSize);\r\n      document.body.style.fontSize = Math.max(currentSize - 2, 12) + 'px';\r\n    },\r\n    \r\n    toggleHighContrast: function() {\r\n      document.body.classList.toggle('contrastkit-high-contrast');\r\n      if (!document.querySelector('#contrastkit-contrast-styles')) {\r\n        const style = document.createElement('style');\r\n        style.id = 'contrastkit-contrast-styles';\r\n        style.textContent = \\`\r\n          .contrastkit-high-contrast {\r\n            filter: contrast(150%) brightness(120%);\r\n          }\r\n          .contrastkit-high-contrast * {\r\n            background-color: white !important;\r\n            color: black !important;\r\n          }\r\n        \\`;\r\n        document.head.appendChild(style);\r\n      }\r\n    },\r\n    \r\n    addKeyboardSupport: function() {\r\n      document.addEventListener('keydown', function(e) {\r\n        // Alt + A to toggle accessibility toolbar\r\n        if (e.altKey && e.key === 'a') {\r\n          const toolbar = document.getElementById('contrastkit-toolbar');\r\n          if (toolbar) {\r\n            toolbar.style.display = toolbar.style.display === 'none' ? 'block' : 'none';\r\n          }\r\n        }\r\n      });\r\n    },\r\n    \r\n    addScreenReaderSupport: function() {\r\n      // Add ARIA labels to interactive elements\r\n      const buttons = document.querySelectorAll('button:not([aria-label])');\r\n      buttons.forEach(button => {\r\n        if (!button.getAttribute('aria-label')) {\r\n          button.setAttribute('aria-label', button.textContent || 'Button');\r\n        }\r\n      });\r\n    }\r\n  };\r\n  \r\n  // Make widget globally accessible\r\n  window.ContrastKitWidget = ContrastKitWidget;\r\n  \r\n  // Initialize when DOM is ready\r\n  if (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', function() {\r\n      ContrastKitWidget.init();\r\n    });\r\n  } else {\r\n    ContrastKitWidget.init();\r\n  }\r\n})();\r\n`;\r\n  } else {\r\n    // Limited script for unpaid users\r\n    return `\r\n(function() {\r\n  'use strict';\r\n  \r\n  console.log('ContrastKit Accessibility Widget - Payment Required');\r\n  console.log('Reason: ${reason}');\r\n  \r\n  // Show payment required message\r\n  const showPaymentMessage = function() {\r\n    const message = document.createElement('div');\r\n    message.innerHTML = \\`\r\n      <div style=\"\r\n        position: fixed;\r\n        top: 20px;\r\n        right: 20px;\r\n        background: #f59e0b;\r\n        color: white;\r\n        padding: 12px 16px;\r\n        border-radius: 8px;\r\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\r\n        font-size: 14px;\r\n        z-index: 9999;\r\n        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\r\n        max-width: 300px;\r\n      \">\r\n        <strong>Accessibility Widget</strong><br>\r\n        Payment required to activate features.\r\n        <a href=\"https://accessibility-widget.web-8fb.workers.dev\" style=\"color: white; text-decoration: underline; margin-left: 4px;\">\r\n          Subscribe Now\r\n        </a>\r\n      </div>\r\n    \\`;\r\n    document.body.appendChild(message);\r\n    \r\n    // Remove message after 10 seconds\r\n    setTimeout(() => {\r\n      if (message.parentNode) {\r\n        message.parentNode.removeChild(message);\r\n      }\r\n    }, 10000);\r\n  };\r\n  \r\n  // Show message when DOM is ready\r\n  if (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', showPaymentMessage);\r\n  } else {\r\n    showPaymentMessage();\r\n  }\r\n})();\r\n`;\r\n  }\r\n}\r\n\r\n// Cancel subscription\r\nasync function handleCancelSubscription(request, env) {\r\n  const origin = request.headers.get('origin');\r\n  \r\n  try {\r\n    const { subscriptionId, siteId, cancelAtPeriodEnd = true } = await request.json();\r\n    \r\n    let finalSubscriptionId = subscriptionId;\r\n    \r\n    // If no subscriptionId provided, try to get it from siteId\r\n    if (!finalSubscriptionId && siteId) {\r\n      console.log('No subscriptionId provided, looking up from siteId:', siteId);\r\n      \r\n      // Try to get subscription ID from user data\r\n      const userDataStr = await env.ACCESSIBILITY_AUTH.get(`user_data_${siteId}`);\r\n      if (userDataStr) {\r\n        const userData = JSON.parse(userDataStr);\r\n        finalSubscriptionId = userData.subscriptionId;\r\n        console.log('Found subscriptionId in user_data:', finalSubscriptionId);\r\n        console.log('Full user_data:', userData);\r\n      }\r\n      \r\n      // If still not found, try payment snapshot\r\n      if (!finalSubscriptionId) {\r\n        const paymentSnapshotStr = await env.ACCESSIBILITY_AUTH.get(`payment:${siteId}`);\r\n        if (paymentSnapshotStr) {\r\n          const paymentSnapshot = JSON.parse(paymentSnapshotStr);\r\n          finalSubscriptionId = paymentSnapshot.subscriptionId;\r\n          console.log('Found subscriptionId in payment snapshot:', finalSubscriptionId);\r\n        }\r\n      }\r\n    }\r\n    \r\n    if (!finalSubscriptionId) {\r\n      const errorResponse = secureJsonResponse({ error: 'Missing subscription ID' }, 400);\r\n      return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    }\r\n    \r\n    console.log('Cancel subscription request:', { subscriptionId: finalSubscriptionId, siteId, cancelAtPeriodEnd });\r\n    console.log('About to call Stripe API with subscription ID:', finalSubscriptionId);\r\n    \r\n    let subscription;\r\n    \r\n    if (cancelAtPeriodEnd) {\r\n      // Cancel at period end (recommended approach)\r\n      // This lets the customer continue using service until end of billing period\r\n      console.log('Canceling subscription at period end');\r\n      const subscriptionResponse = await fetch(`https://api.stripe.com/v1/subscriptions/${finalSubscriptionId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${env.STRIPE_SECRET_KEY}`,\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      },\r\n      body: new URLSearchParams({\r\n        cancel_at_period_end: 'true'\r\n      })\r\n    });\r\n    \r\n    if (!subscriptionResponse.ok) {\r\n      const errorText = await subscriptionResponse.text();\r\n        console.error('Stripe API error (period end):', errorText);\r\n      throw new Error(`Failed to cancel subscription: ${errorText}`);\r\n    }\r\n    \r\n      subscription = await subscriptionResponse.json();\r\n      console.log('Stripe cancellation response (period end):', subscription);\r\n    } else {\r\n      // Cancel immediately (optional)\r\n      // This ends access immediately and may generate prorations\r\n      console.log('Canceling subscription immediately');\r\n      const subscriptionResponse = await fetch(`https://api.stripe.com/v1/subscriptions/${finalSubscriptionId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          Authorization: `Bearer ${env.STRIPE_SECRET_KEY}`\r\n        }\r\n      });\r\n      \r\n      if (!subscriptionResponse.ok) {\r\n        const errorText = await subscriptionResponse.text();\r\n        console.error('Stripe API error (immediate):', errorText);\r\n        throw new Error(`Failed to cancel subscription: ${errorText}`);\r\n      }\r\n      \r\n      subscription = await subscriptionResponse.json();\r\n      console.log('Stripe cancellation response (immediate):', subscription);\r\n    }\r\n    \r\n    // Update local data if siteId provided\r\n    if (siteId) {\r\n      console.log('Updating KV store for cancellation:', { siteId, cancelAtPeriodEnd });\r\n      \r\n      // Update user_data_${siteId}\r\n      const userDataStr = await env.ACCESSIBILITY_AUTH.get(`user_data_${siteId}`);\r\n      if (userDataStr) {\r\n        const userData = JSON.parse(userDataStr);\r\n        userData.paymentStatus = cancelAtPeriodEnd ? 'canceling' : 'canceled';\r\n        userData.cancelAtPeriodEnd = subscription.cancel_at_period_end;\r\n        userData.currentPeriodEnd = subscription.current_period_end;\r\n        userData.lastUpdated = new Date().toISOString();\r\n        userData.cancellationDate = new Date().toISOString();\r\n        userData.canceled_at = new Date().toISOString();\r\n        \r\n        await env.ACCESSIBILITY_AUTH.put(`user_data_${siteId}`, JSON.stringify(userData));\r\n        console.log('Updated user_data_${siteId} with cancellation status');\r\n      }\r\n      \r\n      // Update payment:${siteId} snapshot\r\n      const paymentSnapshotStr = await env.ACCESSIBILITY_AUTH.get(`payment:${siteId}`);\r\n      if (paymentSnapshotStr) {\r\n        const paymentSnapshot = JSON.parse(paymentSnapshotStr);\r\n        paymentSnapshot.status = cancelAtPeriodEnd ? 'canceling' : 'canceled';\r\n        paymentSnapshot.cancelAtPeriodEnd = subscription.cancel_at_period_end;\r\n        paymentSnapshot.currentPeriodEnd = subscription.current_period_end;\r\n        paymentSnapshot.cancellationDate = new Date().toISOString();\r\n        paymentSnapshot.canceled_at = new Date().toISOString();\r\n        paymentSnapshot.lastUpdated = new Date().toISOString();\r\n        \r\n        await env.ACCESSIBILITY_AUTH.put(`payment:${siteId}`, JSON.stringify(paymentSnapshot));\r\n        console.log('Updated payment:${siteId} with cancellation status');\r\n      }\r\n      \r\n      // Update site settings\r\n        await mergeSiteSettings(env, siteId, {\r\n          siteId,\r\n        paymentStatus: cancelAtPeriodEnd ? 'canceling' : 'canceled',\r\n          cancelAtPeriodEnd: subscription.cancel_at_period_end,\r\n          currentPeriodEnd: subscription.current_period_end,\r\n        cancellationDate: new Date().toISOString(),\r\n        lastUpdated: new Date().toISOString()\r\n        });\r\n      console.log('Updated site settings with cancellation status');\r\n    }\r\n    \r\n    const successResponse = secureJsonResponse({ \r\n      success: true,\r\n      subscription: {\r\n        id: subscription.id,\r\n        status: subscription.status,\r\n        cancel_at_period_end: subscription.cancel_at_period_end,\r\n        current_period_end: subscription.current_period_end,\r\n        canceled_at: subscription.canceled_at,\r\n        access_details: {\r\n          has_access: subscription.status === 'active',\r\n          access_until: subscription.current_period_end,\r\n          access_start: subscription.current_period_start,\r\n          will_cancel: subscription.cancel_at_period_end,\r\n          canceled_at: subscription.canceled_at\r\n        }\r\n      },\r\n      message: cancelAtPeriodEnd \r\n        ? 'Subscription will be canceled at the end of the current billing period'\r\n        : 'Subscription has been canceled immediately'\r\n    });\r\n    return addSecurityAndCorsHeaders(successResponse, origin);\r\n    \r\n  } catch (error) {\r\n    console.error('Cancel subscription error:', error);\r\n    const errorResponse = secureJsonResponse({ \r\n      success: false,\r\n      error: 'Failed to cancel subscription',\r\n      details: error.message \r\n    }, 500);\r\n    return addSecurityAndCorsHeaders(errorResponse, origin);\r\n  }\r\n}\r\n\r\n// Get subscription status\r\nasync function handleGetSubscriptionStatus(request, env) {\r\n  const origin = request.headers.get('origin');\r\n  \r\n  try {\r\n    const { siteId } = await request.json();\r\n    \r\n    if (!siteId) {\r\n      const errorResponse = secureJsonResponse({ error: 'Missing site ID' }, 400);\r\n      return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    }\r\n    \r\n    // Get user data from KV\r\n    const userDataStr = await env.ACCESSIBILITY_AUTH.get(`user_data_${siteId}`);\r\n    if (!userDataStr) {\r\n      const errorResponse = secureJsonResponse({ error: 'No subscription found for this site' }, 404);\r\n      return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    }\r\n    \r\n    const userData = JSON.parse(userDataStr);\r\n    console.log('\uD83D\uDD25 Backend: User data from KV:', {\r\n      subscriptionId: userData.subscriptionId,\r\n      paymentStatus: userData.paymentStatus,\r\n      currentPeriodEnd: userData.currentPeriodEnd\r\n    });\r\n    \r\n    // If we have a subscription ID, get current status from Stripe\r\n    let subscriptionDetails = null;\r\n    if (userData.subscriptionId) {\r\n      console.log('\uD83D\uDD25 Backend: Fetching Stripe subscription:', userData.subscriptionId);\r\n      try {\r\n        const subscriptionResponse = await fetch(`https://api.stripe.com/v1/subscriptions/${userData.subscriptionId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${env.STRIPE_SECRET_KEY}`\r\n          }\r\n        });\r\n        \r\n        console.log('\uD83D\uDD25 Backend: Stripe API response status:', subscriptionResponse.status);\r\n        \r\n        if (subscriptionResponse.ok) {\r\n          subscriptionDetails = await subscriptionResponse.json();\r\n          // console.log('\uD83D\uDD25 Backend: Full Stripe response:', JSON.stringify(subscriptionDetails, null, 2));\r\n          // Extract current_period_end from items.data[0] (subscription items)\r\n          const currentPeriodEnd = subscriptionDetails.items && \r\n                                  subscriptionDetails.items.data && \r\n                                  subscriptionDetails.items.data.length > 0 ? \r\n                                  subscriptionDetails.items.data[0].current_period_end : null;\r\n          \r\n          console.log('\uD83D\uDD25 Backend: Stripe subscription details:', {\r\n            id: subscriptionDetails.id,\r\n            current_period_end: currentPeriodEnd,\r\n            current_period_start: subscriptionDetails.items?.data?.[0]?.current_period_start,\r\n            status: subscriptionDetails.status,\r\n            created: subscriptionDetails.created,\r\n            billing_cycle_anchor: subscriptionDetails.billing_cycle_anchor\r\n          });\r\n          \r\n          // Add the extracted current_period_end to the subscriptionDetails object\r\n          if (currentPeriodEnd) {\r\n            subscriptionDetails.current_period_end = currentPeriodEnd;\r\n            console.log('\uD83D\uDD25 Backend: Added current_period_end to subscriptionDetails:', currentPeriodEnd);\r\n          } else {\r\n            console.error('\uD83D\uDD25 Backend: Could not extract current_period_end from items!');\r\n          }\r\n        } else {\r\n          const errorText = await subscriptionResponse.text();\r\n          console.error('\uD83D\uDD25 Backend: Stripe API error:', subscriptionResponse.status, errorText);\r\n        }\r\n      } catch (error) {\r\n        console.error('\uD83D\uDD25 Backend: Failed to fetch subscription details from Stripe:', error);\r\n      }\r\n    } else {\r\n      console.log('\uD83D\uDD25 Backend: No subscription ID found in user data');\r\n    }\r\n    \r\n    const successResponse = secureJsonResponse({ \r\n      success: true,\r\n      subscription: {\r\n        id: userData.subscriptionId,\r\n        status: userData.paymentStatus,\r\n        cancelAtPeriodEnd: userData.cancelAtPeriodEnd || false,\r\n        currentPeriodEnd: userData.currentPeriodEnd,\r\n        lastPaymentDate: userData.lastPaymentDate,\r\n        current_period_end: subscriptionDetails ? subscriptionDetails.current_period_end : userData.currentPeriodEnd,\r\n        details: subscriptionDetails\r\n      }\r\n    });\r\n    \r\n    console.log('\uD83D\uDD25 Backend: Returning subscription data:', {\r\n      id: userData.subscriptionId,\r\n      status: userData.paymentStatus,\r\n      currentPeriodEnd: userData.currentPeriodEnd,\r\n      current_period_end: subscriptionDetails ? subscriptionDetails.current_period_end : userData.currentPeriodEnd,\r\n      details: subscriptionDetails ? {\r\n        current_period_end: subscriptionDetails.current_period_end,\r\n        status: subscriptionDetails.status\r\n      } : null\r\n    });\r\n    return addSecurityAndCorsHeaders(successResponse, origin);\r\n    \r\n  } catch (error) {\r\n    console.error('Get subscription status error:', error);\r\n    const errorResponse = secureJsonResponse({ \r\n      error: 'Failed to get subscription status',\r\n      details: error.message \r\n    }, 500);\r\n    return addSecurityAndCorsHeaders(errorResponse, origin);\r\n  }\r\n}\r\n\r\nasync function handleUpdateSubscriptionMetadata(request, env) {\r\n  const origin = request.headers.get('origin');\r\n  \r\n  try {\r\n    const { siteId, subscriptionId, metadata } = await request.json();\r\n    \r\n    if (!siteId || !subscriptionId || !metadata) {\r\n      const errorResponse = secureJsonResponse({ error: 'Missing required fields' }, 400);\r\n      return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    }\r\n    \r\n    console.log('Updating subscription metadata:', { siteId, subscriptionId, metadata });\r\n    \r\n    // Retrieve existing subscription to preserve any existing metadata\r\n    const existingSubscriptionResponse = await fetch(`https://api.stripe.com/v1/subscriptions/${subscriptionId}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${env.STRIPE_SECRET_KEY}`\r\n      }\r\n    });\r\n    \r\n    if (!existingSubscriptionResponse.ok) {\r\n      const errorText = await existingSubscriptionResponse.text();\r\n      console.error('Failed to retrieve existing subscription:', errorText);\r\n      const errorResponse = secureJsonResponse({ \r\n        error: 'Failed to retrieve subscription',\r\n        details: errorText \r\n      }, 400);\r\n      return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    }\r\n    \r\n    const existingSubscription = await existingSubscriptionResponse.json();\r\n    const existingMetadata = existingSubscription.metadata || {};\r\n    \r\n    // Merge existing metadata with new metadata\r\n    const mergedMetadata = {\r\n      ...existingMetadata,\r\n      ...metadata,\r\n      updated_at: new Date().toISOString()\r\n    };\r\n    \r\n    console.log('Merged metadata:', mergedMetadata);\r\n    \r\n    // Update the subscription with merged metadata\r\n    // Stripe expects metadata as individual key-value pairs, not a JSON string\r\n    const formData = new URLSearchParams();\r\n    Object.entries(mergedMetadata).forEach(([key, value]) => {\r\n      formData.append(`metadata[${key}]`, value);\r\n    });\r\n    \r\n    const updateResponse = await fetch(`https://api.stripe.com/v1/subscriptions/${subscriptionId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${env.STRIPE_SECRET_KEY}`,\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      },\r\n      body: formData\r\n    });\r\n    \r\n    if (!updateResponse.ok) {\r\n      const errorText = await updateResponse.text();\r\n      console.error('Failed to update subscription metadata:', errorText);\r\n      const errorResponse = secureJsonResponse({ \r\n        error: 'Failed to update subscription metadata',\r\n        details: errorText \r\n      }, 400);\r\n      return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    }\r\n    \r\n    const updatedSubscription = await updateResponse.json();\r\n    console.log('Subscription metadata updated successfully:', updatedSubscription.metadata);\r\n    \r\n    // Update KV store with new domain information\r\n    try {\r\n      const userDataStr = await env.ACCESSIBILITY_AUTH.get(`user_data_${siteId}`);\r\n      if (userDataStr) {\r\n        const userData = JSON.parse(userDataStr);\r\n        userData.domain = metadata.domain || userData.domain;\r\n        userData.lastUpdated = new Date().toISOString();\r\n        await env.ACCESSIBILITY_AUTH.put(`user_data_${siteId}`, JSON.stringify(userData));\r\n        console.log('Updated user_data with new domain:', userData.domain);\r\n      }\r\n      \r\n      // Update payment snapshot\r\n      const paymentSnapshotStr = await env.ACCESSIBILITY_AUTH.get(`payment:${siteId}`);\r\n      if (paymentSnapshotStr) {\r\n        const paymentSnapshot = JSON.parse(paymentSnapshotStr);\r\n        paymentSnapshot.metadata = mergedMetadata;\r\n        paymentSnapshot.lastUpdated = new Date().toISOString();\r\n        await env.ACCESSIBILITY_AUTH.put(`payment:${siteId}`, JSON.stringify(paymentSnapshot));\r\n        console.log('Updated payment snapshot with new metadata');\r\n      }\r\n      \r\n      // Update domain mapping if domain is provided\r\n      if (metadata.domain) {\r\n        const domainKey = `domain:${metadata.domain}`;\r\n        await env.ACCESSIBILITY_AUTH.put(domainKey, JSON.stringify({\r\n          siteId: siteId,\r\n          domain: metadata.domain,\r\n          connectedAt: new Date().toISOString(),\r\n          lastUpdated: new Date().toISOString()\r\n        }), { expirationTtl: 86400 * 30 }); // 30 days\r\n        console.log('Updated domain mapping for:', metadata.domain);\r\n      }\r\n      \r\n    } catch (kvError) {\r\n      console.warn('Failed to update KV store:', kvError);\r\n      // Don't fail the request if KV update fails\r\n    }\r\n    \r\n    const successResponse = secureJsonResponse({ \r\n      success: true,\r\n      subscription: {\r\n        id: updatedSubscription.id,\r\n        metadata: updatedSubscription.metadata\r\n      }\r\n    });\r\n    return addSecurityAndCorsHeaders(successResponse, origin);\r\n    \r\n  } catch (error) {\r\n    console.error('Update subscription metadata error:', error);\r\n    const errorResponse = secureJsonResponse({ \r\n      error: 'Failed to update subscription metadata',\r\n      details: error.message \r\n    }, 500);\r\n    return addSecurityAndCorsHeaders(errorResponse, origin);\r\n  }\r\n}\r\n\r\nasync function handleFixDomainMapping(request, env) {\r\n  const origin = request.headers.get('origin');\r\n  \r\n  try {\r\n    const { domain, siteId } = await request.json();\r\n    \r\n    if (!domain || !siteId) {\r\n      const errorResponse = secureJsonResponse({ error: 'Missing domain or siteId' }, 400);\r\n      return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    }\r\n    \r\n    console.log('Fixing domain mapping for:', domain, 'siteId:', siteId);\r\n    \r\n    // Create domain mapping\r\n    const domainKey = `domain:${domain}`;\r\n    await env.ACCESSIBILITY_AUTH.put(domainKey, JSON.stringify({\r\n      siteId: siteId,\r\n      domain: domain,\r\n      connectedAt: new Date().toISOString(),\r\n      lastUpdated: new Date().toISOString()\r\n    }), { expirationTtl: 86400 * 30 }); // 30 days\r\n    \r\n    console.log('Domain mapping created successfully for:', domain);\r\n    \r\n    const successResponse = secureJsonResponse({ \r\n      success: true, \r\n      message: 'Domain mapping created successfully',\r\n      domain: domain,\r\n      siteId: siteId\r\n    });\r\n    return addSecurityAndCorsHeaders(successResponse, origin);\r\n    \r\n  } catch (error) {\r\n    console.error('Error in handleFixDomainMapping:', error);\r\n    const errorResponse = secureJsonResponse({ error: 'Failed to fix domain mapping' }, 500);\r\n    return addSecurityAndCorsHeaders(errorResponse, origin);\r\n  }\r\n}\r\n\r\nasync function handleDebugPayment(request, env) {\r\n  const origin = request.headers.get('origin');\r\n  \r\n  try {\r\n    const url = new URL(request.url);\r\n    const siteId = url.searchParams.get('siteId');\r\n    \r\n    if (!siteId) {\r\n      const errorResponse = secureJsonResponse({ error: 'Missing siteId parameter' }, 400);\r\n      return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    }\r\n    \r\n    console.log('Debug payment data for siteId:', siteId);\r\n    \r\n    // Get all possible payment-related keys\r\n    const paymentKey = `payment:${siteId}`;\r\n    const userDataKey = `user_data_${siteId}`;\r\n    const authDataKey = `auth-data:${siteId}`;\r\n    \r\n    const paymentData = await env.ACCESSIBILITY_AUTH.get(paymentKey);\r\n    const userData = await env.ACCESSIBILITY_AUTH.get(userDataKey);\r\n    const authData = await env.ACCESSIBILITY_AUTH.get(authDataKey);\r\n    \r\n    const debugInfo = {\r\n      siteId: siteId,\r\n      paymentData: paymentData ? JSON.parse(paymentData) : null,\r\n      userData: userData ? JSON.parse(userData) : null,\r\n      authData: authData ? JSON.parse(authData) : null,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    \r\n    console.log('Debug payment info:', debugInfo);\r\n    \r\n    const successResponse = secureJsonResponse(debugInfo);\r\n    return addSecurityAndCorsHeaders(successResponse, origin);\r\n    \r\n  } catch (error) {\r\n    console.error('Error in handleDebugPayment:', error);\r\n    const errorResponse = secureJsonResponse({ error: 'Failed to debug payment data' }, 500);\r\n    return addSecurityAndCorsHeaders(errorResponse, origin);\r\n  }\r\n}\r\n\r\n\r\n// Reactivate subscription (for testing purposes)\r\nasync function handleReactivateSubscription(request, env) {\r\n  const origin = request.headers.get('origin');\r\n  \r\n  try {\r\n    const { siteId } = await request.json();\r\n    \r\n    if (!siteId) {\r\n      const errorResponse = secureJsonResponse({ error: 'Missing siteId' }, 400);\r\n      return addSecurityAndCorsHeaders(errorResponse, origin);\r\n    }\r\n    \r\n    console.log('Reactivating subscription for siteId:', siteId);\r\n    \r\n    // Update user_data_${siteId}\r\n    const userDataStr = await env.ACCESSIBILITY_AUTH.get(`user_data_${siteId}`);\r\n    if (userDataStr) {\r\n      const userData = JSON.parse(userDataStr);\r\n      userData.paymentStatus = 'active';\r\n      userData.lastPaymentDate = new Date().toISOString();\r\n      userData.currentPeriodStart = Math.floor(Date.now() / 1000);\r\n      userData.currentPeriodEnd = Math.floor(Date.now() / 1000) + (365 * 24 * 60 * 60); // 1 year from now\r\n      userData.cancelAtPeriodEnd = false;\r\n      userData.lastUpdated = new Date().toISOString();\r\n      \r\n      await env.ACCESSIBILITY_AUTH.put(`user_data_${siteId}`, JSON.stringify(userData));\r\n      console.log('Updated user_data_${siteId} with active status');\r\n    }\r\n    \r\n    // Update payment:${siteId} snapshot\r\n    const paymentSnapshotStr = await env.ACCESSIBILITY_AUTH.get(`payment:${siteId}`);\r\n    if (paymentSnapshotStr) {\r\n      const paymentSnapshot = JSON.parse(paymentSnapshotStr);\r\n      paymentSnapshot.status = 'active';\r\n      paymentSnapshot.lastPaymentDate = new Date().toISOString();\r\n      paymentSnapshot.currentPeriodStart = Math.floor(Date.now() / 1000);\r\n      paymentSnapshot.currentPeriodEnd = Math.floor(Date.now() / 1000) + (365 * 24 * 60 * 60); // 1 year from now\r\n      paymentSnapshot.cancelAtPeriodEnd = false;\r\n      paymentSnapshot.lastUpdated = new Date().toISOString();\r\n      \r\n      await env.ACCESSIBILITY_AUTH.put(`payment:${siteId}`, JSON.stringify(paymentSnapshot));\r\n      console.log('Updated payment:${siteId} with active status');\r\n    }\r\n    \r\n    const successResponse = secureJsonResponse({\r\n      success: true,\r\n      message: 'Subscription reactivated successfully',\r\n      siteId: siteId,\r\n      status: 'active',\r\n      validUntil: new Date(Date.now() + (365 * 24 * 60 * 60 * 1000)).toISOString()\r\n    });\r\n    return addSecurityAndCorsHeaders(successResponse, origin);\r\n    \r\n  } catch (error) {\r\n    console.error('Error in handleReactivateSubscription:', error);\r\n    const errorResponse = secureJsonResponse({ error: 'Failed to reactivate subscription' }, 500);\r\n    return addSecurityAndCorsHeaders(errorResponse, origin);\r\n  }\r\n}", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\Users\\\\sures\\\\ContrastKit\\\\worker.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\sures\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\sures\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"C:\\\\Users\\\\sures\\\\ContrastKit\\\\worker.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"C:\\\\Users\\\\sures\\\\ContrastKit\\\\.wrangler\\\\tmp\\\\bundle-crb4vj\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\sures\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"C:\\\\Users\\\\sures\\\\ContrastKit\\\\.wrangler\\\\tmp\\\\bundle-crb4vj\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"C:\\\\Users\\\\sures\\\\ContrastKit\\\\.wrangler\\\\tmp\\\\bundle-crb4vj\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": ";;;;AAAA,IAAM,OAAO,oBAAI,IAAI;AAErB,SAAS,SAAS,SAAS,MAAM;AAChC,QAAM,MACL,mBAAmB,MAChB,UACA,IAAI;AAAA,KACH,OAAO,YAAY,WACjB,IAAI,QAAQ,SAAS,IAAI,IACzB,SACD;AAAA,EACH;AACH,MAAI,IAAI,QAAQ,IAAI,SAAS,SAAS,IAAI,aAAa,UAAU;AAChE,QAAI,CAAC,KAAK,IAAI,IAAI,SAAS,CAAC,GAAG;AAC9B,WAAK,IAAI,IAAI,SAAS,CAAC;AACvB,cAAQ;AAAA,QACP;AAAA,KACO,IAAI,SAAS,CAAC;AAAA;AAAA,MACtB;AAAA,IACD;AAAA,EACD;AACD;AAnBS;AAqBT,WAAW,QAAQ,IAAI,MAAM,WAAW,OAAO;AAAA,EAC9C,MAAM,QAAQ,SAAS,UAAU;AAChC,UAAM,CAAC,SAAS,IAAI,IAAI;AACxB,aAAS,SAAS,IAAI;AACtB,WAAO,QAAQ,MAAM,QAAQ,SAAS,QAAQ;AAAA,EAC/C;AACD,CAAC;;;AC5BD,IAAM,kBAAkB;AAAA,EACpB,2BAA2B;AAAA,EAC3B,0BAA0B;AAAA,EAC1B,mBAAmB;AAAA,EACnB,oBAAoB;AAAA,EACpB,mBAAmB;AAAA,EACnB,6BAA6B;AAAA,EAC7B,8BAA8B;AAAA,EAC9B,gCAAgC;AAAA,EAChC,gCAAgC;AAAA,EAChC,0BAA0B;AAAA,EAC1B,sBAAsB;AAAA,EACtB,qCAAqC;AAAA,EACrC,sBAAsB;AAC1B;AAEA,IAAM,iBAAiB,oBAAI,IAAI;AAG/B,eAAe,6BAA6B,SAAS,KAAK;AACxD,QAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ;AAE3C,MAAI;AACF,UAAM,EAAE,QAAQ,QAAQ,WAAW,UAAU,iBAAiB,IAAI,MAAM,QAAQ,KAAK;AAErF,YAAQ,IAAI,sCAAsC,EAAE,QAAQ,QAAQ,WAAW,SAAS,CAAC;AAGzF,QAAI;AACF,YAAM,aAAa,IAAI,oBAAoB;AAC3C,YAAM,MAAM,YAAY;AAAA,QACtB,QAAQ;AAAA,QACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,QAC9C,MAAM,KAAK,UAAU;AAAA,UACnB,OAAO;AAAA,UACP,UAAU;AAAA,YACR,OAAO;AAAA,YACP,WAAW,kBAAkB,aAAa;AAAA,YAC1C;AAAA,YACA;AAAA,YACA;AAAA,UACF;AAAA,UACA,cAAc;AAAA,YACZ,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,YAClC,MAAM,oBAAoB,CAAC;AAAA,UAC7B;AAAA,QACF,CAAC;AAAA,MACH,CAAC;AACD,cAAQ,IAAI,4DAA4D;AAAA,IAC1E,SAAS,cAAc;AACrB,cAAQ,KAAK,0CAA0C,YAAY;AAAA,IACrE;AAGA,UAAM,qBAAqB;AAAA,MACzB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,cAAa,oBAAI,KAAK,GAAE,YAAY;AAAA,MACpC,QAAQ;AAAA,IACV;AAEA,UAAM,IAAI,mBAAmB,IAAI,gBAAgB,MAAM,IAAI,KAAK,UAAU,kBAAkB,CAAC;AAG7F,UAAM,MAAM,oBAAI,KAAK;AACrB,UAAM,WAAW,IAAI,KAAK,IAAI,QAAQ,IAAI,IAAI,KAAK,KAAK,KAAK,GAAI;AAGjE,UAAM,WAAW;AAAA,MACf;AAAA,MACA,OAAO,aAAa;AAAA,MACpB,QAAQ;AAAA,MACR,eAAe;AAAA,MACf,gBAAgB,IAAI,YAAY;AAAA,MAChC,cAAc,SAAS,YAAY;AAAA,MACnC,WAAW,IAAI,YAAY;AAAA,IAC7B;AACA,UAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,IAAI,KAAK,UAAU,QAAQ,CAAC;AAGhF,UAAM,kBAAkB,KAAK,QAAQ;AAAA,MACnC;AAAA,MACA,OAAO,aAAa;AAAA,MACpB,UAAU,YAAY;AAAA,MACtB,eAAe;AAAA,MACf,gBAAgB,IAAI,YAAY;AAAA,MAChC,cAAc,SAAS,YAAY;AAAA,IACrC,CAAC;AAED,UAAM,kBAAkB,mBAAmB;AAAA,MACzC,SAAS;AAAA,MACT,SAAS;AAAA,IACX,CAAC;AACD,WAAO,0BAA0B,iBAAiB,MAAM;AAAA,EAE1D,SAAS,OAAO;AACd,YAAQ,MAAM,mCAAmC,KAAK;AACtD,UAAM,gBAAgB,mBAAmB;AAAA,MACvC,OAAO;AAAA,MACP,SAAS,MAAM;AAAA,IACjB,GAAG,GAAG;AACN,WAAO,0BAA0B,eAAe,MAAM;AAAA,EACxD;AACF;AAtFe;AAyFf,SAAS,mBAAmB,MAAM,SAAS,KAAK;AAC5C,SAAO,IAAI,SAAS,KAAK,UAAU,IAAI,GAAG;AAAA,IACtC;AAAA,IACA,SAAS;AAAA,MACL,gBAAgB;AAAA,IACpB;AAAA,EACJ,CAAC;AACL;AAPS;AAST,SAAS,cAAc,OAAO;AAC1B,SAAO,MAAM,QAAQ,aAAa,CAAC,UAAU;AACzC,UAAM,YAAY;AAAA,MACd,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACT;AACA,WAAO,UAAU,KAAK;AAAA,EAC1B,CAAC;AACL;AAXS;AAYT,SAAS,eAAe,IAAI,UAAU;AAClC,QAAM,MAAM,KAAK,IAAI;AACrB,QAAM,WAAW,KAAK,KAAK;AAC3B,QAAM,cAAc;AAEpB,QAAM,eAAe,SAAS,IAAI,EAAE;AAEpC,MAAI,CAAC,gBAAgB,MAAM,aAAa,WAAW;AAC/C,aAAS,IAAI,IAAI,EAAE,OAAO,GAAG,WAAW,MAAM,SAAS,CAAC;AACxD,WAAO;AAAA,EACX;AAEA,MAAI,aAAa,SAAS,aAAa;AACnC,WAAO;AAAA,EACX;AAEA,eAAa;AACb,SAAO;AACX;AAlBS;AAqBT,eAAe,gBAAgB,KAAK,QAAQ;AAC1C,QAAM,WAAW,MAAM,IAAI,mBAAmB,IAAI,0BAA0B,MAAM,EAAE;AACpF,MAAI,CAAC,UAAU;AACb,WAAO;AAAA,MACL;AAAA,MACA,eAAe,CAAC;AAAA,MAChB,uBAAuB,CAAC;AAAA,MACxB,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,eAAe;AAAA,MACf,gBAAgB;AAAA,MAChB,cAAc;AAAA,MACd,YAAY;AAAA,MACZ,gBAAgB;AAAA,MAChB,iBAAiB;AAAA,MACjB,cAAa,oBAAI,KAAK,GAAE,YAAY;AAAA,MACpC,WAAU,oBAAI,KAAK,GAAE,YAAY;AAAA,IACnC;AAAA,EACF;AACA,MAAI;AAAE,WAAO,KAAK,MAAM,QAAQ;AAAA,EAAG,QAAQ;AAAE,WAAO,EAAE,QAAQ,eAAe,CAAC,EAAE;AAAA,EAAG;AACrF;AApBe;AAsBf,eAAe,kBAAkB,KAAK,QAAQ,OAAO;AACnD,QAAM,UAAU,MAAM,gBAAgB,KAAK,MAAM;AACjD,QAAM,UAAU,EAAE,GAAG,SAAS,GAAG,OAAO,cAAa,oBAAI,KAAK,GAAE,YAAY,GAAG,WAAU,oBAAI,KAAK,GAAE,YAAY,EAAE;AAClH,QAAM,IAAI,mBAAmB,IAAI,0BAA0B,MAAM,IAAI,KAAK,UAAU,OAAO,CAAC;AAC5F,SAAO;AACT;AALe;AAwCf,SAAS,0BAA0B,UAAU,QAAQ;AACjD,QAAM,UAAU,IAAI,QAAQ,SAAS,OAAO;AAG5C,SAAO,QAAQ,eAAe,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAM;AACtD,YAAQ,IAAI,KAAK,KAAK;AAAA,EAC1B,CAAC;AAED,UAAQ,IAAI,+BAA+B,UAAU,GAAG;AACxD,UAAQ,IAAI,gCAAgC,oBAAoB;AAChE,UAAQ,IAAI,gCAAgC,6EAA6E;AACzH,UAAQ,IAAI,oCAAoC,MAAM;AACtD,UAAQ,IAAI,0BAA0B,OAAO;AAC7C,UAAQ,IAAI,QAAQ,QAAQ;AAE5B,SAAO,IAAI,SAAS,SAAS,MAAM;AAAA,IAC/B,QAAQ,SAAS;AAAA,IACjB,YAAY,SAAS;AAAA,IACrB;AAAA,EACJ,CAAC;AACL;AApBS;AAyBT,IAAO,iBAAQ;AAAA,EACb,MAAM,MAAM,SAAS,KAAK,KAAK;AAC7B,UAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,UAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ;AAC3C,UAAM,WAAW,QAAQ,QAAQ,IAAI,iBAAiB,KAAK;AAG3D,QAAI,QAAQ,WAAW,WAAW;AAChC,aAAO,WAAW;AAAA,IACpB;AAGA,QAAI,IAAI,aAAa,uBAAuB;AAC1C,aAAO,qBAAqB,SAAS,GAAG;AAAA,IAC1C;AAGA,QAAI,IAAI,aAAa,sBAAsB;AACzC,aAAO,oBAAoB,SAAS,GAAG;AAAA,IACzC;AAIA,QAAI,IAAI,aAAa,qBAAqB,QAAQ,WAAW,QAAQ;AACnE,aAAO,gBAAgB,SAAS,GAAG;AAAA,IACrC;AAEC,QAAI,IAAI,aAAa,oBAAoB;AACxC,aAAO,iBAAiB,SAAS,GAAG;AAAA,IACtC;AAGA,QAAI,IAAI,aAAa,gCAAgC,QAAQ,WAAW,QAAQ;AAC9E,aAAO,sBAAsB,SAAS,GAAG;AAAA,IAC3C;AAGA,QAAI,IAAI,aAAa,sCAAsC;AACzD,aAAO,qBAAqB,SAAS,GAAG;AAAA,IAC1C;AAGA,QAAI,IAAI,aAAa,mCAAmC;AACtD,aAAO,kBAAkB,SAAS,GAAG;AAAA,IACvC;AAGJ,QAAI,IAAI,aAAa,kCAAkC,QAAQ,WAAW,OAAO;AAC/E,aAAO,uBAAuB,SAAS,GAAG;AAAA,IAC5C;AAIE,UAAM,oBAAoB,IAAI,SAAS,SAAS,gBAAgB,KACxC,IAAI,SAAS,SAAS,wBAAwB,KAC9C,IAAI,SAAS,SAAS,sBAAsB,KAC5C,IAAI,SAAS,SAAS,sBAAsB,KAC5C,IAAI,SAAS,SAAS,sBAAsB,KAC5C,IAAI,SAAS,SAAS,sBAAsB,KAC5C,IAAI,SAAS,SAAS,wBAAwB,KAC9C,IAAI,SAAS,SAAS,4BAA4B,KAClD,IAAI,SAAS,SAAS,wBAAwB,KAC9C,IAAI,SAAS,SAAS,0BAA0B,KAChD,IAAI,SAAS,SAAS,uBAAuB,KAC7C,IAAI,SAAS,SAAS,gBAAgB,KACtC,IAAI,SAAS,SAAS,kBAAkB;AAEhE,QAAI,CAAC,qBAAqB,CAAC,eAAe,UAAU,cAAc,GAAG;AACnE,YAAM,gBAAgB;AAAA,QACpB,EAAE,OAAO,sBAAsB;AAAA,QAC/B;AAAA,MACF;AACA,aAAO,0BAA0B,eAAe,MAAM;AAAA,IACxD;AAIE,QAAI,IAAI,aAAa,iCAAiC,QAAQ,WAAW,OAAO;AAC9E,aAAO,kBAAkB,SAAS,GAAG;AAAA,IACvC;AAGA,QAAI,IAAI,aAAa,kCAAkC,QAAQ,WAAW,UAAU,QAAQ,WAAW,QAAQ;AAC7G,aAAO,qBAAqB,SAAS,GAAG;AAAA,IAC1C;AAMJ,QAAI,IAAI,aAAa,+BAA+B,QAAQ,WAAW,OAAO;AAC5E,aAAO,gBAAgB,SAAS,GAAG;AAAA,IACrC;AAIA,QAAI,IAAI,aAAa,sCAAsC,QAAQ,WAAW,OAAO;AACnF,aAAO,mBAAmB,SAAS,GAAG;AAAA,IACxC;AAGA,QAAI,IAAI,aAAa,sCAAsC,QAAQ,WAAW,QAAQ;AACpF,aAAO,mBAAmB,SAAS,GAAG;AAAA,IACxC;AAGA,QAAI,IAAI,aAAa,qCAAqC,QAAQ,WAAW,QAAQ;AACnF,aAAO,kBAAkB,SAAS,GAAG;AAAA,IACvC;AACA,QAAI,IAAI,aAAa,uCAAuC,QAAQ,WAAW,OAAO;AACpF,aAAO,oBAAoB,SAAS,GAAG;AAAA,IACzC;AACA,QAAI,IAAI,aAAa,wCAAwC,QAAQ,WAAW,QAAQ;AACtF,aAAO,qBAAqB,SAAS,GAAG;AAAA,IAC1C;AACA,QAAI,IAAI,aAAa,kCAAkC,QAAQ,WAAW,OAAO;AAC/E,aAAO,eAAe,SAAS,GAAG;AAAA,IACpC;AACA,QAAI,IAAI,aAAa,uCAAuC,QAAQ,WAAW,QAAQ;AACrF,aAAO,oBAAoB,SAAS,GAAG;AAAA,IACzC;AACA,QAAI,IAAI,aAAa,4CAA4C,QAAQ,WAAW,QAAQ;AAC1F,aAAO,wBAAwB,SAAS,GAAG;AAAA,IAC7C;AACA,QAAI,IAAI,aAAa,4CAA4C,QAAQ,WAAW,QAAQ;AAC1F,aAAO,yBAAyB,SAAS,GAAG;AAAA,IAC9C;AACA,QAAI,IAAI,aAAa,4CAA4C,QAAQ,WAAW,QAAQ;AAC1F,aAAO,yBAAyB,SAAS,GAAG;AAAA,IAC9C;AACA,QAAI,IAAI,aAAa,4CAA4C,QAAQ,WAAW,QAAQ;AAC1F,aAAO,4BAA4B,SAAS,GAAG;AAAA,IACjD;AACA,QAAI,IAAI,aAAa,qDAAqD,QAAQ,WAAW,QAAQ;AACnG,aAAO,iCAAiC,SAAS,GAAG;AAAA,IACtD;AACA,QAAI,IAAI,aAAa,8CAA8C,QAAQ,WAAW,QAAQ;AAC5F,aAAO,0BAA0B,SAAS,GAAG;AAAA,IAC/C;AAGI,QAAI,IAAI,aAAa,yBAAyB,QAAQ,WAAW,QAAQ;AACvE,aAAO,oBAAoB,SAAS,GAAG;AAAA,IACzC;AAGA,QAAI,IAAI,aAAa,gCAAgC,QAAQ,WAAW,QAAQ;AAC9E,aAAO,6BAA6B,SAAS,GAAG;AAAA,IAClD;AAGA,QAAI,IAAI,aAAa,8CAA8C,QAAQ,WAAW,QAAQ;AAC5F,cAAQ,IAAI,mCAAmC;AAC/C,aAAO,2BAA2B,SAAS,GAAG;AAAA,IAChD;AAGA,QAAI,IAAI,aAAa,kDAAkD,QAAQ,WAAW,OAAO;AAC/F,aAAO,8BAA8B,SAAS,GAAG;AAAA,IACnD;AAGA,QAAI,IAAI,aAAa,8CAA8C,QAAQ,WAAW,OAAO;AAC3F,aAAO,0BAA0B,SAAS,GAAG;AAAA,IAC/C;AAGA,YAAQ,IAAI,oBAAoB,IAAI,UAAU,QAAQ,MAAM;AAG5D,QAAI,IAAI,aAAa,eAAe,QAAQ,WAAW,OAAO;AAC5D,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,SAAS,qBAAqB,YAAW,oBAAI,KAAK,GAAE,YAAY,EAAE,CAAC,GAAG;AAAA,QACzG,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,MAChD,CAAC;AAAA,IACH;AAGJ,QAAI,IAAI,aAAa,6CAA6C,QAAQ,WAAW,OAAO;AAC1F,aAAO,yBAAyB,SAAS,GAAG;AAAA,IAC9C;AAGA,QAAI,IAAI,aAAa,2CAA2C,QAAQ,WAAW,QAAQ;AACzF,aAAO,uBAAuB,SAAS,GAAG;AAAA,IAC5C;AAGA,QAAI,IAAI,aAAa,sCAAsC,QAAQ,WAAW,OAAO;AACnF,aAAO,mBAAmB,SAAS,GAAG;AAAA,IACxC;AAIA,QAAI,IAAI,aAAa,gDAAgD,QAAQ,WAAW,QAAQ;AAC9F,aAAO,6BAA6B,SAAS,GAAG;AAAA,IAClD;AAGI,QAAI,IAAI,aAAa,gBAAgB,QAAQ,WAAW,OAAO;AAC7D,aAAO,mBAAmB,SAAS,GAAG;AAAA,IACxC;AAGA,QAAI,IAAI,aAAa,sCAAsC,QAAQ,WAAW,QAAQ;AACpF,aAAO,mBAAmB,SAAS,GAAG;AAAA,IACxC;AAGA,QAAI,IAAI,aAAa,8CAA8C,QAAQ,WAAW,QAAQ;AAC5F,aAAO,0BAA0B,SAAS,GAAG;AAAA,IAC/C;AAIJ,QAAI,IAAI,aAAa,2CAA2C,QAAQ,WAAW,QAAQ;AACvF,UAAI;AACA,cAAM,EAAE,QAAQ,cAAc,cAAc,IAAI,MAAM,QAAQ,KAAK;AAEnE,YAAI,CAAC,UAAU,CAAC,cAAc;AAC1B,iBAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,iCAAiC,CAAC,GAAG;AAAA,YAC7E,QAAQ;AAAA,YACR,SAAS;AAAA,cACL,gBAAgB;AAAA,cAChB,+BAA+B;AAAA,cAC/B,gCAAgC;AAAA,cAChC,gCAAgC;AAAA,YACpC;AAAA,UACJ,CAAC;AAAA,QACL;AAGA,cAAM,eAAe,MAAM,IAAI,mBAAmB,IAAI,sBAAsB,MAAM,EAAE;AACpF,YAAI,qBAAqB,CAAC;AAE1B,YAAI,cAAc;AACd,cAAI;AACA,iCAAqB,KAAK,MAAM,YAAY;AAAA,UAChD,SAAS,OAAO;AACZ,oBAAQ,KAAK,gDAAgD,KAAK;AAAA,UACtE;AAAA,QACJ;AAGA,cAAM,oBAAoB;AAAA,UACtB,GAAG;AAAA,UACH;AAAA,UACA;AAAA,UACA,eAAe,iBAAiB,mBAAmB,iBAAiB,CAAC;AAAA,UACrE,cAAa,oBAAI,KAAK,GAAE,YAAY;AAAA,UACpC,WAAU,oBAAI,KAAK,GAAE,YAAY;AAAA,QACrC;AAGI,cAAM,IAAI,mBAAmB,IAAI,sBAAsB,MAAM,IAAI,KAAK,UAAU,iBAAiB,CAAC;AAElG,cAAM,wBAAwB,iBAAiB,YAAY;AAC3D,cAAM,IAAI,mBAAmB,IAAI,uBAAuB,KAAK,UAAU;AAAA,UACrE;AAAA,UACA;AAAA,UACA,eAAe,kBAAkB;AAAA,UACjC,cAAa,oBAAI,KAAK,GAAE,YAAY;AAAA,UACpC,WAAU,oBAAI,KAAK,GAAE,YAAY;AAAA,QACnC,CAAC,CAAC;AAGN,cAAM,YAAY,UAAU,YAAY;AACxC,cAAM,IAAI,mBAAmB,IAAI,WAAW,KAAK,UAAU;AAAA,UACvD;AAAA,UACA;AAAA,UACA,cAAa,oBAAI,KAAK,GAAE,YAAY;AAAA,QACxC,CAAC,GAAG,EAAE,eAAe,QAAQ,GAAG,CAAC;AAEjC,eAAO,IAAI,SAAS,KAAK,UAAU,EAAE,SAAS,KAAK,CAAC,GAAG;AAAA,UACnD,QAAQ;AAAA,UACR,SAAS;AAAA,YACL,gBAAgB;AAAA,YAChB,+BAA+B;AAAA,YAC/B,gCAAgC;AAAA,YAChC,gCAAgC;AAAA,UACpC;AAAA,QACJ,CAAC;AAAA,MAEL,SAAS,OAAO;AACZ,eAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,oCAAoC,CAAC,GAAG;AAAA,UAChF,QAAQ;AAAA,UACR,SAAS;AAAA,YACL,gBAAgB;AAAA,YAChB,+BAA+B;AAAA,YAC/B,gCAAgC;AAAA,YAChC,gCAAgC;AAAA,UACpC;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,IACJ;AAGA,QAAI,IAAI,aAAa,kCAAkC,QAAQ,WAAW,OAAO;AAC7E,UAAI;AACA,cAAMA,OAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,cAAM,SAASA,KAAI,aAAa,IAAI,QAAQ;AAE5C,YAAI,CAAC,QAAQ;AACT,iBAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,2BAA2B,CAAC,GAAG;AAAA,YACvE,QAAQ;AAAA,YACR,SAAS;AAAA,cACL,gBAAgB;AAAA,cAChB,+BAA+B;AAAA,cAC/B,gCAAgC;AAAA,cAChC,gCAAgC;AAAA,YACpC;AAAA,UACJ,CAAC;AAAA,QACL;AAGA,cAAM,WAAW,MAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,EAAE;AAEvE,YAAI,CAAC,UAAU;AACX,iBAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,+BAA+B,CAAC,GAAG;AAAA,YAC3E,QAAQ;AAAA,YACR,SAAS;AAAA,cACL,gBAAgB;AAAA,cAChB,+BAA+B;AAAA,cAC/B,gCAAgC;AAAA,cAChC,gCAAgC;AAAA,YACpC;AAAA,UACJ,CAAC;AAAA,QACL;AAEA,cAAM,aAAa,KAAK,MAAM,QAAQ;AAGtC,cAAM,eAAe;AAAA,UACjB,aAAa,WAAW;AAAA,UACxB,QAAQ,WAAW;AAAA,UACnB,UAAU,WAAW;AAAA,UACrB,MAAM,WAAW;AAAA,UACjB,aAAa,WAAW;AAAA,UACxB,eAAe,WAAW;AAAA,QAC9B;AAEA,eAAO,IAAI,SAAS,KAAK,UAAU,YAAY,GAAG;AAAA,UAC9C,SAAS;AAAA,YACL,gBAAgB;AAAA,YAChB,+BAA+B;AAAA,YAC/B,gCAAgC;AAAA,YAChC,gCAAgC;AAAA,UACpC;AAAA,QACJ,CAAC;AAAA,MAEL,SAAS,OAAO;AACZ,eAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,mCAAmC,CAAC,GAAG;AAAA,UAC/E,QAAQ;AAAA,UACR,SAAS;AAAA,YACL,gBAAgB;AAAA,YAChB,+BAA+B;AAAA,YAC/B,gCAAgC;AAAA,YAChC,gCAAgC;AAAA,UACpC;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,IACJ;AAEI,WAAO,IAAI,SAAS,4BAA4B;AAAA,MAC9C,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,+BAA+B;AAAA,MACjC;AAAA,IACF,CAAC;AAAA,EACH;AACF;AAGA,SAAS,aAAa;AACpB,QAAM,eAAe,IAAI,SAAS,MAAM;AAAA,IACtC,QAAQ;AAAA,IACR,SAAS;AAAA,MACP,+BAA+B;AAAA,MAC/B,gCAAgC;AAAA,MAChC,gCAAgC;AAAA,MAChC,0BAA0B;AAAA,IAC5B;AAAA,EACF,CAAC;AACD,SAAO,0BAA0B,cAAc,GAAG;AACpD;AAXS;AAaT,eAAe,qBAAqB,SAAS,KAAK;AAChD,QAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,QAAM,gBAAgB,IAAI,aAAa,IAAI,OAAO;AAClD,QAAM,SAAS,IAAI,aAAa,IAAI,QAAQ;AAE5C,QAAM,aAAa,iBAAiB,cAAc,WAAW,kBAAkB;AAC/E,QAAM,SAAS;AAAA,IACb;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAEA,QAAM,cAAc;AACpB,QAAM,UAAU,IAAI,IAAI,qCAAqC;AAC7D,UAAQ,aAAa,IAAI,aAAa,IAAI,iBAAiB;AAC3D,UAAQ,aAAa,IAAI,iBAAiB,MAAM;AAChD,UAAQ,aAAa,IAAI,gBAAgB,WAAW;AACpD,UAAQ,aAAa,IAAI,SAAS,OAAO,KAAK,GAAG,CAAC;AAElD,MAAI,YAAY;AACd,UAAM,gBAAgB,WAAW,cAAc,SAAS,GAAG,IAAI,cAAc,MAAM,GAAG,EAAE,CAAC,IAAI;AAC7F,QAAI,eAAe;AACjB,cAAQ,aAAa,IAAI,SAAS,oBAAoB,aAAa,EAAE;AAAA,IACvE,OAAO;AACL,cAAQ,aAAa,IAAI,SAAS,kBAAkB;AAAA,IACtD;AAAA,EACF,OAAO;AAEL,UAAM,WAAW,QAAQ,QAAQ,IAAI,SAAS,KAAK;AACnD,QAAI,WAAW;AACf,QAAI,SAAS,SAAS,qBAAqB,GAAG;AAC5C,YAAM,QAAQ,SAAS,MAAM,+BAA+B;AAC5D,UAAI,OAAO;AACT,mBAAW,IAAI,MAAM,CAAC,CAAC;AACvB,gBAAQ,IAAI,sDAAsD,QAAQ;AAAA,MAC5E;AAAA,IACF;AACA,YAAQ,aAAa,IAAI,SAAS,uBAAuB,QAAQ,EAAE;AAAA,EACrE;AACA,SAAO,IAAI,SAAS,MAAM;AAAA,IACxB,QAAQ;AAAA,IACR,SAAS;AAAA,MACP,YAAY,QAAQ,SAAS;AAAA,IAC/B;AAAA,EACF,CAAC;AACH;AA/Ce;AAkDf,eAAe,oBAAoB,SAAS,KAAK;AAC/C,QAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,QAAM,OAAO,IAAI,aAAa,IAAI,MAAM;AACxC,QAAM,QAAQ,IAAI,aAAa,IAAI,OAAO;AAE1C,MAAI,CAAC,MAAM;AACT,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,iCAAiC,CAAC,GAAG;AAAA,MAC/E,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAChD,CAAC;AAAA,EACH;AAGA,MAAI,CAAC,OAAO;AAAA,EAEZ;AAEA,MAAI;AACF,UAAM,aAAa,SAAS,MAAM,WAAW,kBAAkB;AAC/D,UAAM,qBAAqB,SAAS,MAAM,WAAW,sBAAsB;AAC3E,UAAM,cAAc;AAGpB,QAAI,2BAA2B;AAC/B,QAAI,sBAAsB,MAAM,SAAS,GAAG,GAAG;AAC7C,YAAM,QAAQ,MAAM,MAAM,GAAG;AAC7B,UAAI,MAAM,UAAU,GAAG;AACrB,mCAA2B,MAAM,MAAM,CAAC,EAAE,KAAK,GAAG;AAClD,gBAAQ,IAAI,wDAAwD,wBAAwB;AAAA,MAC9F;AAAA,IACF;AAEA,YAAQ,IAAI,8BAA8B;AAC1C,YAAQ,IAAI,gBAAgB,QAAQ,GAAG;AACvC,YAAQ,IAAI,kBAAkB,IAAI;AAClC,YAAQ,IAAI,UAAU,KAAK;AAC3B,YAAQ,IAAI,uBAAuB,WAAW;AAC9C,YAAQ,IAAI,cAAc,IAAI,iBAAiB;AAC/C,YAAQ,IAAI,cAAc,aAAa,kBAAkB,qBAAqB;AAG9E,UAAM,YAAY,IAAI,aAAa,IAAI,QAAQ;AAC/C,YAAQ,IAAI,oBAAoB,SAAS;AAGzC,UAAM,mBAAmB;AAAA,MACvB,WAAW,IAAI;AAAA,MACf,eAAe,IAAI;AAAA,MACnB;AAAA,MACA,YAAY;AAAA,IACd;AAGA,QAAI,YAAY;AACd,uBAAiB,eAAe;AAAA,IAClC;AAEA,YAAQ,IAAI,uBAAuB,KAAK,UAAU,kBAAkB,MAAM,CAAC,CAAC;AAE5E,UAAM,gBAAgB,MAAM,MAAM,8CAA8C;AAAA,MAC9E,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,gBAAgB;AAAA,MAClB;AAAA,MACA,MAAM,KAAK,UAAU,gBAAgB;AAAA,IACvC,CAAC;AAED,QAAI,CAAC,cAAc,IAAI;AACrB,YAAM,YAAY,MAAM,cAAc,KAAK;AAC3C,cAAQ,MAAM,0BAA0B,cAAc,QAAQ,SAAS;AACvE,YAAM,IAAI,MAAM,0BAA0B,cAAc,MAAM,MAAM,SAAS,EAAE;AAAA,IACjF;AAEA,UAAM,YAAY,MAAM,cAAc,KAAK;AAC3C,YAAQ,IAAI,SAAS;AACrB,YAAQ,IAAI,2BAA2B;AAGvC,UAAM,eAAe,MAAM,MAAM,kDAAkD;AAAA,MACjF,SAAS;AAAA,QACP,iBAAiB,UAAU,UAAU,YAAY;AAAA,QACjD,kBAAkB;AAAA,MACpB;AAAA,IACF,CAAC;AAED,QAAI,CAAC,aAAa,IAAI;AACpB,YAAM,IAAI,MAAM,sBAAsB,aAAa,MAAM,EAAE;AAAA,IAC7D;AAEA,UAAM,WAAW,MAAM,aAAa,KAAK;AAGzC,UAAM,gBAAgB,MAAM,MAAM,oCAAoC;AAAA,MACpE,SAAS;AAAA,QACP,iBAAiB,UAAU,UAAU,YAAY;AAAA,QACjD,kBAAkB;AAAA,MACpB;AAAA,IACF,CAAC;AAED,QAAI,CAAC,cAAc,IAAI;AACrB,YAAM,IAAI,MAAM,uBAAuB,cAAc,MAAM,EAAE;AAAA,IAC/D;AAEA,UAAM,YAAY,MAAM,cAAc,KAAK;AAC3C,QAAI,QAAQ,CAAC;AACb,QAAI,UAAU,OAAO;AACnB,cAAQ,UAAU;AAAA,IACpB,WAAW,UAAU,OAAO;AAC1B,cAAQ,UAAU;AAAA,IACpB,WAAW,MAAM,QAAQ,SAAS,GAAG;AACnC,cAAQ;AAAA,IACV;AAEA,QAAI,MAAM,WAAW,GAAG;AACtB,YAAM,IAAI,MAAM,wBAAwB;AAAA,IAC1C;AAGA,QAAI;AACJ,QAAI,YAAY;AAEd,YAAM,kBAAkB,MAAM,SAAS,GAAG,IAAI,MAAM,MAAM,GAAG,EAAE,CAAC,IAAI;AACpE,UAAI,iBAAiB;AACnB,sBAAc,MAAM,KAAK,UAAQ,KAAK,OAAO,eAAe,KAAK,MAAM,CAAC;AAAA,MAC1E,OAAO;AACL,sBAAc,MAAM,CAAC;AAAA,MACvB;AAAA,IACF,OAAO;AAEL,UAAI,WAAW;AAEb,cAAM,YAAY,MAAM,KAAK,UAAQ,KAAK,OAAO,SAAS;AAC1D,YAAI,WAAW;AACb,wBAAc;AACd,kBAAQ,IAAI,uDAAuD,YAAY,IAAI,YAAY,SAAS;AAAA,QAC1G,OAAO;AACL,kBAAQ,IAAI,uDAAuD,SAAS;AAC5E,wBAAc,MAAM,CAAC;AAAA,QACvB;AAAA,MACF,WAAW,0BAA0B;AACnC,cAAM,YAAY,MAAM,KAAK,UAAQ,KAAK,cAAc,wBAAwB;AAChF,sBAAc,aAAa,MAAM,CAAC;AAAA,MACpC,OAAO;AAEL,cAAM,WAAW,QAAQ,QAAQ,IAAI,SAAS,KAAK;AACnD,YAAI,SAAS,SAAS,qBAAqB,GAAG;AAC5C,gBAAM,QAAQ,SAAS,MAAM,+BAA+B;AAC5D,cAAI,OAAO;AACT,kBAAM,YAAY,MAAM,CAAC;AACzB,kBAAM,YAAY,MAAM,KAAK,UAAQ,KAAK,cAAc,SAAS;AACjE,0BAAc,aAAa,MAAM,CAAC;AAAA,UACpC,OAAO;AACL,0BAAc,MAAM,CAAC;AAAA,UACvB;AAAA,QACF,OAAO;AACL,wBAAc,MAAM,CAAC;AAAA,QACvB;AAAA,MACF;AAAA,IACF;AAGA,UAAM,SAAS,SAAS,MAAM,SAAS;AACvC,UAAM,eAAe,MAAM,mBAAmB,EAAC,GAAG,UAAU,IAAI,OAAM,GAAG,KAAK,YAAY,EAAE;AAG5F,QAAI,YAAY;AAId,YAAM,IAAI,mBAAmB,IAAI,aAAa,YAAY,EAAE,IAAI,KAAK,UAAU;AAAA,QAC7E,aAAa,UAAU;AAAA,QACvB,UAAU,YAAY,QAAQ,YAAY;AAAA,QAC1C,QAAQ,YAAY;AAAA,QACpB,MAAM;AAAA,QACN,OAAO,SAAS,SAAS;AAAA,QACzB,WAAW;AAAA,QACX,aAAa,SAAS,eAAe;AAAA,QACrC,cAAa,oBAAI,KAAK,GAAE,YAAY;AAAA,QACpC,eAAe;AAAA,QACf,WAAU,oBAAI,KAAK,GAAE,YAAY;AAAA,MACnC,CAAC,CAAC;AAGF,YAAM,IAAI,mBAAmB,IAAI,0BAA0B,YAAY,EAAE,IAAI,KAAK,UAAU;AAAA,QAC1F,QAAQ,YAAY;AAAA,QACpB,eAAe,CAAC;AAAA,QAChB,uBAAuB,CAAC;AAAA,QACxB,cAAc;AAAA,QACd,cAAa,oBAAI,KAAK,GAAE,YAAY;AAAA,QACpC,WAAU,oBAAI,KAAK,GAAE,YAAY;AAAA,MACnC,CAAC,CAAC;AAIF,aAAO,IAAI,SAAS,MAAM;AAAA,QACxB,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,YAAY,WAAW,YAAY,SAAS,2BAA2B,IAAI,iBAAiB;AAAA,QAC9F;AAAA,MACF,CAAC;AAAA,IACH;AAGA,YAAQ,IAAI,gEAAgE;AAC5E,YAAQ,IAAI,+CAA+C,YAAY,IAAI,YAAY,QAAQ,YAAY,SAAS;AAGpH,UAAM,IAAI,mBAAmB,IAAI,aAAa,YAAY,EAAE,IAAI,KAAK,UAAU;AAAA,MAC7E,aAAa,UAAU;AAAA,MACvB,UAAU,YAAY,QAAQ,YAAY;AAAA,MAC1C,QAAQ,YAAY;AAAA,MACpB,MAAM;AAAA,MACN,OAAO,SAAS,SAAS;AAAA,MACzB,WAAW;AAAA,MACX,aAAa,SAAS,eAAe;AAAA,MACrC,cAAa,oBAAI,KAAK,GAAE,YAAY;AAAA,MACpC,eAAe;AAAA,MACf,WAAU,oBAAI,KAAK,GAAE,YAAY;AAAA,IACnC,CAAC,CAAC;AAGF,UAAM,kBAAkB,KAAK,YAAY,IAAI,EAAE,QAAQ,YAAY,GAAG,CAAC;AAEvE,UAAM,kBAAkB,KAAK,YAAY,IAAI,EAAE,QAAQ,YAAY,GAAG,CAAC;AAGvE,QAAI;AACF,UAAI,YAAY,WAAW;AACzB,cAAM,mBAAmB,GAAG,YAAY,SAAS;AACjD,cAAM,YAAY,UAAU,gBAAgB;AAE5C,cAAM,IAAI,mBAAmB,IAAI,WAAW,KAAK,UAAU;AAAA,UACzD,QAAQ,YAAY;AAAA,UACpB,QAAQ;AAAA,UACR,WAAW;AAAA,UACX,oBAAoB;AAAA,UACpB,cAAa,oBAAI,KAAK,GAAE,YAAY;AAAA,QACtC,CAAC,GAAG,EAAE,eAAe,QAAQ,GAAG,CAAC;AAEjC,gBAAQ,IAAI,0DAA0D,kBAAkB,MAAM,YAAY,EAAE;AAAA,MAC9G;AAAA,IACF,SAAS,aAAa;AACpB,cAAQ,KAAK,2DAA2D,WAAW;AAAA,IACrF;AAIA,UAAM,iBAAiB,MAAM,IAAI,mBAAmB,IAAI,aAAa,YAAY,EAAE,EAAE;AACrF,QAAI,YAAY,SAAS,SAAS;AAClC,QAAI,gBAAgB;AAClB,UAAI;AACF,cAAM,SAAS,KAAK,MAAM,cAAc;AACxC,oBAAY,OAAO,SAAS,SAAS,SAAS;AAAA,MAChD,SAAS,GAAG;AACV,gBAAQ,KAAK,qCAAqC,CAAC;AAAA,MACrD;AAAA,IACF;AAGA,WAAO,IAAI,SAAS,MAAM;AAAA,MACxB,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,YAAY,WAAW,YAAY,SAAS;AAAA,MAC9C;AAAA,IACF,CAAC;AAAA,EAGH,SAAS,OAAO;AACd,YAAQ,MAAM,yBAAyB,KAAK;AAC5C,WAAO,IAAI,SAAS,KAAK,UAAU;AAAA,MACjC,OAAO;AAAA,MACP,SAAS,MAAM;AAAA,IACjB,CAAC,GAAG;AAAA,MACF,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAChD,CAAC;AAAA,EACH;AACF;AArRe;AA0Rf,eAAe,sBAAsB,SAAS,KAAK;AACjD,QAAM,YAAY,OAAO,KAAK,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,OAAO,GAAG,CAAC,CAAC;AAC9E,UAAQ,IAAI,aAAa,SAAS,2BAA2B;AAE7D,MAAI;AAEF,UAAM,aAAa,MAAM,WAAW,SAAS,GAAG;AAChD,QAAI,CAAC,YAAY;AACf,cAAQ,IAAI,aAAa,SAAS,wBAAwB;AAC1D,aAAO,IAAI,SAAS,KAAK,UAAU;AAAA,QACjC,OAAO;AAAA,QACP;AAAA,MACF,CAAC,GAAG;AAAA,QACF,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,+BAA+B;AAAA,UAC/B,gCAAgC;AAAA,UAChC,gCAAgC;AAAA,QAClC;AAAA,MACF,CAAC;AAAA,IACH;AAGA,UAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,UAAM,YAAY,IAAI,aAAa,IAAI,QAAQ;AAC/C,UAAM,SAAS,aAAa,WAAW;AAEvC,YAAQ,IAAI,aAAa,SAAS,kBAAkB,MAAM,UAAU,YAAY,kBAAkB,aAAa,GAAG;AAElH,QAAI,CAAC,QAAQ;AACX,cAAQ,IAAI,aAAa,SAAS,sBAAsB;AACxD,aAAO,IAAI,SAAS,KAAK,UAAU;AAAA,QACjC,OAAO;AAAA,QACP;AAAA,MACF,CAAC,GAAG;AAAA,QACF,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,+BAA+B;AAAA,UAC/B,gCAAgC;AAAA,UAChC,gCAAgC;AAAA,QAClC;AAAA,MACF,CAAC;AAAA,IACH;AAGA,UAAM,OAAO,MAAM,QAAQ,KAAK;AAChC,YAAQ,IAAI,aAAa,SAAS,mBAAmB,IAAI;AACzD,YAAQ,IAAI,aAAa,SAAS,eAAe,OAAO,KAAK,IAAI,CAAC;AAClE,YAAQ,IAAI,aAAa,SAAS,wBAAwB,KAAK,gBAAgB,OAAO,KAAK,KAAK,aAAa,IAAI,kBAAkB;AAGnI,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AAGJ,YAAQ,IAAI,aAAa,SAAS,iBAAiB,KAAK,UAAU,YAAY,MAAM,CAAC,CAAC;AACtF,YAAQ,IAAI,aAAa,SAAS,yBAAyB,WAAW,QAAQ;AAC9E,YAAQ,IAAI,aAAa,SAAS,yBAAyB,WAAW,QAAQ;AAG9E,UAAM,uBAAuB,MAAM,IAAI,mBAAmB,IAAI,0BAA0B,MAAM,EAAE;AAChG,QAAI,mBAAmB,CAAC;AAExB,QAAI,sBAAsB;AACxB,UAAI;AACF,2BAAmB,KAAK,MAAM,oBAAoB;AAClD,gBAAQ,IAAI,aAAa,SAAS,wCAAwC;AAAA,MAC5E,SAAS,OAAO;AACd,gBAAQ,KAAK,aAAa,SAAS,qDAAqD,KAAK;AAAA,MAC/F;AAAA,IACF;AAGA,UAAM,WAAW,MAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,EAAE;AACvE,QAAI,WAAW,CAAC;AAChB,QAAI,UAAU;AACZ,UAAI;AACF,mBAAW,KAAK,MAAM,QAAQ;AAC9B,gBAAQ,IAAI,aAAa,SAAS,2BAA2B;AAAA,MAC/D,SAAS,OAAO;AACd,gBAAQ,KAAK,aAAa,SAAS,wCAAwC,KAAK;AAAA,MAClF;AAAA,IACF;AAEA,QAAI,cAAc,SAAS;AAC3B,YAAQ,IAAI,aAAa,SAAS,yBAAyB,CAAC,CAAC,WAAW;AAGxE,UAAM,oBAAoB;AAAA,MACxB;AAAA,MACA,eAAe;AAAA,QACb,GAAG,iBAAiB;AAAA;AAAA,QACpB,GAAG;AAAA;AAAA,QACH,mBAAmB,qBAAqB,eAAe,qBAAqB,iBAAiB,eAAe;AAAA,MAC9G;AAAA,MACA,uBAAuB,yBAAyB,iBAAiB;AAAA,MACjE,cAAc,gBAAgB,iBAAiB;AAAA,MAC/C;AAAA,MACA,cAAa,oBAAI,KAAK,GAAE,YAAY;AAAA,MACpC,WAAU,oBAAI,KAAK,GAAE,YAAY;AAAA,IACnC;AAGA,UAAM,mBAAmB,0BAA0B,MAAM;AACzD,YAAQ,IAAI,aAAa,SAAS,6CAA6C,gBAAgB,EAAE;AACjG,YAAQ,IAAI,aAAa,SAAS,iCAAiC,KAAK,UAAU,mBAAmB,MAAM,CAAC,CAAC;AAE7G,UAAM,IAAI,mBAAmB,IAAI,kBAAkB,KAAK,UAAU,iBAAiB,CAAC;AAIpF,QAAI;AACF,YAAM,kBAAkB,MAAM,MAAM,oCAAoC,MAAM,YAAY;AAAA,QACxF,SAAS;AAAA,UACP,iBAAiB,UAAU,WAAW;AAAA,UACtC,kBAAkB;AAAA,QACpB;AAAA,MACF,CAAC;AAED,UAAI,gBAAgB,IAAI;AACtB,cAAM,cAAc,MAAM,gBAAgB,KAAK;AAC/C,gBAAQ,IAAI,aAAa,SAAS,mBAAmB,WAAW;AAGhE,mBAAW,UAAU,YAAY,WAAW,CAAC,GAAG;AAC9C,gBAAM,YAAY,UAAU,OAAO,IAAI;AACvC,gBAAM,IAAI,mBAAmB,IAAI,WAAW,KAAK,UAAU;AAAA,YACzD;AAAA,YACA,QAAQ,OAAO;AAAA,YACf,WAAW,OAAO;AAAA,YAClB,cAAa,oBAAI,KAAK,GAAE,YAAY;AAAA,UACtC,CAAC,GAAG,EAAE,eAAe,QAAQ,GAAG,CAAC;AAEjC,kBAAQ,IAAI,aAAa,SAAS,2BAA2B,OAAO,IAAI,OAAO,MAAM,EAAE;AAAA,QACzF;AAAA,MACF;AAAA,IACF,SAAS,aAAa;AACpB,cAAQ,KAAK,aAAa,SAAS,2BAA2B,WAAW;AAAA,IAC3E;AAIA,QAAI;AAEF,YAAM,eAAe,MAAM,MAAM,oCAAoC,MAAM,IAAI;AAAA,QAC7E,SAAS;AAAA,UACP,iBAAiB,UAAU,WAAW;AAAA,UACtC,kBAAkB;AAAA,QACpB;AAAA,MACF,CAAC;AAED,UAAI,aAAa,IAAI;AACnB,cAAM,WAAW,MAAM,aAAa,KAAK;AACzC,gBAAQ,IAAI,aAAa,SAAS,eAAe,QAAQ;AAEzD,YAAI,SAAS,WAAW;AACtB,gBAAM,mBAAmB,GAAG,SAAS,SAAS;AAC9C,gBAAM,YAAY,UAAU,gBAAgB;AAE5C,gBAAM,IAAI,mBAAmB,IAAI,WAAW,KAAK,UAAU;AAAA,YACzD;AAAA,YACA,QAAQ;AAAA,YACR,WAAW;AAAA;AAAA,YACX,oBAAoB;AAAA,YACpB,cAAa,oBAAI,KAAK,GAAE,YAAY;AAAA,UACtC,CAAC,GAAG,EAAE,eAAe,QAAQ,GAAG,CAAC;AAEjC,kBAAQ,IAAI,aAAa,SAAS,sCAAsC,gBAAgB,OAAO,MAAM,EAAE;AAAA,QACzG;AAAA,MACF;AAAA,IACF,SAAS,WAAW;AAClB,cAAQ,KAAK,aAAa,SAAS,mDAAmD,SAAS;AAAA,IACjG;AAGA,QAAI,cAAc;AAChB,YAAM,YAAY,UAAU,YAAY;AACxC,YAAM,IAAI,mBAAmB,IAAI,WAAW,KAAK,UAAU;AAAA,QACzD;AAAA,QACA;AAAA,QACA,cAAa,oBAAI,KAAK,GAAE,YAAY;AAAA,MACtC,CAAC,GAAG,EAAE,eAAe,MAAM,CAAC;AAAA,IAC9B;AAEA,YAAQ,IAAI,aAAa,SAAS,kCAAkC;AAEpE,WAAO,IAAI,SAAS,KAAK,UAAU;AAAA,MACjC,SAAS;AAAA,MACT,SAAS;AAAA,MACT,MAAM;AAAA,QACJ,eAAe,kBAAkB;AAAA,QACjC,uBAAuB,kBAAkB;AAAA,QACzC,cAAc,kBAAkB;AAAA,QAChC,aAAa,kBAAkB;AAAA,MACjC;AAAA,MACA;AAAA,IACF,CAAC,GAAG;AAAA,MACF,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,+BAA+B;AAAA,QAC/B,gCAAgC;AAAA,QAChC,gCAAgC;AAAA,MAClC;AAAA,IACF,CAAC;AAAA,EAEH,SAAS,OAAO;AACd,YAAQ,MAAM,aAAa,SAAS,8BAA8B,KAAK;AACvE,WAAO,IAAI,SAAS,KAAK,UAAU;AAAA,MACjC,OAAO;AAAA,MACP,SAAS,OAAO,KAAK;AAAA,MACrB;AAAA,IACF,CAAC,GAAG;AAAA,MACF,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,+BAA+B;AAAA,QAC/B,gCAAgC;AAAA,QAChC,gCAAgC;AAAA,MAClC;AAAA,IACF,CAAC;AAAA,EACH;AACF;AArOe;AAwOf,eAAe,kBAAkB,SAAS,KAAK;AAC7C,QAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ;AAE3C,QAAM,aAAa,MAAM,WAAW,SAAS,GAAG;AAChD,MAAI,CAAC,YAAY;AACf,UAAM,gBAAgB,mBAAmB,EAAE,OAAO,eAAe,GAAG,GAAG;AACvE,WAAO,0BAA0B,eAAe,MAAM;AAAA,EACxD;AAGA,QAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,QAAM,YAAY,IAAI,aAAa,IAAI,QAAQ;AAC/C,QAAM,SAAS,aAAa,WAAW;AAEvC,MAAI,CAAC,QAAQ;AACX,UAAM,gBAAgB,mBAAmB,EAAE,OAAO,qBAAqB,GAAG,GAAG;AAC7E,WAAO,0BAA0B,eAAe,MAAM;AAAA,EACxD;AAGA,QAAM,oBAAoB,MAAM,IAAI,mBAAmB,IAAI,0BAA0B,MAAM,EAAE;AAC7F,MAAI,CAAC,mBAAmB;AACtB,UAAM,gBAAgB,mBAAmB,EAAE,OAAO,mCAAmC,GAAG,GAAG;AAC3F,WAAO,0BAA0B,eAAe,MAAM;AAAA,EACxD;AAGA,QAAM,WAAW,MAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,EAAE;AACvE,MAAI,WAAW,CAAC;AAChB,MAAI,UAAU;AACZ,QAAI;AACF,iBAAW,KAAK,MAAM,QAAQ;AAAA,IAChC,SAAS,OAAO;AACd,cAAQ,KAAK,uCAAuC,KAAK;AAAA,IAC3D;AAAA,EACF;AAEA,QAAM,WAAW,KAAK,MAAM,iBAAiB;AAC7C,QAAM,kBAAkB,mBAAmB;AAAA,IACzC,eAAe,SAAS;AAAA,IACxB,uBAAuB,SAAS;AAAA,IAChC,cAAc,SAAS;AAAA,IACvB;AAAA,IACA,UAAU,SAAS;AAAA,IACnB,aAAa,SAAS;AAAA,IACtB,UAAU,SAAS;AAAA,IACnB,eAAe,SAAS;AAAA,IACxB,aAAa,SAAS;AAAA,EACxB,CAAC;AACD,SAAO,0BAA0B,iBAAiB,MAAM;AAC1D;AAlDe;AAqDf,eAAe,gBAAgB,SAAS,KAAK;AAC3C,MAAI;AACF,YAAQ,IAAI,gCAAgC;AAC5C,YAAQ,IAAI,mBAAmB,QAAQ,MAAM;AAC7C,YAAQ,IAAI,gBAAgB,QAAQ,GAAG;AACvC,YAAQ,IAAI,oBAAoB,OAAO,YAAY,QAAQ,QAAQ,QAAQ,CAAC,CAAC;AAE7E,UAAM,EAAE,QAAQ,QAAQ,IAAI,MAAM,QAAQ,KAAK;AAC/C,YAAQ,IAAI,wBAAwB,EAAE,QAAQ,CAAC,CAAC,QAAQ,SAAS,CAAC,CAAC,QAAQ,CAAC;AAE5E,QAAI,CAAC,UAAU,CAAC,SAAS;AACvB,cAAQ,MAAM,6BAA6B;AAC3C,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,4BAA4B,CAAC,GAAG;AAAA,QAC1E,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,+BAA+B;AAAA,UAC/B,gCAAgC;AAAA,UAChC,gCAAgC;AAAA,QAClC;AAAA,MACF,CAAC;AAAA,IACH;AAGA,YAAQ,IAAI,kDAAkD;AAC9D,QAAI;AAEJ,QAAI;AACF,YAAM,aAAa,QAAQ,MAAM,GAAG;AACpC,UAAI,WAAW,WAAW,GAAG;AAC3B,cAAM,IAAI,MAAM,yBAAyB;AAAA,MAC3C;AAEA,YAAM,UAAU,KAAK,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC;AAC9C,cAAQ,IAAI,qBAAqB,OAAO;AAGxC,YAAMC,kBAAiB,MAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,EAAE;AAC7E,UAAIC,aAAY,QAAQ,SAAS;AACjC,UAAIC,iBAAgB,QAAQ,cAAc,QAAQ,QAAQ;AAE1D,UAAIF,iBAAgB;AAClB,YAAI;AACF,gBAAM,SAAS,KAAK,MAAMA,eAAc;AACxC,UAAAC,aAAY,OAAO,SAAS,QAAQ,SAAS;AAC7C,UAAAC,iBAAgB,OAAO,MAAM,aAAa,QAAQ,cAAc,QAAQ,QAAQ;AAAA,QAClF,SAAS,GAAG;AACV,kBAAQ,KAAK,qCAAqC,CAAC;AAAA,QACrD;AAAA,MACF;AAEA,iBAAW;AAAA,QACT,IAAI,QAAQ,OAAO,QAAQ;AAAA,QAC3B,OAAOD;AAAA,QACP,WAAWC;AAAA,MACb;AAEA,cAAQ,IAAI,oCAAoC,KAAK,UAAU,UAAU,MAAM,CAAC,CAAC;AAGjF,UAAI,CAAC,SAAS,IAAI;AAChB,gBAAQ,MAAM,yCAAyC,QAAQ;AAC/D,eAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,8BAA8B,CAAC,GAAG;AAAA,UAC5E,QAAQ;AAAA,UACR,SAAS;AAAA,YACP,gBAAgB;AAAA,YAChB,+BAA+B;AAAA,YAC/B,gCAAgC;AAAA,YAChC,gCAAgC;AAAA,UAClC;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IAEF,SAAS,OAAO;AACd,cAAQ,MAAM,iCAAiC,KAAK;AACpD,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,mBAAmB,CAAC,GAAG;AAAA,QACjE,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,+BAA+B;AAAA,UAC/B,gCAAgC;AAAA,UAChC,gCAAgC;AAAA,QAClC;AAAA,MACF,CAAC;AAAA,IACH;AAGA,YAAQ,IAAI,2BAA2B;AACvC,UAAM,eAAe,MAAM,mBAAmB,UAAU,KAAK,MAAM;AACnE,YAAQ,IAAI,oCAAoC;AAGhD,QAAI,cAAc;AAClB,UAAM,wBAAwB,MAAM,IAAI,mBAAmB,IAAI,0BAA0B,MAAM,EAAE;AACjG,QAAI,uBAAuB;AACzB,YAAM,aAAa,KAAK,MAAM,qBAAqB;AACnD,oBAAc,WAAW;AACzB,cAAQ,IAAI,uDAAuD,CAAC,CAAC,WAAW;AAAA,IAClF;AAGA,UAAM,IAAI,mBAAmB,IAAI,aAAa,SAAS,EAAE,IAAI,KAAK,UAAU;AAAA,MAC1E;AAAA;AAAA,MACA,UAAU;AAAA,QACR,IAAI,SAAS;AAAA,QACb,OAAO,SAAS;AAAA,QAChB,WAAW,SAAS;AAAA,MACtB;AAAA,MACA;AAAA,MACA,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ,CAAC,GAAG,EAAE,eAAe,MAAM,CAAC;AAG5B,UAAM,WAAW,MAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,EAAE;AACvE,QAAI,CAAC,UAAU;AACb,cAAQ,IAAI,4DAA4D;AACxE,YAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,IAAI,KAAK,UAAU;AAAA,QACrE,aAAa;AAAA;AAAA,QACb,UAAU;AAAA;AAAA,QACV;AAAA,QACA,MAAM;AAAA,QACN,cAAa,oBAAI,KAAK,GAAE,YAAY;AAAA,QACpC,eAAe;AAAA,QACf,WAAU,oBAAI,KAAK,GAAE,YAAY;AAAA,MACnC,CAAC,CAAC;AACF,cAAQ,IAAI,oCAAoC;AAAA,IAClD,OAAO;AACL,cAAQ,IAAI,sDAAsD;AAAA,IACpE;AAGA,UAAM,oBAAoB,MAAM,IAAI,mBAAmB,IAAI,0BAA0B,MAAM,EAAE;AAC7F,QAAI,CAAC,mBAAmB;AACtB,cAAQ,IAAI,+DAA+D;AAC3E,YAAM,IAAI,mBAAmB,IAAI,0BAA0B,MAAM,IAAI,KAAK,UAAU;AAAA,QAClF;AAAA,QACA,eAAe,CAAC;AAAA,QAChB,uBAAuB,CAAC;AAAA,QACxB,cAAc;AAAA,QACd,cAAa,oBAAI,KAAK,GAAE,YAAY;AAAA,QACpC,WAAU,oBAAI,KAAK,GAAE,YAAY;AAAA,MACnC,CAAC,CAAC;AACF,cAAQ,IAAI,wCAAwC;AAAA,IACtD,OAAO;AACL,cAAQ,IAAI,yDAAyD;AAAA,IACvE;AAEA,YAAQ,IAAI,4BAA4B;AACxC,YAAQ,IAAI,8BAA8B;AAG1C,UAAM,iBAAiB,MAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,EAAE;AAC7E,QAAI,YAAY,SAAS,SAAS;AAClC,QAAI,gBAAgB,SAAS,aAAa;AAE1C,QAAI,gBAAgB;AAClB,UAAI;AACF,cAAM,SAAS,KAAK,MAAM,cAAc;AACxC,oBAAY,OAAO,SAAS,SAAS,SAAS;AAC9C,wBAAgB,OAAO,MAAM,aAAa,SAAS,aAAa;AAAA,MAClE,SAAS,GAAG;AACV,gBAAQ,KAAK,qCAAqC,CAAC;AAAA,MACrD;AAAA,IACF;AAEA,WAAO,IAAI,SAAS,KAAK,UAAU;AAAA,MACjC,cAAc,aAAa;AAAA,MAC3B,OAAO;AAAA,MACP,WAAW;AAAA,MACX,KAAK,aAAa;AAAA,MAClB,YAAY;AAAA,IACd,CAAC,GAAG;AAAA,MACF,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,+BAA+B;AAAA,QAC/B,gCAAgC;AAAA,QAChC,gCAAgC;AAAA,MAClC;AAAA,IACF,CAAC;AAAA,EAEH,SAAS,OAAO;AACd,YAAQ,MAAM,qBAAqB,KAAK;AACxC,WAAO,IAAI,SAAS,KAAK,UAAU;AAAA,MACjC,OAAO;AAAA,MACP,SAAS,MAAM;AAAA,IACjB,CAAC,GAAG;AAAA,MACF,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,+BAA+B;AAAA,QAC/B,gCAAgC;AAAA,QAChC,gCAAgC;AAAA,MAClC;AAAA,IACF,CAAC;AAAA,EACH;AACF;AApMe;AAuMf,eAAe,qBAAqB,SAAS,KAAK;AAChD,QAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ;AAE3C,QAAM,aAAa,MAAM,WAAW,SAAS,GAAG;AAChD,MAAI,CAAC,YAAY;AACf,UAAM,gBAAgB,mBAAmB,EAAE,OAAO,eAAe,GAAG,GAAG;AACvE,WAAO,0BAA0B,eAAe,MAAM;AAAA,EACxD;AAEA,QAAM,EAAE,OAAO,IAAI;AACnB,QAAM,cAAc,MAAM,QAAQ,KAAK;AAGvC,QAAM,oBAAoB,CAAC;AAC3B,aAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,WAAW,GAAG;AACtD,QAAI,OAAO,UAAU,UAAU;AAC7B,wBAAkB,GAAG,IAAI,cAAc,KAAK;AAAA,IAC9C,WAAW,OAAO,UAAU,YAAY,UAAU,MAAM;AAEtD,wBAAkB,GAAG,IAAI,CAAC;AAC1B,iBAAW,CAAC,QAAQ,QAAQ,KAAK,OAAO,QAAQ,KAAK,GAAG;AACtD,YAAI,OAAO,aAAa,UAAU;AAChC,4BAAkB,GAAG,EAAE,MAAM,IAAI,cAAc,QAAQ;AAAA,QACzD,OAAO;AACL,4BAAkB,GAAG,EAAE,MAAM,IAAI;AAAA,QACnC;AAAA,MACF;AAAA,IACF,OAAO;AACL,wBAAkB,GAAG,IAAI;AAAA,IAC3B;AAAA,EACF;AAGA,QAAM,oBAAoB,MAAM,IAAI,mBAAmB,IAAI,0BAA0B,MAAM,EAAE;AAC7F,MAAI,CAAC,mBAAmB;AACtB,UAAM,gBAAgB,mBAAmB,EAAE,OAAO,mCAAmC,GAAG,GAAG;AAC3F,WAAO,0BAA0B,eAAe,MAAM;AAAA,EACxD;AAEA,QAAM,WAAW,KAAK,MAAM,iBAAiB;AAC7C,WAAS,wBAAwB,EAAE,GAAG,SAAS,uBAAuB,GAAG,kBAAkB;AAC3F,WAAS,eAAc,oBAAI,KAAK,GAAE,YAAY;AAC9C,WAAS,YAAW,oBAAI,KAAK,GAAE,YAAY;AAE3C,QAAM,IAAI,mBAAmB,IAAI,0BAA0B,MAAM,IAAI,KAAK,UAAU,QAAQ,CAAC;AAE7F,QAAM,kBAAkB,mBAAmB;AAAA,IACzC,SAAS;AAAA,IACT,UAAU,SAAS;AAAA,IACnB,aAAa,SAAS;AAAA,EACxB,CAAC;AACD,SAAO,0BAA0B,iBAAiB,MAAM;AAC1D;AApDe;AAuDf,eAAe,iBAAiB,SAAS,KAAK;AAC5C,QAAM,aAAa,MAAM,WAAW,SAAS,GAAG;AAEhD,SAAO,IAAI,SAAS,KAAK,UAAU;AAAA,IACjC,eAAe,CAAC,CAAC;AAAA,IACjB,MAAM,YAAY,YAAY;AAAA,EAChC,CAAC,GAAG;AAAA,IACF,SAAS;AAAA,MACP,gBAAgB;AAAA,MAChB,+BAA+B;AAAA,MAC/B,gCAAgC;AAAA,MAChC,gCAAgC;AAAA,IAClC;AAAA,EACF,CAAC;AACH;AAde;AAkBf,eAAe,qBAAqB,SAAS,KAAK;AAChD,MAAI;AACF,YAAQ,IAAI,qCAAqC;AAGjD,UAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,UAAM,gBAAgB,IAAI,aAAa,IAAI,QAAQ;AACnD,YAAQ,IAAI,oBAAoB,aAAa;AAE7C,UAAM,aAAa,MAAM,WAAW,SAAS,GAAG;AAChD,QAAI,CAAC,YAAY;AACf,cAAQ,IAAI,0CAA0C;AACtD,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,wBAAwB,CAAC,GAAG;AAAA,QACtE,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,+BAA+B;AAAA,QACjC;AAAA,MACF,CAAC;AAAA,IACH;AACA,YAAQ,IAAI,gDAAgD,WAAW,MAAM;AAG7E,QAAI,cAAc;AAClB,UAAM,WAAW,MAAM,IAAI,mBAAmB,IAAI,aAAa,aAAa,EAAE;AAC9E,QAAI,UAAU;AACZ,YAAM,iBAAiB,KAAK,MAAM,QAAQ;AAC1C,oBAAc,eAAe;AAC7B,cAAQ,IAAI,sCAAsC,CAAC,CAAC,WAAW;AAAA,IACjE,OAAO;AACL,cAAQ,IAAI,kCAAkC,aAAa;AAAA,IAC7D;AAEA,YAAQ,IAAI,wBAAwB,CAAC,CAAC,WAAW;AAGjD,QAAI,CAAC,aAAa;AAChB,cAAQ,IAAI,0DAA0D;AACtE,aAAO,IAAI,SAAS,KAAK,UAAU;AAAA,QACjC,SAAS;AAAA,QACT,SAAS;AAAA,QACT,iBAAiB;AAAA,MACnB,CAAC,GAAG;AAAA,QACF,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,+BAA+B;AAAA,QACjC;AAAA,MACF,CAAC;AAAA,IACH;AAEA,UAAM,YAAY;AAClB,YAAQ,IAAI,WAAW;AAEvB,UAAM,0BAA0B,MAAM,MAAM,oCAAoC,aAAa,uBAAuB;AAAA,MAClH,SAAS;AAAA,QACP,iBAAiB,UAAU,WAAW;AAAA,QACtC,kBAAkB;AAAA,MACpB;AAAA,IACF,CAAC;AACD,QAAI,wBAAwB,IAAI;AAC9B,YAAM,kBAAkB,MAAM,wBAAwB,KAAK;AAE3D,YAAM,iBAAiB,gBAAgB,mBAAmB;AAAA,QAAK,YAC7D,OAAO,mBAAmB;AAAA;AAAA,MAC5B;AACA,UAAI,gBAAgB;AAClB,gBAAQ,IAAI,8BAA8B,eAAe,EAAE;AAC3D,eAAO,IAAI,SAAS,KAAK,UAAU;AAAA,UACjC,SAAS;AAAA,UACT,SAAS;AAAA,UACT,QAAQ;AAAA,UACR,iBAAiB;AAAA;AAAA,QACnB,CAAC,GAAG;AAAA,UACF,SAAS;AAAA,YACP,gBAAgB;AAAA,YAChB,+BAA+B;AAAA,UACjC;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAGA,UAAM,iBAAiB,MAAM,MAAM,SAAS;AAC5C,UAAM,gBAAgB,MAAM,eAAe,KAAK;AAChD,UAAM,eAAe,IAAI,YAAY,EAAE,OAAO,aAAa;AAC3D,UAAM,aAAa,MAAM,OAAO,OAAO,OAAO,WAAW,YAAY;AACrE,UAAM,YAAY,MAAM,KAAK,IAAI,WAAW,UAAU,CAAC;AACvD,UAAM,aAAa,KAAK,OAAO,aAAa,MAAM,MAAM,SAAS,CAAC;AAClE,UAAM,gBAAgB,UAAU,UAAU;AAE1C,YAAQ,IAAI,uBAAuB,aAAa;AAGhD,UAAM,mBAAmB,MAAM,MAAM,oCAAoC,aAAa,8BAA8B;AAAA,MAClH,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,iBAAiB,UAAU,WAAW;AAAA,QACtC,gBAAgB;AAAA,QAChB,kBAAkB;AAAA,MACpB;AAAA,MACA,MAAM,KAAK,UAAU;AAAA,QACnB,aAAa,cAAc,KAAK,IAAI,CAAC;AAAA,QACrC;AAAA,QACA,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB;AAAA,QACA,SAAS;AAAA,QACT,YAAY;AAAA,MACd,CAAC;AAAA,IACH,CAAC;AAED,YAAQ,IAAI,gCAAgC,iBAAiB,MAAM;AAEnE,QAAI,CAAC,iBAAiB,IAAI;AACxB,YAAM,YAAY,MAAM,iBAAiB,KAAK;AAC9C,cAAQ,MAAM,+BAA+B,iBAAiB,QAAQ,SAAS;AAC/E,YAAM,IAAI,MAAM,+BAA+B,iBAAiB,MAAM,MAAM,SAAS,EAAE;AAAA,IACzF;AAEA,UAAM,eAAe,MAAM,iBAAiB,KAAK;AACjD,YAAQ,IAAI,mCAAmC,KAAK,UAAU,cAAc,MAAM,CAAC,CAAC;AACpF,YAAQ,IAAI,mCAAmC;AAE/C,WAAO,IAAI,SAAS,KAAK,UAAU;AAAA,MACjC,SAAS;AAAA,MACT,QAAQ;AAAA,IACV,CAAC,GAAG;AAAA,MACF,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,+BAA+B;AAAA,MACjC;AAAA,IACF,CAAC;AAAA,EAEH,SAAS,OAAO;AACd,YAAQ,MAAM,0BAA0B,KAAK;AAC7C,YAAQ,MAAM,kBAAkB,MAAM,SAAS,MAAM,KAAK;AAC1D,WAAO,IAAI,SAAS,KAAK,UAAU;AAAA,MACjC,OAAO;AAAA,MACP,SAAS,MAAM;AAAA,IACjB,CAAC,GAAG;AAAA,MACF,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,+BAA+B;AAAA,MACjC;AAAA,IACF,CAAC;AAAA,EACH;AACF;AAnJe;AAsJf,eAAe,kBAAkB,SAAS,KAAK;AAC7C,MAAI;AACF,UAAM,aAAa,MAAM,WAAW,SAAS,GAAG;AAChD,QAAI,CAAC,YAAY;AACf,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,wBAAwB,CAAC,GAAG;AAAA,QACtE,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,+BAA+B;AAAA,QACjC;AAAA,MACF,CAAC;AAAA,IACH;AAGA,UAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,UAAM,YAAY,IAAI,aAAa,IAAI,QAAQ;AAC/C,UAAM,SAAS,aAAa,WAAW;AAEvC,QAAI,CAAC,QAAQ;AACX,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,qBAAqB,CAAC,GAAG;AAAA,QACnE,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,+BAA+B;AAAA,QACjC;AAAA,MACF,CAAC;AAAA,IACH;AAEA,UAAM,cAAc,MAAM,QAAQ,KAAK;AACvC,UAAM,EAAE,YAAY,UAAU,UAAU,QAAQ,IAAI;AACpD,YAAQ,IAAI,wBAAwB,WAAW;AAG/C,QAAI,cAAc;AAClB,UAAM,WAAW,MAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,EAAE;AACvE,QAAI,UAAU;AACZ,YAAM,iBAAiB,KAAK,MAAM,QAAQ;AAC1C,oBAAc,eAAe;AAAA,IAC/B;AAEA,QAAI,CAAC,aAAa;AAChB,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,4BAA4B,CAAC,GAAG;AAAA,QAC1E,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,+BAA+B;AAAA,QACjC;AAAA,MACF,CAAC;AAAA,IACH;AAGA,UAAM,mBAAmB,MAAM,MAAM,oCAAoC,MAAM,gBAAgB;AAAA,MAC7F,SAAS;AAAA,QACP,iBAAiB,UAAU,WAAW;AAAA,QACtC,kBAAkB;AAAA,MACpB;AAAA,IACF,CAAC;AACD,YAAQ,IAAI,6BAA6B,iBAAiB,MAAM;AAEhE,UAAM,6BAA6B,MAAM,MAAM,oCAAoC,MAAM,uBAAuB;AAAA,MAC9G,SAAS;AAAA,QACP,iBAAiB,UAAU,WAAW;AAAA,MAExC;AAAA,IACF,CAAC;AACD,YAAQ,IAAI,2BAA2B,mBAAkB,2BAA2B;AACpF,QAAI,kBAAkB,CAAC;AACvB,QAAI,iBAAiB,IAAI;AACvB,YAAM,eAAe,MAAM,iBAAiB,KAAK;AACjD,wBAAkB,aAAa,WAAW,CAAC;AAAA,IAC7C;AAIA,UAAM,YAAY;AAElB,UAAM,8BAA8B,gBAAgB;AAAA,MAAK,YACvD,OAAO,cAAc;AAAA,IAEvB;AACA,YAAQ,IAAI,2BAA2B;AAEvC,QAAI,6BAA6B;AAC/B,cAAQ,IAAI,wDAAwD;AACpE,aAAO,IAAI,SAAS,KAAK,UAAU;AAAA,QACjC,SAAS;AAAA,QACT,SAAS;AAAA,QACT,QAAQ;AAAA,MACV,CAAC,GAAG;AAAA,QACF,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,+BAA+B;AAAA,QACjC;AAAA,MACF,CAAC;AAAA,IACH;AAEA,UAAM,wBAAwB,wBAACH,SAAQ;AACrC,aACEA,SACCA,SAAQ;AAAA,MACRA,KAAI,SAAS,0BAA0B;AAAA,MACvCA,KAAI,SAAS,sBAAsB;AAAA,IAExC,GAP8B;AAS9B,UAAM,kBAAkB,gBAAgB;AAAA,MAAO,YAC7C,CAAC,sBAAsB,OAAO,SAAS;AAAA,IACzC;AAGA,UAAM,YAAY;AAAA,MAChB,IAAI;AAAA,MACJ;AAAA,MACA,UAAU;AAAA,IAEZ;AAEA,oBAAgB,KAAK,SAAS;AAE9B,YAAQ,IAAI,uCAAuC,KAAK,UAAU,iBAAiB,MAAM,CAAC,CAAC;AAG3F,UAAM,iBAAiB,MAAM,MAAM,oCAAoC,MAAM,gBAAgB;AAAA,MAC3F,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,iBAAiB,UAAU,WAAW;AAAA,QACtC,gBAAgB;AAAA,QAChB,kBAAkB;AAAA,MACpB;AAAA,MACA,MAAM,KAAK,UAAU;AAAA,QACnB,SAAS;AAAA,MACX,CAAC;AAAA,IACH,CAAC;AACD,YAAQ,IAAI,2BAA2B,eAAe,MAAM;AAC5D,QAAI,CAAC,eAAe,IAAI;AACtB,YAAM,YAAY,MAAM,eAAe,KAAK;AAC5C,cAAQ,MAAM,8BAA8B,eAAe,QAAQ,SAAS;AAC5E,YAAM,IAAI,MAAM,8BAA8B,eAAe,MAAM,MAAM,SAAS,EAAE;AAAA,IACtF;AAEA,UAAM,SAAS,MAAM,eAAe,KAAK;AAEzC,WAAO,IAAI,SAAS,KAAK,UAAU;AAAA,MACjC,SAAS;AAAA,MACT,QAAQ;AAAA,QACN,GAAG;AAAA,QACH,WAAW,UAAU;AAAA,MACvB;AAAA,IACF,CAAC,GAAG;AAAA,MACF,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,+BAA+B;AAAA,MACjC;AAAA,IACF,CAAC;AAAA,EAEH,SAAS,OAAO;AACd,YAAQ,MAAM,uBAAuB,KAAK;AAC1C,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,yBAAyB,CAAC,GAAG;AAAA,MACvE,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,+BAA+B;AAAA,MACjC;AAAA,IACF,CAAC;AAAA,EACH;AACF;AArKe;AAwKf,eAAe,WAAW,SAAS,KAAK;AACtC,QAAM,aAAa,QAAQ,QAAQ,IAAI,eAAe;AACtD,MAAI,CAAC,WAAY,QAAO;AAExB,QAAM,QAAQ,WAAW,MAAM,GAAG,EAAE,CAAC;AACrC,MAAI,CAAC,MAAO,QAAO;AAEnB,MAAI;AAEF,UAAM,UAAU,MAAM,UAAU,OAAO,IAAI,qBAAqB;AAChE,UAAM,SAAS,QAAQ,KAAK;AAG5B,UAAM,WAAW,MAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,EAAE;AACvE,QAAI,CAAC,SAAU,QAAO;AAEtB,UAAM,EAAE,aAAa,UAAU,MAAM,OAAO,IAAI,KAAK,MAAM,QAAQ;AAGnE,QAAI;AACJ,QAAI;AACF,YAAM,WAAW,MAAM,IAAI,mBAAmB,IAAI,0BAA0B,MAAM,EAAE;AACpF,UAAI,UAAU;AACZ,cAAM,iBAAiB,KAAK,MAAM,QAAQ;AAC1C,mBAAW,eAAe;AAAA,MAC5B;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,KAAK,4BAA4B,KAAK;AAAA,IAChD;AAEA,WAAO;AAAA,MACL;AAAA,MACA,UAAU;AAAA,MACV;AAAA,MACA;AAAA,IACF;AAAA,EACF,SAAS,OAAO;AACd,YAAQ,MAAM,4BAA4B,KAAK;AAC/C,WAAO;AAAA,EACT;AACF;AAxCe;AA2Cf,eAAe,mBAAmB,MAAM,KAAI,SAAO,MAAM;AACvD,QAAM,SAAS;AAAA,IACb,KAAK;AAAA,IACL,KAAK;AAAA,EACP;AAEA,QAAM,UAAU;AAAA,IACd;AAAA,IACA;AAAA,IACA,KAAK,KAAK,MAAM,KAAK,IAAI,IAAI,GAAI,IAAK,KAAK,KAAK;AAAA;AAAA,EAElD;AAEA,QAAM,gBAAgB,gBAAgB,KAAK,UAAU,MAAM,CAAC;AAC5D,QAAM,iBAAiB,gBAAgB,KAAK,UAAU,OAAO,CAAC;AAE9D,QAAM,YAAY,MAAM;AAAA,IACtB,GAAG,aAAa,IAAI,cAAc;AAAA,IAClC,IAAI;AAAA,EACN;AAEA,SAAO;AAAA,IACL,OAAO,GAAG,aAAa,IAAI,cAAc,IAAI,SAAS;AAAA,IACtD,KAAK,QAAQ;AAAA,EACf;AACF;AAzBe;AA4Bf,eAAe,UAAU,OAAO,QAAQ;AACtC,QAAM,QAAQ,MAAM,MAAM,GAAG;AAC7B,MAAI,MAAM,WAAW,EAAG,OAAM,IAAI,MAAM,oBAAoB;AAE5D,QAAM,CAAC,QAAQ,SAAS,SAAS,IAAI;AAGrC,QAAM,oBAAoB,MAAM,QAAQ,GAAG,MAAM,IAAI,OAAO,IAAI,MAAM;AACtE,MAAI,cAAc,mBAAmB;AACnC,UAAM,IAAI,MAAM,mBAAmB;AAAA,EACrC;AAGA,QAAM,iBAAiB,KAAK,MAAM,gBAAgB,OAAO,CAAC;AAC1D,MAAI,eAAe,MAAM,KAAK,MAAM,KAAK,IAAI,IAAI,GAAI,GAAG;AACtD,UAAM,IAAI,MAAM,eAAe;AAAA,EACjC;AAEA,SAAO;AACT;AAnBe;AAsBf,eAAe,QAAQ,MAAM,QAAQ;AACnC,QAAM,MAAM,MAAM,OAAO,OAAO;AAAA,IAC9B;AAAA,IACA,IAAI,YAAY,EAAE,OAAO,MAAM;AAAA,IAC/B,EAAE,MAAM,QAAQ,MAAM,UAAU;AAAA,IAChC;AAAA,IACA,CAAC,MAAM;AAAA,EACT;AAEA,QAAM,YAAY,MAAM,OAAO,OAAO,KAAK,QAAQ,KAAK,IAAI,YAAY,EAAE,OAAO,IAAI,CAAC;AACtF,SAAO,gBAAgB,IAAI,WAAW,SAAS,CAAC;AAClD;AAXe;AAcf,SAAS,gBAAgB,KAAK;AAC5B,SAAO,KAAK,GAAG,EACZ,QAAQ,OAAO,GAAG,EAClB,QAAQ,OAAO,GAAG,EAClB,QAAQ,MAAM,EAAE;AACrB;AALS;AAOT,SAAS,gBAAgB,KAAK;AAC5B,SAAO,IAAI,QAAQ,IAAI,IAAI,SAAS,KAAK,CAAC;AAC1C,QAAM,IAAI,QAAQ,MAAM,GAAG,EAAE,QAAQ,MAAM,GAAG;AAC9C,SAAO,KAAK,GAAG;AACjB;AAJS;AAOT,eAAe,gBAAgB,SAAS,KAAK;AAC3C,QAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ;AAE3C,MAAI;AACF,UAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,UAAM,SAAS,IAAI,aAAa,IAAI,QAAQ;AAE5C,QAAI,CAAC,QAAQ;AACX,YAAM,gBAAgB,mBAAmB;AAAA,QACvC,OAAO;AAAA,MACT,GAAG,GAAG;AACN,aAAO,0BAA0B,eAAe,MAAM;AAAA,IACxD;AAGA,UAAM,mBAAmB,0BAA0B,MAAM;AACzD,UAAM,oBAAoB,MAAM,IAAI,mBAAmB,IAAI,gBAAgB;AAE3E,QAAI,CAAC,mBAAmB;AACtB,YAAM,gBAAgB,mBAAmB;AAAA,QACvC,OAAO;AAAA,MACT,GAAG,GAAG;AACN,aAAO,0BAA0B,eAAe,MAAM;AAAA,IACxD;AAGA,UAAM,WAAW,MAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,EAAE;AACvE,QAAI,WAAW,CAAC;AAChB,QAAI,UAAU;AACZ,UAAI;AACF,mBAAW,KAAK,MAAM,QAAQ;AAAA,MAChC,SAAS,OAAO;AACd,gBAAQ,KAAK,uCAAuC,KAAK;AAAA,MAC3D;AAAA,IACF;AAEA,UAAM,WAAW,KAAK,MAAM,iBAAiB;AAG7C,UAAM,SAAS;AAAA,MACb,eAAe,SAAS;AAAA,MACxB,uBAAuB,SAAS;AAAA,MAChC;AAAA,MACA,aAAa,SAAS;AAAA,MACtB,eAAe,SAAS,iBAAiB;AAAA,IAC3C;AAEA,UAAM,kBAAkB,mBAAmB,MAAM;AACjD,UAAM,sBAAsB,0BAA0B,iBAAiB,MAAM;AAG7E,UAAM,UAAU,IAAI,QAAQ,oBAAoB,OAAO;AACvD,YAAQ,IAAI,iBAAiB,qBAAqB;AAElD,WAAO,IAAI,SAAS,oBAAoB,MAAM;AAAA,MAC5C,QAAQ,oBAAoB;AAAA,MAC5B,YAAY,oBAAoB;AAAA,MAChC;AAAA,IACF,CAAC;AAAA,EAEH,SAAS,OAAO;AACd,YAAQ,MAAM,qBAAqB,KAAK;AACxC,UAAM,gBAAgB,mBAAmB;AAAA,MACvC,OAAO;AAAA,MACP,SAAS,MAAM;AAAA,IACjB,GAAG,GAAG;AACN,WAAO,0BAA0B,eAAe,MAAM;AAAA,EACxD;AACF;AApEe;AAuEf,eAAe,mBAAmB,SAAS,KAAK;AAC9C,QAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ;AAE3C,MAAI;AACF,UAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,UAAM,SAAS,IAAI,aAAa,IAAI,QAAQ;AAE5C,YAAQ,IAAI,8BAA8B,MAAM;AAEhD,QAAI,CAAC,QAAQ;AACX,YAAMI,iBAAgB,mBAAmB,EAAE,OAAO,2BAA2B,GAAG,GAAG;AACnF,aAAO,0BAA0BA,gBAAe,MAAM;AAAA,IACxD;AAGA,UAAM,kBAAkB,cAAc,MAAM;AAG5C,UAAM,YAAY,UAAU,eAAe;AAC3C,UAAM,aAAa,MAAM,IAAI,mBAAmB,IAAI,SAAS;AAE7D,QAAI,YAAY;AACd,YAAM,OAAO,KAAK,MAAM,UAAU;AAClC,cAAQ,IAAI,yBAAyB,IAAI;AACzC,YAAM,kBAAkB,mBAAmB;AAAA,QACzC,QAAQ,KAAK;AAAA,QACb,QAAQ,KAAK;AAAA,QACb,WAAW,KAAK;AAAA,MAClB,CAAC;AACD,aAAO,0BAA0B,iBAAiB,MAAM;AAAA,IAC1D;AAEA,YAAQ,IAAI,gCAAgC,eAAe;AAC3D,UAAM,gBAAgB,mBAAmB,EAAE,OAAO,mBAAmB,GAAG,GAAG;AAC3E,WAAO,0BAA0B,eAAe,MAAM;AAAA,EAExD,SAAS,OAAO;AACd,YAAQ,MAAM,wBAAwB,KAAK;AAC3C,UAAM,gBAAgB,mBAAmB,EAAE,OAAO,gBAAgB,GAAG,GAAG;AACxE,WAAO,0BAA0B,eAAe,MAAM;AAAA,EACxD;AACF;AAzCe;AA4Cf,eAAe,mBAAmB,SAAS,KAAK;AAC9C,QAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ;AAE3C,MAAI;AACF,UAAM,OAAO,MAAM,QAAQ,KAAK;AAChC,UAAM,EAAE,QAAQ,SAAS,IAAI;AAE7B,QAAI,CAAC,UAAU,CAAC,UAAU;AACxB,YAAM,gBAAgB,mBAAmB,EAAE,OAAO,6BAA6B,GAAG,GAAG;AACrF,aAAO,0BAA0B,eAAe,MAAM;AAAA,IACxD;AAGA,UAAM,oBAAoB,CAAC;AAC3B,eAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,QAAQ,GAAG;AACnD,UAAI,OAAO,UAAU,UAAU;AAC7B,0BAAkB,GAAG,IAAI,cAAc,KAAK;AAAA,MAC9C,WAAW,OAAO,UAAU,YAAY,UAAU,MAAM;AAEtD,0BAAkB,GAAG,IAAI,CAAC;AAC1B,mBAAW,CAAC,QAAQ,QAAQ,KAAK,OAAO,QAAQ,KAAK,GAAG;AACtD,cAAI,OAAO,aAAa,UAAU;AAChC,8BAAkB,GAAG,EAAE,MAAM,IAAI,cAAc,QAAQ;AAAA,UACzD,OAAO;AACL,8BAAkB,GAAG,EAAE,MAAM,IAAI;AAAA,UACnC;AAAA,QACF;AAAA,MACF,OAAO;AACL,0BAAkB,GAAG,IAAI;AAAA,MAC3B;AAAA,IACF;AAGA,UAAM,eAAe,MAAM,IAAI,mBAAmB,IAAI,0BAA0B,MAAM,EAAE;AACxF,QAAI,mBAAmB,CAAC;AAExB,QAAI,cAAc;AAChB,UAAI;AACF,2BAAmB,KAAK,MAAM,YAAY;AAAA,MAC5C,SAAS,OAAO;AACd,gBAAQ,KAAK,oDAAoD,KAAK;AAAA,MACxE;AAAA,IACF;AAGA,UAAM,kBAAkB;AAAA,MACtB,GAAG;AAAA,MACH,GAAG;AAAA,MACH;AAAA,MACA,cAAa,oBAAI,KAAK,GAAE,YAAY;AAAA,MACpC,WAAU,oBAAI,KAAK,GAAE,YAAY;AAAA,IACnC;AAGA,UAAM,IAAI,mBAAmB,IAAI,0BAA0B,MAAM,IAAI,KAAK,UAAU,eAAe,CAAC;AAEpG,UAAM,kBAAkB,mBAAmB;AAAA,MACzC,SAAS;AAAA,MACT,SAAS;AAAA,MACT,UAAU;AAAA,IACZ,CAAC;AACD,WAAO,0BAA0B,iBAAiB,MAAM;AAAA,EAE1D,SAAS,OAAO;AACd,YAAQ,MAAM,wBAAwB,KAAK;AAC3C,UAAM,gBAAgB,mBAAmB;AAAA,MACvC,OAAO;AAAA,MACP,SAAS,MAAM;AAAA,IACjB,GAAG,GAAG;AACN,WAAO,0BAA0B,eAAe,MAAM;AAAA,EACxD;AACF;AAvEe;AA0Ef,eAAe,uBAAuB,SAAS,KAAK;AAClD,MAAI;AACF,UAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,UAAM,SAAS,IAAI,aAAa,IAAI,QAAQ;AAE5C,QAAI,CAAC,QAAQ;AACX,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,2BAA2B,CAAC,GAAG;AAAA,QACzE,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,+BAA+B;AAAA,UAC/B,gCAAgC;AAAA,UAChC,gCAAgC;AAAA,QAClC;AAAA,MACF,CAAC;AAAA,IACH;AAGA,UAAM,WAAW,MAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,EAAE;AAEvE,QAAI,CAAC,UAAU;AACb,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,iBAAiB,CAAC,GAAG;AAAA,QAC/D,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,+BAA+B;AAAA,UAC/B,gCAAgC;AAAA,UAChC,gCAAgC;AAAA,QAClC;AAAA,MACF,CAAC;AAAA,IACH;AAEA,UAAM,aAAa,KAAK,MAAM,QAAQ;AAGtC,WAAO,IAAI,SAAS,KAAK,UAAU;AAAA,MACjC,aAAa,WAAW;AAAA,MACxB,QAAQ,WAAW;AAAA,MACnB,UAAU,WAAW;AAAA,MACrB,MAAM,WAAW;AAAA,MACjB,gBAAgB,CAAC,CAAC,WAAW;AAAA,IAC/B,CAAC,GAAG;AAAA,MACF,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,+BAA+B;AAAA,QAC/B,gCAAgC;AAAA,QAChC,gCAAgC;AAAA,MAClC;AAAA,IACF,CAAC;AAAA,EAEH,SAAS,OAAO;AACd,YAAQ,MAAM,+BAA+B,KAAK;AAClD,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,sBAAsB,CAAC,GAAG;AAAA,MACpE,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,+BAA+B;AAAA,QAC/B,gCAAgC;AAAA,QAChC,gCAAgC;AAAA,MAClC;AAAA,IACF,CAAC;AAAA,EACH;AACF;AA9De;AAoGf,eAAe,kBAAkB,SAAS,KAAK;AAC7C,QAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ;AAE3C,MAAI;AACF,UAAM,EAAE,QAAQ,OAAO,QAAQ,eAAe,gBAAgB,aAAa,IAAI,MAAM,QAAQ,KAAK;AAElG,QAAI,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ;AAChC,YAAM,gBAAgB,mBAAmB,EAAE,OAAO,0BAA0B,GAAG,GAAG;AAClF,aAAO,0BAA0B,eAAe,MAAM;AAAA,IACxD;AAGA,UAAM,iBAAiB,cAAc,KAAK;AAC1C,UAAM,kBAAkB,cAAc,MAAM;AAG5C,UAAM,WAAW;AAAA,MACf;AAAA,MACA,OAAO;AAAA,MACP,QAAQ;AAAA,MACR;AAAA,MACA;AAAA,MACA;AAAA,MACA,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,IACpC;AAGA,UAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,IAAI,KAAK,UAAU,QAAQ,CAAC;AAChF,UAAM,kBAAkB,KAAK,QAAQ;AAAA,MACnC;AAAA,MACA,QAAQ;AAAA,MACR;AAAA,MACA,gBAAgB,aAAa;AAAA,MAC7B,eAAe;AAAA,IACjB,CAAC;AAGD,UAAM,IAAI,mBAAmB,IAAI,UAAU,eAAe,IAAI,KAAK,UAAU;AAAA,MAC3E;AAAA,MACA,UAAU;AAAA,IACZ,CAAC,CAAC;AAGJ,UAAM,kBAAkB,KAAK,QAAQ;AAAA,MACnC;AAAA,MACA,OAAO;AAAA,MACP,QAAQ;AAAA,MACR;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAED,UAAM,kBAAkB,mBAAmB;AAAA,MACzC,SAAS;AAAA,MACT,SAAS;AAAA,IACX,CAAC;AACC,WAAO,0BAA0B,iBAAiB,MAAM;AAAA,EAE1D,SAAS,OAAO;AACd,YAAQ,MAAM,uBAAuB,KAAK;AAC1C,UAAM,gBAAgB,mBAAmB;AAAA,MACvC,OAAO;AAAA,MACP,SAAS,MAAM;AAAA,IACjB,GAAG,GAAG;AACN,WAAO,0BAA0B,eAAe,MAAM;AAAA,EACxD;AACF;AAlEe;AAqEf,eAAe,oBAAoB,SAAS,KAAK;AAC/C,QAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ;AAE3C,MAAI;AACF,UAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,UAAM,SAAS,IAAI,aAAa,IAAI,QAAQ;AAE5C,QAAI,CAAC,QAAQ;AACX,YAAM,gBAAgB,mBAAmB,EAAE,OAAO,kBAAkB,GAAG,GAAG;AAC1E,aAAO,0BAA0B,eAAe,MAAM;AAAA,IACxD;AAGA,UAAM,cAAc,MAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,EAAE;AAC1E,QAAI,CAAC,aAAa;AAChB,YAAM,gBAAgB,mBAAmB,EAAE,OAAO,iBAAiB,GAAG,GAAG;AACzE,aAAO,0BAA0B,eAAe,MAAM;AAAA,IACxD;AAEA,UAAM,WAAW,KAAK,MAAM,WAAW;AAGvC,UAAM,MAAM,oBAAI,KAAK;AACrB,QAAI,SAAS,kBAAkB,WAAW,SAAS,gBAAgB,MAAM,IAAI,KAAK,SAAS,YAAY,GAAG;AACxG,eAAS,gBAAgB;AAAA,IAC3B;AACA,QAAI,SAAS,kBAAkB,YAAY,SAAS,yBAAyB,MAAM,IAAI,KAAK,SAAS,qBAAqB,GAAG;AAC3H,eAAS,gBAAgB;AAAA,IAC3B;AACA,UAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,IAAI,KAAK,UAAU,QAAQ,CAAC;AAGhF,UAAM,kBAAkB,KAAK,QAAQ;AAAA,MACnC;AAAA,MACA,eAAe,SAAS;AAAA,MACxB,cAAc,SAAS;AAAA,MACvB,OAAO,SAAS;AAAA,MAChB,QAAQ,SAAS;AAAA,IACnB,CAAC;AAED,UAAM,kBAAkB,mBAAmB;AAAA,MACzC,eAAe,SAAS;AAAA,MACxB,cAAc,SAAS;AAAA,MACvB,OAAO,SAAS;AAAA,MAChB,QAAQ,SAAS;AAAA,IACnB,CAAC;AACD,WAAO,0BAA0B,iBAAiB,MAAM;AAAA,EAE1D,SAAS,OAAO;AACd,YAAQ,MAAM,yBAAyB,KAAK;AAC5C,UAAM,gBAAgB,mBAAmB;AAAA,MACvC,OAAO;AAAA,MACP,SAAS,MAAM;AAAA,IACjB,GAAG,GAAG;AACN,WAAO,0BAA0B,eAAe,MAAM;AAAA,EACxD;AACF;AAxDe;AA2Df,eAAe,qBAAqB,SAAS,KAAK;AAChD,QAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ;AAE3C,MAAI;AACF,UAAM,EAAE,QAAQ,OAAO,IAAI,MAAM,QAAQ,KAAK;AAE9C,QAAI,CAAC,UAAU,CAAC,QAAQ;AACtB,YAAM,gBAAgB,mBAAmB,EAAE,OAAO,6BAA6B,GAAG,GAAG;AACrF,aAAO,0BAA0B,eAAe,MAAM;AAAA,IACxD;AAGA,UAAM,kBAAkB,cAAc,MAAM;AAG5C,UAAM,gBAAgB,MAAM,IAAI,mBAAmB,IAAI,UAAU,eAAe,EAAE;AAClF,QAAI,CAAC,eAAe;AAClB,YAAMC,mBAAkB,mBAAmB,EAAE,SAAS,MAAM,CAAC;AAC7D,aAAO,0BAA0BA,kBAAiB,MAAM;AAAA,IAC1D;AAEA,UAAM,aAAa,KAAK,MAAM,aAAa;AAC3C,UAAM,UAAU,WAAW,WAAW;AAEtC,UAAM,kBAAkB,mBAAmB,EAAE,QAAQ,CAAC;AACtD,WAAO,0BAA0B,iBAAiB,MAAM;AAAA,EAE1D,SAAS,OAAO;AACd,YAAQ,MAAM,0BAA0B,KAAK;AAC7C,UAAM,gBAAgB,mBAAmB;AAAA,MACvC,SAAS;AAAA,MACT,OAAO,MAAM;AAAA,IACf,GAAG,GAAG;AACN,WAAO,0BAA0B,eAAe,MAAM;AAAA,EACxD;AACF;AAnCe;AAsCf,eAAe,eAAe,SAAS,KAAK;AAC1C,QAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ;AAE3C,MAAI;AACF,UAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,UAAM,SAAS,IAAI,aAAa,IAAI,QAAQ;AAE5C,QAAI,CAAC,QAAQ;AACX,YAAM,gBAAgB,mBAAmB,EAAE,OAAO,kBAAkB,GAAG,GAAG;AAC1E,aAAO,0BAA0B,eAAe,MAAM;AAAA,IACxD;AAEA,UAAM,cAAc,MAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,EAAE;AAC1E,QAAI,CAAC,aAAa;AAChB,YAAM,gBAAgB,mBAAmB,EAAE,OAAO,iBAAiB,GAAG,GAAG;AACzE,aAAO,0BAA0B,eAAe,MAAM;AAAA,IACxD;AAEA,UAAM,WAAW,KAAK,MAAM,WAAW;AAEvC,UAAM,kBAAkB,mBAAmB;AAAA,MACzC,OAAO,SAAS;AAAA,MAChB,QAAQ,SAAS;AAAA,MACjB,eAAe,SAAS;AAAA,MACxB,cAAc,SAAS;AAAA,IACzB,CAAC;AACD,WAAO,0BAA0B,iBAAiB,MAAM;AAAA,EAE1D,SAAS,OAAO;AACd,YAAQ,MAAM,wBAAwB,KAAK;AAC3C,UAAM,gBAAgB,mBAAmB;AAAA,MACvC,OAAO;AAAA,MACP,SAAS,MAAM;AAAA,IACjB,GAAG,GAAG;AACN,WAAO,0BAA0B,eAAe,MAAM;AAAA,EACxD;AACF;AApCe;AAuCf,eAAe,oBAAoB,SAAS,KAAK;AAC/C,MAAI;AACF,UAAM,EAAE,QAAQ,eAAe,gBAAgB,YAAAC,YAAW,IAAI,MAAM,QAAQ,KAAK;AAEjF,YAAQ,IAAI,4BAA4B,EAAE,QAAQ,eAAe,gBAAgB,YAAAA,YAAW,CAAC;AAG7F,QAAI,gBAAgB;AAClB,YAAM,iBAAiB,MAAM,MAAM,2CAA2C,cAAc,IAAI;AAAA,QAC9F,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,eAAe,UAAU,IAAI,iBAAiB;AAAA,UAC9C,gBAAgB;AAAA,QAClB;AAAA,QACA,MAAM,IAAI,gBAAgB;AAAA,UACxB,oBAAoB;AAAA,QACtB,CAAC;AAAA,MACH,CAAC;AAED,UAAI,CAAC,eAAe,IAAI;AACtB,gBAAQ,MAAM,yCAAyC;AAAA,MACzD;AAAA,IACF;AAGA,UAAM,WAAW;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,MACA,YAAAA;AAAA,MACA,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,IACpC;AAEA,UAAM,IAAI,YAAY,IAAI,aAAa,MAAM,IAAI,KAAK,UAAU,QAAQ,CAAC;AAEzE,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,SAAS,KAAK,CAAC,GAAG;AAAA,MACrD,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAChD,CAAC;AAAA,EAEH,SAAS,OAAO;AACd,YAAQ,MAAM,yBAAyB,KAAK;AAC5C,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,MAAM,QAAQ,CAAC,GAAG;AAAA,MAC5D,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAChD,CAAC;AAAA,EACH;AACF;AA9Ce;AAgDf,eAAe,wBAAwB,SAAS,KAAK;AACnD,QAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ;AAE3C,MAAI;AACF,UAAM,EAAE,QAAQ,OAAO,UAAU,IAAI,MAAM,QAAQ,KAAK;AAExD,YAAQ,IAAI,8BAA8B,EAAE,QAAQ,OAAO,UAAU,CAAC;AAGtE,UAAM,kBAAkB,YAAY,UAAU,QAAQ,gBAAgB,EAAE,EAAE,QAAQ,OAAO,EAAE,IAAI;AAG/F,QAAIA;AACJ,QAAI,OAAO;AACT,YAAM,oBAAoB,MAAM,MAAM,6CAA6C,mBAAmB,KAAK,CAAC,YAAY;AAAA,QACtH,SAAS;AAAA,UACP,eAAe,UAAU,IAAI,iBAAiB;AAAA,QAChD;AAAA,MACF,CAAC;AAED,UAAI,kBAAkB,IAAI;AACxB,cAAM,YAAY,MAAM,kBAAkB,KAAK;AAC/C,YAAI,UAAU,KAAK,SAAS,GAAG;AAC7B,UAAAA,cAAa,UAAU,KAAK,CAAC,EAAE;AAC/B,kBAAQ,IAAI,4BAA4BA,WAAU;AAAA,QACpD;AAAA,MACF;AAAA,IACF;AAEA,QAAI,CAACA,aAAY;AACf,YAAM,eAAe,IAAI,gBAAgB;AACzC,mBAAa,OAAO,SAAS,SAAS,EAAE;AACxC,UAAI,aAAa,iBAAiB;AAChC,qBAAa,OAAO,oBAAoB,aAAa,eAAe;AAAA,MACtE;AACA,mBAAa,OAAO,oBAAoB,MAAM;AAE9C,YAAM,mBAAmB,MAAM,MAAM,uCAAuC;AAAA,QAC1E,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,eAAe,UAAU,IAAI,iBAAiB;AAAA,UAC9C,gBAAgB;AAAA,QAClB;AAAA,QACA,MAAM;AAAA,MACR,CAAC;AAED,UAAI,CAAC,iBAAiB,IAAI;AACxB,cAAM,YAAY,MAAM,iBAAiB,KAAK;AAC9C,cAAM,IAAI,MAAM,8BAA8B,SAAS,EAAE;AAAA,MAC3D;AAEA,YAAM,WAAW,MAAM,iBAAiB,KAAK;AAC7C,MAAAA,cAAa,SAAS;AACtB,cAAQ,IAAI,yBAAyBA,WAAU;AAAA,IACjD;AAGA,UAAM,kBAAkB,IAAI,gBAAgB;AAC5C,oBAAgB,OAAO,YAAYA,WAAU;AAC7C,oBAAgB,OAAO,2BAA2B,MAAM;AACxD,oBAAgB,OAAO,SAAS,aAAa;AAC7C,oBAAgB,OAAO,oBAAoB,MAAM;AACjD,oBAAgB,OAAO,oBAAoB,aAAa,eAAe;AAEvE,YAAQ,IAAI,oCAAoC,gBAAgB,SAAS,CAAC;AAE1E,UAAM,sBAAsB,MAAM,MAAM,2CAA2C;AAAA,MACjF,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,eAAe,UAAU,IAAI,iBAAiB;AAAA,QAC9C,gBAAgB;AAAA,MAClB;AAAA,MACA,MAAM;AAAA,IACR,CAAC;AAED,QAAI,CAAC,oBAAoB,IAAI;AAC3B,YAAM,YAAY,MAAM,oBAAoB,KAAK;AACjD,YAAM,IAAI,MAAM,kCAAkC,SAAS,EAAE;AAAA,IAC/D;AAEA,UAAM,cAAc,MAAM,oBAAoB,KAAK;AACnD,YAAQ,IAAI,sCAAsC,WAAW;AAC7D,YAAQ,IAAI,+BAA+B,YAAY,aAAa;AAEpE,QAAI,CAAC,YAAY,eAAe;AAC9B,cAAQ,MAAM,8CAA8C,WAAW;AACvE,YAAM,IAAI,MAAM,6CAA6C;AAAA,IAC/D;AAGA,UAAM,IAAI,mBAAmB,IAAI,gBAAgB,MAAM,IAAI,KAAK,UAAU;AAAA,MACxE;AAAA,MACA,YAAAA;AAAA,MACA,eAAe,YAAY;AAAA,MAC3B,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,IACpC,CAAC,CAAC;AAEF,UAAM,kBAAkB,mBAAmB;AAAA,MACzC,SAAS;AAAA,MACT,cAAc,YAAY;AAAA,MAC1B,YAAYA;AAAA,MACZ,eAAe,YAAY;AAAA,IAC7B,CAAC;AACD,WAAO,0BAA0B,iBAAiB,MAAM;AAAA,EAE1D,SAAS,OAAO;AACd,YAAQ,MAAM,gCAAgC,KAAK;AACnD,UAAM,gBAAgB,mBAAmB;AAAA,MACvC,OAAO;AAAA,MACP,SAAS,MAAM;AAAA,IACjB,CAAC;AACD,WAAO,0BAA0B,eAAe,MAAM;AAAA,EACxD;AACF;AAjHe;AAmHf,eAAe,yBAAyB,SAAS,KAAK;AACpD,QAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ;AAE3C,MAAI;AACF,UAAM,EAAE,QAAQ,WAAW,QAAQ,OAAO,WAAW,WAAW,iBAAiB,YAAY,mBAAmB,IAAI,MAAM,QAAQ,KAAK;AAEvI,YAAQ,IAAI,qCAAqC,EAAE,QAAQ,WAAW,QAAQ,OAAO,WAAW,gBAAgB,CAAC;AACjH,YAAQ,IAAI,mBAAmB,KAAK;AACpC,YAAQ,IAAI,oBAAoB,MAAM;AACtC,YAAQ,IAAI,uBAAuB,SAAS;AAC5C,YAAQ,IAAI,6BAA6B,eAAe;AACxD,YAAQ,IAAI,yBAAyB,OAAO,eAAe;AAC3D,YAAQ,IAAI,0BAA0B,eAAe;AAErD,QAAI,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ;AACpC,YAAM,gBAAgB,mBAAmB,EAAE,OAAO,0BAA0B,GAAG,GAAG;AAClF,aAAO,0BAA0B,eAAe,MAAM;AAAA,IACxD;AAGA,UAAM,kBAAkB,cAAc,MAAM;AAG5C,QAAIA,cAAa,sBAAsB;AACvC,QAAI,CAACA,eAAc,OAAO;AACxB,cAAQ,IAAI,8CAA8C,KAAK;AAC/D,YAAM,4BAA4B,MAAM,MAAM,6CAA6C,mBAAmB,KAAK,CAAC,YAAY;AAAA,QAC9H,SAAS;AAAA,UACP,eAAe,UAAU,IAAI,iBAAiB;AAAA,QAChD;AAAA,MACF,CAAC;AAED,UAAI,0BAA0B,IAAI;AAChC,cAAM,oBAAoB,MAAM,0BAA0B,KAAK;AAC/D,YAAI,kBAAkB,QAAQ,kBAAkB,KAAK,SAAS,GAAG;AAC/D,UAAAA,cAAa,kBAAkB,KAAK,CAAC,EAAE;AACvC,kBAAQ,IAAI,4BAA4BA,WAAU;AAAA,QACpD;AAAA,MACF;AAAA,IACF;AAGA,QAAI,CAACA,aAAY;AACf,cAAQ,IAAI,0BAA0B;AACtC,YAAM,eAAe,IAAI,gBAAgB;AACzC,mBAAa,OAAO,oBAAoB,MAAM;AAC9C,mBAAa,OAAO,oBAAoB,aAAa,eAAe;AACpE,mBAAa,OAAO,uBAAuB,aAAa,EAAE;AAE1D,UAAI,OAAO;AACT,qBAAa,OAAO,SAAS,KAAK;AAAA,MACpC;AAGA,YAAM,mBAAmB,MAAM,MAAM,uCAAuC;AAAA,QAC1E,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,eAAe,UAAU,IAAI,iBAAiB;AAAA,UAC9C,gBAAgB;AAAA,QAClB;AAAA,QACA,MAAM;AAAA,MACR,CAAC;AAED,UAAI,CAAC,iBAAiB,IAAI;AACxB,cAAM,YAAY,MAAM,iBAAiB,KAAK;AAC9C,cAAM,IAAI,MAAM,8BAA8B,SAAS,EAAE;AAAA,MAC3D;AAEA,YAAM,WAAW,MAAM,iBAAiB,KAAK;AAC7C,MAAAA,cAAa,SAAS;AACtB,cAAQ,IAAI,yBAAyBA,WAAU;AAC/C,cAAQ,IAAI,oCAAoC,SAAS,kBAAkB,sBAAsB;AAAA,IACnG;AAGA,UAAM,kBAAkB,MAAM,MAAM,sCAAsC,SAAS,IAAI;AAAA,MACrF,SAAS;AAAA,QACP,eAAe,UAAU,IAAI,iBAAiB;AAAA,MAChD;AAAA,IACF,CAAC;AAED,QAAI,CAAC,gBAAgB,IAAI;AACvB,YAAM,IAAI,MAAM,+BAA+B;AAAA,IACjD;AAEA,UAAM,UAAU,MAAM,gBAAgB,KAAK;AAC3C,UAAM,UAAU,QAAQ;AAGxB,UAAM,mBAAmB,IAAI,gBAAgB;AAC7C,qBAAiB,OAAO,YAAYA,WAAU;AAC9C,qBAAiB,OAAO,mBAAmB,OAAO;AAGlD,QAAI,iBAAiB;AACnB,uBAAiB,OAAO,0BAA0B,eAAe;AACjE,cAAQ,IAAI,8CAA8C,eAAe;AAEzE,uBAAiB,OAAO,oBAAoB,qBAAqB;AAAA,IACnE,OAAO;AACL,cAAQ,IAAI,oFAAoF;AAClG,uBAAiB,OAAO,oBAAoB,oBAAoB;AAAA,IAChE;AAEA,qBAAiB,OAAO,qBAAqB,sBAAsB;AACnE,qBAAiB,OAAO,iDAAiD,iBAAiB;AAC1F,qBAAiB,OAAO,6CAA6C,MAAM;AAC3E,qBAAiB,OAAO,0EAA0E,WAAW;AAC7G,qBAAiB,OAAO,YAAY,+BAA+B;AACnE,qBAAiB,OAAO,oBAAoB,MAAM;AAClD,qBAAiB,OAAO,oBAAoB,aAAa,eAAe;AACxE,qBAAiB,OAAO,mBAAmB,SAAS,EAAE;AACtD,qBAAiB,OAAO,uBAAuB,aAAa,EAAE;AAC9D,qBAAiB,OAAO,uBAAuB,SAAS;AACxD,qBAAiB,OAAO,wBAAuB,oBAAI,KAAK,GAAE,YAAY,CAAC;AAEvE,YAAQ,IAAI,oCAAoC,iBAAiB,SAAS,CAAC;AAC3E,YAAQ,IAAI,iCAAiC,eAAe;AAC5D,YAAQ,IAAI,2BAA2BA,WAAU;AACjD,YAAQ,IAAI,0BAA0B;AAAA,MACpC;AAAA,MACA,QAAQ,aAAa;AAAA,MACrB,OAAO,SAAS;AAAA,MAChB,WAAW,aAAa;AAAA,MACxB;AAAA,IACF,CAAC;AAED,UAAM,uBAAuB,MAAM,MAAM,2CAA2C;AAAA,MAClF,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,eAAe,UAAU,IAAI,iBAAiB;AAAA,QAC9C,gBAAgB;AAAA,MAClB;AAAA,MACA,MAAM;AAAA,IACR,CAAC;AAED,QAAI,CAAC,qBAAqB,IAAI;AAC5B,YAAM,YAAY,MAAM,qBAAqB,KAAK;AAClD,cAAQ,MAAM,wCAAwC,SAAS;AAC/D,YAAM,IAAI,MAAM,kCAAkC,SAAS,EAAE;AAAA,IAC/D;AAEA,UAAMC,gBAAe,MAAM,qBAAqB,KAAK;AACrD,YAAQ,IAAI,sCAAsCA,aAAY;AAC9D,YAAQ,IAAI,wBAAwBA,cAAa,MAAM;AACvD,YAAQ,IAAI,gCAAgCA,cAAa,sBAAsB;AAC/E,YAAQ,IAAI,gCAAgCA,cAAa,cAAc;AACvE,YAAQ,IAAI,uBAAuBA,cAAa,OAAO,OAAO,CAAC,CAAC;AAGhE,UAAM,WAAW;AAAA,MACf;AAAA,MACA,QAAQ;AAAA,MACR,YAAYD;AAAA,MACZ,gBAAgBC,cAAa;AAAA,MAC7B,eAAeA,cAAa;AAAA,MAC5B,WAAW,aAAa;AAAA,MACxB,oBAAoBA,cAAa;AAAA,MACjC,kBAAkBA,cAAa;AAAA,MAC/B,mBAAmBA,cAAa,wBAAwB;AAAA,MACxD,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,IACpC;AAEA,UAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,IAAI,KAAK,UAAU,QAAQ,CAAC;AAEhF,QAAI;AACF,YAAM,kBAAkB;AAAA,QACtB,IAAIA,cAAa;AAAA,QACjB;AAAA,QACA,MAAM;AAAA,QACN,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,QAAQA,cAAa;AAAA,QACrB,UAAUA,cAAa,YAAY;AAAA,QACnC,QAAQA,cAAa,OAAO,OAAO,CAAC,GAAG,OAAO,eAAe;AAAA,QAC7D,YAAAD;AAAA,QACA,gBAAgBC,cAAa;AAAA,QAC7B,WAAWA,cAAa,kBAAkB;AAAA,QAC1C,iBAAiBA,cAAa,gBAAgB,kBAAkB;AAAA,QAChE,iBAAiB,mBAAmB;AAAA,QACpC,WAAW,aAAa;AAAA,QACxB,oBAAoBA,cAAa,wBAAwB;AAAA,QACzD,kBAAkBA,cAAa,sBAAsB;AAAA,QACrD,UAAUA,cAAa,YAAY,CAAC;AAAA,MACtC;AACA,YAAM,IAAI,mBAAmB,IAAI,WAAW,MAAM,IAAI,KAAK,UAAU,eAAe,CAAC;AAAA,IACvF,SAAS,SAAS;AAChB,cAAQ,KAAK,oCAAoC,OAAO;AAAA,IAC1D;AAGA,QAAIA,cAAa,WAAW,cAAc;AAExC,cAAQ,IAAI,sFAAsF;AAGlG,UAAI,iBAAiB;AACnB,gBAAQ,IAAI,uEAAuE,eAAe;AAClG,YAAI;AACF,gBAAM,iBAAiB,IAAI,gBAAgB;AAC3C,yBAAe,OAAO,0BAA0B,eAAe;AAE/D,gBAAM,mBAAmB,MAAM,MAAM,2CAA2CA,cAAa,EAAE,IAAI;AAAA,YACjG,QAAQ;AAAA,YACR,SAAS;AAAA,cACP,eAAe,UAAU,IAAI,iBAAiB;AAAA,cAC9C,gBAAgB;AAAA,YAClB;AAAA,YACA,MAAM;AAAA,UACR,CAAC;AAED,cAAI,iBAAiB,IAAI;AACvB,kBAAM,wBAAwB,MAAM,iBAAiB,KAAK;AAC1D,oBAAQ,IAAI,wCAAwC,sBAAsB,MAAM;AAGhF,qBAAS,gBAAgB,sBAAsB;AAC/C,kBAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,IAAI,KAAK,UAAU,QAAQ,CAAC;AAEhF,mBAAO,0BAA0B,mBAAmB;AAAA,cAClD,gBAAgBA,cAAa;AAAA,cAC7B,QAAQ,sBAAsB;AAAA,cAC9B,gBAAgB;AAAA,YAClB,CAAC,GAAG,MAAM;AAAA,UACZ,OAAO;AACL,kBAAM,YAAY,MAAM,iBAAiB,KAAK;AAC9C,oBAAQ,MAAM,oCAAoC,SAAS;AAAA,UAC7D;AAAA,QACF,SAAS,OAAO;AACd,kBAAQ,MAAM,kCAAkC,KAAK;AAAA,QACvD;AAAA,MACF;AAEA,aAAO,0BAA0B,mBAAmB;AAAA,QAClD,gBAAgBA,cAAa;AAAA,QAC7B,QAAQA,cAAa;AAAA,QACrB,gBAAgB;AAAA;AAAA,QAChB,SAAS;AAAA,MACX,CAAC,GAAG,MAAM;AAAA,IACZ,WAAWA,cAAa,WAAW,UAAU;AAE7C,YAAM,IAAI,mBAAmB,IAAI,UAAU,eAAe,IAAI,KAAK,UAAU;AAAA,QAC3E;AAAA,QACA,UAAU;AAAA,MACZ,CAAC,CAAC;AAEA,aAAO,0BAA0B,mBAAmB;AAAA,QACpD,gBAAgBA,cAAa;AAAA,QAC3B,QAAQA,cAAa;AAAA,QACrB,gBAAgB;AAAA,MAClB,CAAC,GAAG,MAAM;AAAA,IACZ,OAAO;AAEL,aAAO,0BAA0B,mBAAmB;AAAA,QAClD,gBAAgBA,cAAa;AAAA,QAC7B,QAAQA,cAAa;AAAA,QACrB,gBAAgB;AAAA,MAClB,CAAC,GAAG,MAAM;AAAA,IACZ;AAAA,EAEF,SAAS,OAAO;AACd,YAAQ,MAAM,8BAA8B,KAAK;AACjD,UAAM,gBAAgB,mBAAmB;AAAA,MACvC,OAAO;AAAA,MACP,SAAS,MAAM;AAAA,IACjB,GAAG,GAAG;AACN,WAAO,0BAA0B,eAAe,MAAM;AAAA,EACxD;AACF;AA3Qe;AA+Qf,eAAe,0BAA0B,SAAS,KAAK;AACrD,QAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ;AAC3C,MAAI;AACF,UAAM,EAAE,QAAQ,QAAQ,WAAW,OAAO,MAAM,IAAI,MAAM,QAAQ,KAAK;AACvE,QAAI,CAAC,UAAU,CAAC,QAAQ;AACtB,aAAO,0BAA0B,mBAAmB,EAAE,OAAO,0BAA0B,GAAG,GAAG,GAAG,MAAM;AAAA,IACxG;AAGA,QAAID,cAAa;AACjB,QAAI,OAAO;AACT,YAAM,UAAU,MAAM,MAAM,uCAAuC;AAAA,QACjE,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,eAAe,UAAU,IAAI,iBAAiB;AAAA,UAC9C,gBAAgB;AAAA,QAClB;AAAA,QACA,MAAM,IAAI,gBAAgB,EAAE,MAAM,CAAC;AAAA,MACrC,CAAC;AACD,YAAM,OAAO,MAAM,QAAQ,KAAK;AAChC,MAAAA,cAAa,KAAK,MAAM;AAAA,IAC1B;AAGA,UAAM,QAAQ,MAAM,MAAM,6CAA6C;AAAA,MACrE,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,eAAe,UAAU,IAAI,iBAAiB;AAAA,QAC9C,gBAAgB;AAAA,MAClB;AAAA,MACA,MAAM,IAAI,gBAAgB;AAAA,QACxB,QAAQ,OAAO,MAAM;AAAA,QACrB;AAAA,QACA,0BAA0B;AAAA,QAC1B,sCAAsC;AAAA,QACtC,wDAAwD;AAAA,QACxD,GAAIA,cAAa,EAAE,UAAUA,YAAW,IAAI,CAAC;AAAA,QAC7C,GAAI,SAAS,EAAE,oBAAoB,OAAO,IAAI,CAAC;AAAA,MACjD,CAAC;AAAA,IACH,CAAC;AAED,QAAI,CAAC,MAAM,IAAI;AACb,YAAM,OAAO,MAAM,MAAM,KAAK;AAC9B,aAAO,0BAA0B,mBAAmB,EAAE,OAAO,iBAAiB,IAAI,GAAG,GAAG,GAAG,GAAG,MAAM;AAAA,IACtG;AACA,UAAM,KAAK,MAAM,MAAM,KAAK;AAC5B,WAAO,0BAA0B,mBAAmB,EAAE,cAAc,GAAG,cAAc,CAAC,GAAG,MAAM;AAAA,EACjG,SAAS,OAAO;AACd,WAAO,0BAA0B,mBAAmB,EAAE,OAAO,MAAM,WAAW,SAAS,GAAG,GAAG,GAAG,MAAM;AAAA,EACxG;AACF;AAlDe;AAqDf,eAAe,oBAAoB,SAAS,KAAK;AAC/C,QAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ;AAC3C,MAAI;AACF,UAAM,MAAM,QAAQ,QAAQ,IAAI,kBAAkB;AAClD,QAAI,CAAC,OAAO,CAAC,IAAI,uBAAuB;AACtC,aAAO,0BAA0B,mBAAmB,EAAE,OAAO,sCAAsC,GAAG,GAAG,GAAG,MAAM;AAAA,IACpH;AAEA,UAAM,UAAU,MAAM,QAAQ,KAAK;AAInC,UAAM,QAAQ,OAAO,YAAY,IAAI,MAAM,GAAG,EAAE,IAAI,QAAM,GAAG,MAAM,GAAG,CAAC,CAAC;AACxE,UAAM,YAAY,MAAM,GAAG;AAC3B,UAAM,KAAK,MAAM,IAAI;AACrB,QAAI,CAAC,aAAa,CAAC,IAAI;AACrB,aAAO,0BAA0B,mBAAmB,EAAE,OAAO,2BAA2B,GAAG,GAAG,GAAG,MAAM;AAAA,IACzG;AAEA,UAAM,gBAAgB,GAAG,SAAS,IAAI,OAAO;AAC7C,UAAM,UAAU,IAAI,YAAY;AAChC,UAAM,MAAM,MAAM,OAAO,OAAO;AAAA,MAC9B;AAAA,MACA,QAAQ,OAAO,IAAI,qBAAqB;AAAA,MACxC,EAAE,MAAM,QAAQ,MAAM,UAAU;AAAA,MAChC;AAAA,MACA,CAAC,MAAM;AAAA,IACT;AACA,UAAM,kBAAkB,MAAM,OAAO,OAAO,KAAK,QAAQ,KAAK,QAAQ,OAAO,aAAa,CAAC;AAC3F,UAAM,eAAe,MAAM,KAAK,IAAI,WAAW,eAAe,CAAC,EAAE,IAAI,OAAK,EAAE,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG,CAAC,EAAE,KAAK,EAAE;AAGlH,QAAI,iBAAiB,IAAI;AACvB,aAAO,0BAA0B,mBAAmB,EAAE,OAAO,gCAAgC,GAAG,GAAG,GAAG,MAAM;AAAA,IAC9G;AAEA,UAAM,QAAQ,KAAK,MAAM,OAAO;AAEhC,QAAI,MAAM,SAAS,iCAAiC;AAClD,YAAMC,gBAAe,MAAM,KAAK,UAAU,CAAC;AAC3C,YAAM,SAASA,cAAa,UAAU;AACtC,UAAI,QAAQ;AACV,cAAM,cAAc,MAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,EAAE;AAC1E,cAAM,WAAW,cAAc,KAAK,MAAM,WAAW,IAAI,CAAC;AAC1D,iBAAS,gBAAgB;AACzB,iBAAS,iBAAiBA,cAAa;AACvC,iBAAS,mBAAkB,oBAAI,KAAK,GAAE,YAAY;AAClD,cAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,IAAI,KAAK,UAAU,QAAQ,CAAC;AAChF,cAAM,kBAAkB,KAAK,QAAQ;AAAA,UACnC;AAAA,UACA,eAAe;AAAA,UACf,gBAAgBA,cAAa;AAAA,UAC7B,iBAAiB,SAAS;AAAA,QAC5B,CAAC;AAGD,YAAI;AACF,gBAAM,aAAa,IAAI,oBAAoB;AAC3C,gBAAM,MAAM,YAAY;AAAA,YACtB,QAAQ;AAAA,YACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,YAC9C,MAAM,KAAK,UAAU;AAAA,cACnB,OAAO;AAAA,cACP,UAAU;AAAA,gBACR,OAAOA,cAAa,UAAU,SAAS;AAAA,gBACvC,WAAWA,cAAa,UAAU,aAAa;AAAA,gBAC/C,QAAQA,cAAa,UAAU,UAAU;AAAA,gBACzC;AAAA,cACF;AAAA,cACA,cAAc;AAAA,gBACZ,IAAIA,cAAa;AAAA,gBACjB,WAAWA,cAAa,UAAU,aAAa;AAAA,cACjD;AAAA,cACA,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,YACpC,CAAC;AAAA,UACH,CAAC;AACD,kBAAQ,IAAI,uCAAuC;AAAA,QACrD,SAAS,cAAc;AACrB,kBAAQ,KAAK,kCAAkC,YAAY;AAAA,QAC7D;AAAA,MACF;AAAA,IACF,WAAW,MAAM,SAAS,iCAAiC;AACzD,YAAMA,gBAAe,MAAM,KAAK,UAAU,CAAC;AAC3C,YAAM,SAASA,cAAa,UAAU;AACtC,UAAI,QAAQ;AACV,cAAM,cAAc,MAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,EAAE;AAC1E,cAAM,WAAW,cAAc,KAAK,MAAM,WAAW,IAAI,CAAC;AAC1D,iBAAS,gBAAgBA,cAAa,WAAW,WAAW,WAAW;AACvE,iBAAS,mBAAkB,oBAAI,KAAK,GAAE,YAAY;AAClD,iBAAS,qBAAqBA,cAAa;AAC3C,iBAAS,mBAAmBA,cAAa;AACzC,iBAAS,oBAAoBA,cAAa,wBAAwB;AAClE,cAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,IAAI,KAAK,UAAU,QAAQ,CAAC;AAChF,cAAM,kBAAkB,KAAK,QAAQ;AAAA,UACnC;AAAA,UACA,eAAe,SAAS;AAAA,UACxB,iBAAiB,SAAS;AAAA,QAC5B,CAAC;AAED,YAAI;AACF,gBAAM,QAAQA,cAAa,OAAO,OAAO,CAAC,GAAG;AAC7C,gBAAM,OAAO;AAAA,YACX,IAAIA,cAAa;AAAA,YACjB;AAAA,YACA,MAAM;AAAA,YACN,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,YAClC,QAAQA,cAAa;AAAA,YACrB,UAAU,OAAO,YAAY;AAAA,YAC7B,QAAQ,OAAO,eAAe;AAAA,YAC9B,YAAYA,cAAa,YAAY;AAAA,YACrC,gBAAgBA,cAAa;AAAA,YAC7B,WAAWA,cAAa,kBAAkB;AAAA,YAC1C,iBAAiB;AAAA,YACjB,iBAAiB;AAAA,YACjB,oBAAoBA,cAAa,wBAAwB;AAAA,YACzD,kBAAkBA,cAAa,sBAAsB;AAAA,YACrD,mBAAmBA,cAAa,wBAAwB;AAAA,YACxD,WAAW,OAAO,WAAW;AAAA,YAC7B,SAAS,OAAO,MAAM;AAAA,YACtB,UAAUA,cAAa,YAAY,CAAC;AAAA,UACtC;AACA,gBAAM,IAAI,mBAAmB,IAAI,WAAW,MAAM,IAAI,KAAK,UAAU,IAAI,CAAC;AAAA,QAC5E,SAAS,GAAG;AACV,kBAAQ,KAAK,8CAA8C,CAAC;AAAA,QAC9D;AAGA,YAAI;AACF,gBAAM,aAAa,IAAI,oBAAoB;AAC3C,gBAAM,MAAM,YAAY;AAAA,YACtB,QAAQ;AAAA,YACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,YAC9C,MAAM,KAAK,UAAU;AAAA,cACnB,OAAO;AAAA,cACP,UAAU;AAAA,gBACR,OAAOA,cAAa,UAAU,SAAS;AAAA,gBACvC,WAAWA,cAAa,UAAU,aAAa;AAAA,gBAC/C,QAAQA,cAAa,UAAU,UAAU;AAAA,gBACzC;AAAA,cACF;AAAA,cACA,cAAc;AAAA,gBACZ,IAAIA,cAAa;AAAA,gBACjB,QAAQA,cAAa;AAAA,gBACrB,WAAWA,cAAa,UAAU,aAAa;AAAA,gBAC/C,oBAAoBA,cAAa;AAAA,gBACjC,kBAAkBA,cAAa;AAAA,gBAC/B,mBAAmBA,cAAa,wBAAwB;AAAA,cAC1D;AAAA,cACA,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,YACpC,CAAC;AAAA,UACH,CAAC;AACD,kBAAQ,IAAI,4DAA4D;AAAA,QAC1E,SAAS,cAAc;AACrB,kBAAQ,KAAK,uDAAuD,YAAY;AAAA,QAClF;AAAA,MACF;AAAA,IACF,WAAW,MAAM,SAAS,iCAAiC;AACzD,YAAMA,gBAAe,MAAM,KAAK,UAAU,CAAC;AAC3C,YAAM,SAASA,cAAa,UAAU;AACtC,UAAI,QAAQ;AACV,cAAM,cAAc,MAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,EAAE;AAC1E,cAAM,WAAW,cAAc,KAAK,MAAM,WAAW,IAAI,CAAC;AAC1D,iBAAS,gBAAgB;AACzB,iBAAS,mBAAkB,oBAAI,KAAK,GAAE,YAAY;AAClD,iBAAS,eAAc,oBAAI,KAAK,GAAE,YAAY;AAC9C,iBAAS,oBAAmB,oBAAI,KAAK,GAAE,YAAY;AACnD,cAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,IAAI,KAAK,UAAU,QAAQ,CAAC;AAChF,cAAM,kBAAkB,KAAK,QAAQ;AAAA,UACnC;AAAA,UACA,eAAe;AAAA,UACf,iBAAiB,SAAS;AAAA,QAC5B,CAAC;AAED,YAAI;AAEF,cAAI,YAAY;AAChB,cAAI,UAAU;AACd,cAAIA,cAAa,SAASA,cAAa,MAAM,QAAQA,cAAa,MAAM,KAAK,SAAS,GAAG;AACvF,kBAAM,OAAOA,cAAa,MAAM,KAAK,CAAC;AACtC,wBAAY,KAAK,OAAO,WAAW;AACnC,sBAAU,KAAK,OAAO,MAAM;AAAA,UAC9B;AAEA,gBAAM,OAAO;AAAA,YACX,IAAIA,cAAa;AAAA,YACjB;AAAA,YACA,MAAM;AAAA,YACN,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,YAClC,QAAQ;AAAA,YACR,UAAU;AAAA,YACV,QAAQ;AAAA,YACR,YAAYA,cAAa,YAAY;AAAA,YACrC,gBAAgBA,cAAa;AAAA,YAC7B,WAAWA,cAAa,kBAAkB;AAAA,YAC1C,iBAAiB;AAAA,YACjB,iBAAiB;AAAA,YACjB,oBAAoBA,cAAa,wBAAwB;AAAA,YACzD,kBAAkBA,cAAa,sBAAsB;AAAA,YACrD,mBAAmB;AAAA,YACnB,cAAa,oBAAI,KAAK,GAAE,YAAY;AAAA,YACpC,mBAAkB,oBAAI,KAAK,GAAE,YAAY;AAAA,YACzC;AAAA,YACA;AAAA,YACA,UAAUA,cAAa,YAAY,CAAC;AAAA,UACtC;AACA,gBAAM,IAAI,mBAAmB,IAAI,WAAW,MAAM,IAAI,KAAK,UAAU,IAAI,CAAC;AAAA,QAC5E,SAAS,GAAG;AACV,kBAAQ,KAAK,8CAA8C,CAAC;AAAA,QAC9D;AAGA,YAAI;AACF,gBAAM,aAAa,IAAI,oBAAoB;AAC3C,gBAAM,MAAM,YAAY;AAAA,YACtB,QAAQ;AAAA,YACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,YAC9C,MAAM,KAAK,UAAU;AAAA,cACnB,OAAO;AAAA,cACP,UAAU;AAAA,gBACR,OAAOA,cAAa,UAAU,SAAS;AAAA,gBACvC,WAAWA,cAAa,UAAU,aAAa;AAAA,gBAC/C,QAAQA,cAAa,UAAU,UAAU;AAAA,gBACzC;AAAA,cACF;AAAA,cACA,cAAc;AAAA,gBACZ,IAAIA,cAAa;AAAA,gBACjB,QAAQ;AAAA,gBACR,WAAWA,cAAa,UAAU,aAAa;AAAA,gBAC/C,cAAa,oBAAI,KAAK,GAAE,YAAY;AAAA,cACtC;AAAA,cACA,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,YACpC,CAAC;AAAA,UACH,CAAC;AACD,kBAAQ,IAAI,8DAA8D;AAAA,QAC5E,SAAS,cAAc;AACrB,kBAAQ,KAAK,yDAAyD,YAAY;AAAA,QACpF;AAAA,MACF;AAAA,IACF,WAAW,MAAM,SAAS,4BAA4B;AACpD,YAAM,KAAK,MAAM,KAAK,UAAU,CAAC;AACjC,YAAM,SAAS,GAAG,UAAU;AAC5B,UAAI,QAAQ;AACV,cAAM,cAAc,MAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,EAAE;AAC1E,cAAM,WAAW,cAAc,KAAK,MAAM,WAAW,IAAI,CAAC;AAC1D,iBAAS,gBAAgB;AACzB,iBAAS,mBAAkB,oBAAI,KAAK,GAAE,YAAY;AAClD,iBAAS,gBAAgB,GAAG,uBAAuB,CAAC,KAAK;AACzD,cAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,IAAI,KAAK,UAAU,QAAQ,CAAC;AAChF,cAAM,kBAAkB,KAAK,QAAQ;AAAA,UACnC;AAAA,UACA,eAAe;AAAA,UACf,iBAAiB,SAAS;AAAA,QAC5B,CAAC;AAAA,MACH;AAAA,IACF,WAAW,MAAM,SAAS,iCAAiC;AACzD,YAAM,KAAK,MAAM,KAAK,UAAU,CAAC;AACjC,YAAM,SAAS,GAAG,UAAU;AAC5B,UAAI,QAAQ;AACV,cAAM,cAAc,MAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,EAAE;AAC1E,cAAM,WAAW,cAAc,KAAK,MAAM,WAAW,IAAI,CAAC;AAC1D,iBAAS,gBAAgB;AACzB,iBAAS,mBAAkB,oBAAI,KAAK,GAAE,YAAY;AAClD,cAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,IAAI,KAAK,UAAU,QAAQ,CAAC;AAChF,cAAM,kBAAkB,KAAK,QAAQ;AAAA,UACnC;AAAA,UACA,eAAe;AAAA,UACf,iBAAiB,SAAS;AAAA,QAC5B,CAAC;AAAA,MACH;AAAA,IACF,WAAW,MAAM,SAAS,0BAA0B;AAClD,cAAQ,IAAI,kDAA2C;AACvD,YAAM,cAAc,MAAM,KAAK,UAAU,CAAC;AAC1C,YAAM,SAAS,YAAY,UAAU;AACrC,UAAI,iBAAiB,YAAY,UAAU;AAC3C,YAAM,QAAQ,YAAY,UAAU;AACpC,YAAM,SAAS,YAAY,UAAU;AAErC,cAAQ,IAAI,uCAAgC,EAAE,QAAQ,gBAAgB,OAAO,OAAO,CAAC;AAGrF,UAAI,UAAU,CAAC,gBAAgB;AAC7B,gBAAQ,IAAI,sEAAsE;AAClF,YAAI;AACF,gBAAM,cAAc,MAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,EAAE;AAC1E,cAAI,aAAa;AACf,kBAAM,WAAW,KAAK,MAAM,WAAW;AACvC,6BAAiB,SAAS;AAC1B,oBAAQ,IAAI,wCAAwC,cAAc;AAAA,UACpE;AAAA,QACF,SAAS,OAAO;AACd,kBAAQ,MAAM,oCAAoC,KAAK;AAAA,QACzD;AAAA,MACF;AAEA,UAAI,UAAU,gBAAgB;AAC5B,gBAAQ,IAAI,mDAAmD,cAAc;AAC7E,gBAAQ,IAAI,yBAAyB,YAAY,QAAQ;AACzD,gBAAQ,IAAI,oCAAoC,YAAY,cAAc;AAG1E,cAAM,eAAe,IAAI,gBAAgB;AACzC,qBAAa,OAAO,0BAA0B,YAAY,cAAc;AAGxE,YAAI,MAAO,cAAa,OAAO,mBAAmB,KAAK;AACvD,YAAI,OAAQ,cAAa,OAAO,oBAAoB,MAAM;AAC1D,YAAI,OAAQ,cAAa,OAAO,oBAAoB,MAAM;AAE1D,cAAM,6BAA6B,MAAM,MAAM,2CAA2C,cAAc,IAAI;AAAA,UAC1G,QAAQ;AAAA,UACR,SAAS;AAAA,YACP,eAAe,UAAU,IAAI,iBAAiB;AAAA,YAC9C,gBAAgB;AAAA,UAClB;AAAA,UACA,MAAM;AAAA,QACR,CAAC;AAED,YAAI,2BAA2B,IAAI;AACjC,gBAAM,sBAAsB,MAAM,2BAA2B,KAAK;AAClE,kBAAQ,IAAI,2DAA2D;AACvE,kBAAQ,IAAI,gCAAgC,oBAAoB,MAAM;AACtE,kBAAQ,IAAI,kCAAkC,oBAAoB,QAAQ;AAG1E,gBAAM,cAAc,MAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,EAAE;AAC1E,gBAAM,WAAW,cAAc,KAAK,MAAM,WAAW,IAAI,CAAC;AAC1D,mBAAS,gBAAgB;AACzB,mBAAS,mBAAkB,oBAAI,KAAK,GAAE,YAAY;AAClD,mBAAS,gBAAgB,YAAY,uBAAuB,CAAC,KAAK;AAClE,mBAAS,QAAQ,SAAS,SAAS;AACnC,mBAAS,SAAS,UAAU,SAAS;AACrC,mBAAS,qBAAqB,oBAAoB;AAClD,mBAAS,mBAAmB,oBAAoB;AAChD,mBAAS,oBAAoB,oBAAoB,wBAAwB;AACzE,gBAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,IAAI,KAAK,UAAU,QAAQ,CAAC;AAChF,gBAAM,kBAAkB,KAAK,QAAQ;AAAA,YACnC;AAAA,YACA,OAAO,SAAS;AAAA,YAChB,QAAQ,UAAU;AAAA,YAClB,eAAe;AAAA,YACf,iBAAiB,SAAS;AAAA,UAC5B,CAAC;AAAA,QACH,OAAO;AACL,gBAAM,YAAY,MAAM,2BAA2B,KAAK;AACxD,kBAAQ,MAAM,kCAAkC,SAAS;AAAA,QAC3D;AAAA,MACF;AAAA,IACF;AAEA,WAAO,IAAI,SAAS,MAAM,EAAE,QAAQ,KAAK,SAAS,EAAE,gBAAgB,aAAa,EAAE,CAAC;AAAA,EACtF,SAAS,KAAK;AACZ,WAAO,0BAA0B,mBAAmB,EAAE,OAAO,IAAI,WAAW,gBAAgB,GAAG,GAAG,GAAG,MAAM;AAAA,EAC7G;AACF;AAjWe;AAoWf,eAAe,2BAA2B,SAAS,KAAK;AACtD,QAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ;AAE3C,MAAI;AACF,UAAM,EAAE,QAAQ,eAAe,gBAAgB,IAAI,MAAM,QAAQ,KAAK;AAEtE,QAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,iBAAiB;AACjD,YAAM,gBAAgB,mBAAmB,EAAE,OAAO,0BAA0B,GAAG,GAAG;AAClF,aAAO,0BAA0B,eAAe,MAAM;AAAA,IACxD;AAEA,YAAQ,IAAI,8BAA8B,EAAE,QAAQ,eAAe,gBAAgB,CAAC;AAGpF,UAAM,cAAc,MAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,EAAE;AAC1E,YAAQ,IAAI,sBAAsB,WAAW;AAE7C,QAAI,CAAC,aAAa;AAChB,YAAM,gBAAgB,mBAAmB,EAAE,OAAO,iCAAiC,GAAG,GAAG;AACzF,aAAO,0BAA0B,eAAe,MAAM;AAAA,IACxD;AAEA,UAAM,WAAW,KAAK,MAAM,WAAW;AACvC,UAAM,iBAAiB,SAAS;AAChC,YAAQ,IAAI,0BAA0B,cAAc;AAEpD,QAAI,CAAC,gBAAgB;AACnB,YAAM,gBAAgB,mBAAmB,EAAE,OAAO,2BAA2B,GAAG,GAAG;AACnF,aAAO,0BAA0B,eAAe,MAAM;AAAA,IACxD;AAGA,YAAQ,IAAI,+DAA+D,SAAS,UAAU;AAG9F,QAAI;AACF,YAAM,wBAAwB,MAAM,MAAM,6CAA6C,eAAe,IAAI;AAAA,QACxG,SAAS;AAAA,UACP,eAAe,UAAU,IAAI,iBAAiB;AAAA,QAChD;AAAA,MACF,CAAC;AAED,UAAI,sBAAsB,IAAI;AAC5B,cAAM,gBAAgB,MAAM,sBAAsB,KAAK;AACvD,gBAAQ,IAAI,2BAA2B,aAAa;AAEpD,YAAI,cAAc,aAAa,SAAS,YAAY;AAClD,kBAAQ,IAAI,6DAA6D;AAAA,QAC3E,OAAO;AACL,kBAAQ,IAAI,4FAA4F;AAGxG,gBAAM,eAAe,IAAI,gBAAgB;AACzC,uBAAa,OAAO,YAAY,SAAS,UAAU;AAEnD,gBAAM,iBAAiB,MAAM,MAAM,6CAA6C,eAAe,WAAW;AAAA,YACxG,QAAQ;AAAA,YACR,SAAS;AAAA,cACP,eAAe,UAAU,IAAI,iBAAiB;AAAA,cAC9C,gBAAgB;AAAA,YAClB;AAAA,YACA,MAAM;AAAA,UACR,CAAC;AAED,cAAI,eAAe,IAAI;AACrB,oBAAQ,IAAI,kDAAkD;AAAA,UAChE,OAAO;AACL,kBAAM,cAAc,MAAM,eAAe,KAAK;AAC9C,oBAAQ,MAAM,gDAAgD,WAAW;AACzE,kBAAM,IAAI,MAAM,oCAAoC,WAAW,EAAE;AAAA,UACnE;AAAA,QACF;AAAA,MACF,OAAO;AACL,gBAAQ,MAAM,2CAA2C;AACzD,cAAM,IAAI,MAAM,2CAA2C;AAAA,MAC7D;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,IAAI,2DAA2D,MAAM,OAAO;AAAA,IAEtF;AAGA,UAAM,qBAAqB,MAAM,MAAM,2CAA2C,cAAc,IAAI;AAAA,MAClG,SAAS,EAAE,eAAe,UAAU,IAAI,iBAAiB,GAAG;AAAA,IAC9D,CAAC;AACD,QAAI,yBAAyB,SAAS;AACtC,QAAI,mBAAmB,IAAI;AACzB,YAAM,MAAM,MAAM,mBAAmB,KAAK;AAC1C,+BAAyB,IAAI,YAAY;AACzC,cAAQ,IAAI,6BAA6B,sBAAsB;AAAA,IACjE,OAAO;AACL,cAAQ,KAAK,mFAAmF;AAAA,IAClG;AAGA,QAAI;AACF,YAAM,SAAS,MAAM,MAAM,6CAA6C,eAAe,IAAI;AAAA,QACzF,SAAS,EAAE,eAAe,UAAU,IAAI,iBAAiB,GAAG;AAAA,MAC9D,CAAC;AACD,UAAI,OAAO,IAAI;AACb,cAAM,KAAK,MAAM,OAAO,KAAK;AAC7B,YAAI,GAAG,YAAY,GAAG,aAAa,wBAAwB;AAEzD,gBAAM,WAAW,mBAAmB;AAAA,YAClC,OAAO;AAAA,YACP,SAAS;AAAA,UACX,GAAG,GAAG;AACN,iBAAO,0BAA0B,UAAU,MAAM;AAAA,QACnD;AAAA,MACF;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,IAAI,kCAAkC,OAAO,WAAW,KAAK;AAAA,IACvE;AAGA,UAAM,eAAe,IAAI,gBAAgB;AACzC,iBAAa,OAAO,0BAA0B,eAAe;AAE7D,YAAQ,IAAI,8CAA8C,eAAe;AACzE,YAAQ,IAAI,kBAAkB,aAAa,SAAS,CAAC;AAErD,UAAM,6BAA6B,MAAM,MAAM,2CAA2C,cAAc,IAAI;AAAA,MAC1G,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,eAAe,UAAU,IAAI,iBAAiB;AAAA,QAC9C,gBAAgB;AAAA,MAClB;AAAA,MACA,MAAM;AAAA,IACR,CAAC;AAED,YAAQ,IAAI,wCAAwC,2BAA2B,MAAM;AAErF,QAAI,2BAA2B,IAAI;AACjC,UAAI,sBAAsB,MAAM,2BAA2B,KAAK;AAChE,cAAQ,IAAI,kDAAkD,oBAAoB,MAAM;AACxF,cAAQ,IAAI,iCAAiC,mBAAmB;AAGhE,UAAI;AACF,YAAI,oBAAoB,WAAW,gBAAgB,oBAAoB,gBAAgB;AACrF,kBAAQ,IAAI,qCAAqC,oBAAoB,cAAc;AACnF,gBAAM,UAAU,MAAM,MAAM,sCAAsC,oBAAoB,cAAc,QAAQ;AAAA,YAC1G,QAAQ;AAAA,YACR,SAAS;AAAA,cACP,eAAe,UAAU,IAAI,iBAAiB;AAAA,YAChD;AAAA,UACF,CAAC;AACD,cAAI,CAAC,QAAQ,IAAI;AACf,kBAAM,KAAK,MAAM,QAAQ,KAAK;AAC9B,oBAAQ,KAAK,0BAA0B,EAAE;AAAA,UAC3C,OAAO;AACL,oBAAQ,IAAI,wCAAwC;AAAA,UACtD;AAEA,gBAAM,gBAAgB,MAAM,MAAM,2CAA2C,cAAc,IAAI;AAAA,YAC7F,SAAS,EAAE,eAAe,UAAU,IAAI,iBAAiB,GAAG;AAAA,UAC9D,CAAC;AACD,cAAI,cAAc,IAAI;AACpB,kCAAsB,MAAM,cAAc,KAAK;AAC/C,oBAAQ,IAAI,kDAAkD,oBAAoB,MAAM;AAAA,UAC1F;AAAA,QACF;AAAA,MACF,SAAS,YAAY;AACnB,gBAAQ,IAAI,iCAAiC,YAAY,WAAW,UAAU;AAAA,MAChF;AAGA,eAAS,gBAAgB;AACzB,eAAS,mBAAkB,oBAAI,KAAK,GAAE,YAAY;AAClD,eAAS,gBAAgB;AACzB,YAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,IAAI,KAAK,UAAU,QAAQ,CAAC;AAEhF,YAAM,kBAAkB,KAAK,QAAQ;AAAA,QACnC;AAAA,QACA,eAAe,oBAAoB,WAAW,WAAW,WAAW,oBAAoB;AAAA,QACxF,iBAAiB,SAAS;AAAA,MAC5B,CAAC;AAED,UAAI;AACF,cAAM,WAAW;AAAA,UACf,IAAI,oBAAoB;AAAA,UACxB;AAAA,UACA,MAAM;AAAA,UACN,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,UAClC,QAAQ,oBAAoB;AAAA,UAC5B,UAAU,oBAAoB,YAAY;AAAA,UAC1C,QAAQ,oBAAoB,OAAO,OAAO,CAAC,GAAG,OAAO,eAAe;AAAA,UACpE,YAAY,oBAAoB,YAAY;AAAA,UAC5C,gBAAgB,oBAAoB;AAAA,UACpC,WAAW,oBAAoB,kBAAkB;AAAA,UACjD,iBAAiB;AAAA,UACjB;AAAA,UACA,oBAAoB,oBAAoB,wBAAwB;AAAA,UAChE,kBAAkB,oBAAoB,sBAAsB;AAAA,UAC5D,UAAU,oBAAoB,YAAY,CAAC;AAAA,QAC7C;AACA,cAAM,IAAI,mBAAmB,IAAI,WAAW,MAAM,IAAI,KAAK,UAAU,QAAQ,CAAC;AAAA,MAChF,SAAS,SAAS;AAChB,gBAAQ,KAAK,wDAAwD,OAAO;AAAA,MAC9E;AAEA,aAAO,0BAA0B,mBAAmB;AAAA,QAClD,SAAS;AAAA,QACT,QAAQ,oBAAoB;AAAA,MAC9B,CAAC,GAAG,MAAM;AAAA,IACZ,OAAO;AACL,YAAM,YAAY,MAAM,2BAA2B,KAAK;AACxD,cAAQ,MAAM,+BAA+B,SAAS;AACtD,cAAQ,MAAM,oBAAoB,2BAA2B,MAAM;AACnE,YAAM,IAAI,MAAM,oCAAoC,SAAS,EAAE;AAAA,IACjE;AAAA,EAEF,SAAS,OAAO;AACd,YAAQ,MAAM,4BAA4B,KAAK;AAC/C,YAAQ,MAAM,gBAAgB,MAAM,KAAK;AACzC,YAAQ,MAAM,kBAAkB;AAAA,MAC9B,SAAS,MAAM;AAAA,MACf,MAAM,MAAM;AAAA,MACZ,OAAO,MAAM;AAAA,IACf,CAAC;AACD,UAAM,gBAAgB,mBAAmB;AAAA,MACvC,OAAO,MAAM,WAAW;AAAA,MACxB,SAAS,MAAM;AAAA,IACjB,GAAG,GAAG;AACN,WAAO,0BAA0B,eAAe,MAAM;AAAA,EACxD;AACF;AAlOe;AAqOf,eAAe,8BAA8B,SAAS,KAAK;AACzD,QAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ;AAC3C,QAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,QAAM,iBAAiB,IAAI,aAAa,IAAI,IAAI;AAE9C,MAAI,CAAC,gBAAgB;AACnB,UAAM,gBAAgB,mBAAmB,EAAE,OAAO,0BAA0B,GAAG,GAAG;AAClF,WAAO,0BAA0B,eAAe,MAAM;AAAA,EACxD;AAEF,MAAI;AACF,UAAM,uBAAuB,MAAM,MAAM,2CAA2C,cAAc,IAAI;AAAA,MACpG,SAAS;AAAA,QACP,eAAe,UAAU,IAAI,iBAAiB;AAAA,MAChD;AAAA,IACF,CAAC;AAED,QAAI,CAAC,qBAAqB,IAAI;AAC5B,YAAM,YAAY,MAAM,qBAAqB,KAAK;AAClD,YAAM,IAAI,MAAM,oCAAoC,SAAS,EAAE;AAAA,IACjE;AAEA,UAAMA,gBAAe,MAAM,qBAAqB,KAAK;AAErD,WAAO,0BAA0B,mBAAmB;AAAA,MAClD,QAAQA,cAAa;AAAA,MACrB,gBAAgBA,cAAa;AAAA,MAC7B,oBAAoBA,cAAa;AAAA,MACjC,sBAAsBA,cAAa;AAAA,MACnC,sBAAsBA,cAAa;AAAA,MACnC,aAAaA,cAAa;AAAA,MAC1B,gBAAgB;AAAA,QACd,YAAYA,cAAa,WAAW;AAAA,QACpC,cAAcA,cAAa;AAAA,QAC3B,cAAcA,cAAa;AAAA,QAC3B,aAAaA,cAAa;AAAA,QAC1B,aAAaA,cAAa;AAAA,MAC5B;AAAA,IACF,CAAC,GAAG,MAAM;AAAA,EAEZ,SAAS,OAAO;AACd,YAAQ,MAAM,oCAAoC,KAAK;AACvD,UAAM,gBAAgB,mBAAmB;AAAA,MACvC,OAAO;AAAA,MACP,SAAS,MAAM;AAAA,IACjB,GAAG,GAAG;AACN,WAAO,0BAA0B,eAAe,MAAM;AAAA,EACxD;AACF;AAhDe;AAmDf,eAAe,0BAA0B,SAAS,KAAK;AACrD,QAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ;AAC3C,QAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,QAAM,iBAAiB,IAAI,aAAa,IAAI,IAAI;AAEhD,MAAI,CAAC,gBAAgB;AACnB,UAAM,gBAAgB,mBAAmB,EAAE,OAAO,0BAA0B,GAAG,GAAG;AAClF,WAAO,0BAA0B,eAAe,MAAM;AAAA,EACxD;AAEA,MAAI;AACF,UAAM,uBAAuB,MAAM,MAAM,2CAA2C,cAAc,IAAI;AAAA,MACpG,SAAS;AAAA,QACP,eAAe,UAAU,IAAI,iBAAiB;AAAA,MAChD;AAAA,IACF,CAAC;AAED,QAAI,CAAC,qBAAqB,IAAI;AAC5B,YAAM,YAAY,MAAM,qBAAqB,KAAK;AAClD,YAAM,IAAI,MAAM,oCAAoC,SAAS,EAAE;AAAA,IACjE;AAEA,UAAMA,gBAAe,MAAM,qBAAqB,KAAK;AAGrD,QAAI,WAAW;AACf,QAAIA,cAAa,SAASA,cAAa,MAAM,QAAQA,cAAa,MAAM,KAAK,SAAS,GAAG;AACvF,YAAM,UAAUA,cAAa,MAAM,KAAK,CAAC,EAAE,MAAM;AAEjD,UAAI,YAAY,oCAAoC,QAAQ,SAAS,QAAQ,GAAG;AAC9E,mBAAW;AAAA,MACb,WAAW,YAAY,oCAAoC,QAAQ,SAAS,SAAS,GAAG;AACtF,mBAAW;AAAA,MACb;AAAA,IACF;AAGA,UAAM,aAAa,IAAI,KAAKA,cAAa,qBAAqB,GAAI,EAAE,YAAY;AAEhF,WAAO,0BAA0B,mBAAmB;AAAA,MAClD;AAAA,MACA;AAAA,MACA,gBAAgBA,cAAa;AAAA,MAC7B,QAAQA,cAAa;AAAA,MACrB,oBAAoBA,cAAa;AAAA,MACjC,sBAAsBA,cAAa;AAAA,IACrC,CAAC,GAAG,MAAM;AAAA,EAEZ,SAAS,OAAO;AACd,YAAQ,MAAM,gCAAgC,KAAK;AACnD,UAAM,gBAAgB,mBAAmB;AAAA,MACvC,OAAO;AAAA,MACP,SAAS,MAAM;AAAA,IACjB,GAAG,GAAG;AACN,WAAO,0BAA0B,eAAe,MAAM;AAAA,EACxD;AACF;AAxDe;AA2Df,eAAe,mBAAmB,SAAS,KAAK;AAC9C,QAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ;AAE3C,MAAI;AAEF,UAAM,cAAc,MAAM,QAAQ,KAAK;AACvC,YAAQ,IAAI,+BAAwB,WAAW;AAC/C,YAAQ,IAAI,kCAA2B,YAAY,MAAM;AAEzD,QAAI;AACJ,QAAI;AACF,oBAAc,KAAK,MAAM,WAAW;AACpC,cAAQ,IAAI,kCAA2B,WAAW;AAAA,IACpD,SAAS,YAAY;AACnB,cAAQ,MAAM,+BAAwB,UAAU;AAChD,YAAM,gBAAgB,mBAAmB,EAAE,OAAO,+BAA+B,GAAG,GAAG;AACvF,aAAO,0BAA0B,eAAe,MAAM;AAAA,IACxD;AAEA,UAAM,EAAE,OAAO,WAAW,OAAO,IAAI;AAErC,YAAQ,IAAI,+BAAwB,EAAE,OAAO,WAAW,OAAO,CAAC;AAChE,YAAQ,IAAI,yBAAkB,OAAO,OAAO,gBAAgB,KAAK;AACjE,YAAQ,IAAI,0BAAmB,OAAO,QAAQ,iBAAiB,MAAM;AACrE,YAAQ,IAAI,6BAAsB,OAAO,WAAW,oBAAoB,SAAS;AAEjF,QAAI,CAAC,SAAS,CAAC,QAAQ;AACrB,cAAQ,MAAM,8CAAuC,CAAC,CAAC,OAAO,WAAW,CAAC,CAAC,MAAM;AACjF,YAAM,gBAAgB,mBAAmB,EAAE,OAAO,2BAA2B,SAAS,EAAE,OAAO,CAAC,CAAC,OAAO,QAAQ,CAAC,CAAC,OAAO,EAAE,GAAG,GAAG;AACjI,aAAO,0BAA0B,eAAe,MAAM;AAAA,IACxD;AAEA,YAAQ,IAAI,2BAA2B,EAAE,OAAO,WAAW,OAAO,CAAC;AAGnE,QAAI;AACJ,UAAM,4BAA4B,MAAM,MAAM,6CAA6C,mBAAmB,KAAK,CAAC,YAAY;AAAA,MAC9H,SAAS;AAAA,QACP,eAAe,UAAU,IAAI,iBAAiB;AAAA,MAChD;AAAA,IACF,CAAC;AAED,QAAI,0BAA0B,IAAI;AAChC,YAAM,oBAAoB,MAAM,0BAA0B,KAAK;AAC/D,UAAI,kBAAkB,KAAK,SAAS,GAAG;AACrC,mBAAW,kBAAkB,KAAK,CAAC;AACnC,gBAAQ,IAAI,4BAA4B,SAAS,EAAE;AAAA,MACrD;AAAA,IACF;AAEA,QAAI,CAAC,UAAU;AAEb,YAAM,eAAe,IAAI,gBAAgB;AACzC,mBAAa,OAAO,SAAS,KAAK;AAClC,mBAAa,OAAO,oBAAoB,MAAM;AAC9C,mBAAa,OAAO,oBAAoB,aAAa,EAAE;AAEvD,YAAM,mBAAmB,MAAM,MAAM,uCAAuC;AAAA,QAC1E,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,eAAe,UAAU,IAAI,iBAAiB;AAAA,UAC9C,gBAAgB;AAAA,QAClB;AAAA,QACA,MAAM;AAAA,MACR,CAAC;AAED,UAAI,CAAC,iBAAiB,IAAI;AACxB,cAAM,YAAY,MAAM,iBAAiB,KAAK;AAC9C,cAAM,IAAI,MAAM,8BAA8B,SAAS,EAAE;AAAA,MAC3D;AAEA,iBAAW,MAAM,iBAAiB,KAAK;AACvC,cAAQ,IAAI,yBAAyB,SAAS,EAAE;AAAA,IAClD;AAGA,UAAM,kBAAkB,IAAI,gBAAgB;AAC5C,oBAAgB,OAAO,YAAY,SAAS,EAAE;AAC9C,oBAAgB,OAAO,0BAA0B,MAAM;AACvD,oBAAgB,OAAO,SAAS,aAAa;AAC7C,oBAAgB,OAAO,oBAAoB,MAAM;AACjD,oBAAgB,OAAO,mBAAmB,KAAK;AAC/C,oBAAgB,OAAO,oBAAoB,aAAa,EAAE;AAE1D,UAAM,sBAAsB,MAAM,MAAM,2CAA2C;AAAA,MACjF,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,eAAe,UAAU,IAAI,iBAAiB;AAAA,QAC9C,gBAAgB;AAAA,MAClB;AAAA,MACA,MAAM;AAAA,IACR,CAAC;AAED,QAAI,CAAC,oBAAoB,IAAI;AAC3B,YAAM,YAAY,MAAM,oBAAoB,KAAK;AACjD,YAAM,IAAI,MAAM,kCAAkC,SAAS,EAAE;AAAA,IAC/D;AAEA,UAAM,cAAc,MAAM,oBAAoB,KAAK;AACnD,YAAQ,IAAI,yBAAyB,YAAY,EAAE;AAEnD,WAAO,0BAA0B,mBAAmB;AAAA,MAClD,eAAe,YAAY;AAAA,MAC3B,cAAc,YAAY;AAAA,MAC1B,YAAY,SAAS;AAAA,IACvB,CAAC,GAAG,MAAM;AAAA,EAEZ,SAAS,OAAO;AACd,YAAQ,MAAM,wBAAwB,KAAK;AAC3C,UAAM,gBAAgB,mBAAmB;AAAA,MACvC,OAAO;AAAA,MACP,SAAS,MAAM;AAAA,IACjB,GAAG,GAAG;AACN,WAAO,0BAA0B,eAAe,MAAM;AAAA,EACxD;AACF;AAnHe;AAsHf,eAAe,0BAA0B,SAAS,KAAK;AACrD,QAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ;AAE3C,MAAI;AACF,UAAM,EAAE,cAAc,IAAI,MAAM,QAAQ,KAAK;AAE7C,QAAI,CAAC,eAAe;AAClB,YAAM,gBAAgB,mBAAmB,EAAE,OAAO,wBAAwB,GAAG,GAAG;AAChF,aAAO,0BAA0B,eAAe,MAAM;AAAA,IACxD;AAEA,YAAQ,IAAI,8CAA8C,aAAa;AAGvE,UAAM,sBAAsB,MAAM,MAAM,2CAA2C,aAAa,IAAI;AAAA,MAClG,SAAS;AAAA,QACP,eAAe,UAAU,IAAI,iBAAiB;AAAA,MAChD;AAAA,IACF,CAAC;AAED,QAAI,CAAC,oBAAoB,IAAI;AAC3B,YAAM,YAAY,MAAM,oBAAoB,KAAK;AACjD,YAAM,IAAI,MAAM,oCAAoC,SAAS,EAAE;AAAA,IACjE;AAEA,UAAM,cAAc,MAAM,oBAAoB,KAAK;AACnD,YAAQ,IAAI,wBAAwB,YAAY,MAAM;AAEtD,QAAI,YAAY,WAAW,aAAa;AACtC,YAAM,gBAAgB,mBAAmB;AAAA,QACvC,OAAO;AAAA,QACP,SAAS,mBAAmB,YAAY,MAAM;AAAA,MAChD,GAAG,GAAG;AACN,aAAO,0BAA0B,eAAe,MAAM;AAAA,IACxD;AAEA,QAAI,CAAC,YAAY,gBAAgB;AAC/B,YAAM,gBAAgB,mBAAmB;AAAA,QACvC,OAAO;AAAA,QACP,SAAS;AAAA,MACX,GAAG,GAAG;AACN,aAAO,0BAA0B,eAAe,MAAM;AAAA,IACxD;AAGA,UAAM,kBAAkB,YAAY;AACpC,UAAMD,cAAa,YAAY;AAE/B,YAAQ,IAAI,4BAA4B,eAAe;AACvD,YAAQ,IAAI,gBAAgBA,WAAU;AAGtC,UAAM,qBAAqB,IAAI,gBAAgB;AAC/C,uBAAmB,OAAO,4CAA4C,eAAe;AAErF,UAAM,yBAAyB,MAAM,MAAM,uCAAuCA,WAAU,IAAI;AAAA,MAC9F,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,eAAe,UAAU,IAAI,iBAAiB;AAAA,QAC9C,gBAAgB;AAAA,MAClB;AAAA,MACA,MAAM;AAAA,IACR,CAAC;AAED,QAAI,CAAC,uBAAuB,IAAI;AAC9B,YAAM,YAAY,MAAM,uBAAuB,KAAK;AACpD,cAAQ,KAAK,yCAAyC,SAAS;AAAA,IACjE,OAAO;AACL,cAAQ,IAAI,yCAAyC;AAAA,IACvD;AAGA,UAAM,mBAAmB,MAAM,MAAM,uCAAuCA,WAAU,IAAI;AAAA,MACxF,SAAS;AAAA,QACP,eAAe,UAAU,IAAI,iBAAiB;AAAA,MAChD;AAAA,IACF,CAAC;AAED,QAAI,eAAe;AACnB,QAAI,iBAAiB,IAAI;AACvB,YAAM,WAAW,MAAM,iBAAiB,KAAK;AAC7C,qBAAe,SAAS,kBAAkB,2BAA2B;AACrE,cAAQ,IAAI,wCAAwC,YAAY;AAAA,IAClE;AAEA,WAAO,0BAA0B,mBAAmB;AAAA,MAClD,SAAS;AAAA,MACT;AAAA,MACA,YAAYA;AAAA,MACZ,2BAA2B;AAAA,IAC7B,CAAC,GAAG,MAAM;AAAA,EAEZ,SAAS,OAAO;AACd,YAAQ,MAAM,sCAAsC,KAAK;AACzD,UAAM,gBAAgB,mBAAmB;AAAA,MACvC,OAAO;AAAA,MACP,SAAS,MAAM;AAAA,IACjB,GAAG,GAAG;AACN,WAAO,0BAA0B,eAAe,MAAM;AAAA,EACxD;AACF;AApGe;AAuGf,eAAe,yBAAyB,SAAS,KAAK;AACpD,QAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ;AAC3C,QAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,QAAM,SAAS,IAAI,aAAa,IAAI,QAAQ;AAC5C,QAAM,SAAS,IAAI,aAAa,IAAI,QAAQ;AAE5C,MAAI;AACF,YAAQ,IAAI,uCAAuC,QAAQ,WAAW,MAAM;AAE5E,QAAI,CAAC,QAAQ;AACX,YAAM,gBAAgB,mBAAmB,EAAE,OAAO,2BAA2B,GAAG,GAAG;AACnF,aAAO,0BAA0B,eAAe,MAAM;AAAA,IACxD;AAGA,UAAM,kBAAkB,OAAO,SAAS,aAAa,KAC9B,OAAO,SAAS,cAAc,KAC9B,OAAO,SAAS,WAAW,KAC3B,OAAO,SAAS,WAAW,KAC3B,OAAO,SAAS,SAAS;AAEhD,QAAI,iBAAiB;AACnB,cAAQ,IAAI,6CAA6C,MAAM;AAC/D,aAAO,0BAA0B,mBAAmB;AAAA,QAClD,WAAW;AAAA,QACX,WAAW;AAAA,QACX,QAAQ;AAAA,MACV,CAAC,GAAG,MAAM;AAAA,IACZ;AAGA,QAAI,cAAc;AAGlB,QAAI,QAAQ;AACV,YAAM,gBAAgB,MAAM,IAAI,mBAAmB,IAAI,WAAW,MAAM,EAAE;AAC1E,UAAI,eAAe;AACjB,sBAAc,KAAK,MAAM,aAAa;AACtC,gBAAQ,IAAI,iCAAiC,WAAW;AAAA,MAC1D;AAAA,IACF;AAGA,QAAI,CAAC,aAAa;AAChB,YAAM,YAAY,UAAU,MAAM;AAClC,YAAM,aAAa,MAAM,IAAI,mBAAmB,IAAI,SAAS;AAC7D,UAAI,YAAY;AACd,cAAM,aAAa,KAAK,MAAM,UAAU;AACxC,cAAM,mBAAmB,WAAW;AACpC,YAAI,kBAAkB;AACpB,gBAAM,gBAAgB,MAAM,IAAI,mBAAmB,IAAI,WAAW,gBAAgB,EAAE;AACpF,cAAI,eAAe;AACjB,0BAAc,KAAK,MAAM,aAAa;AACtC,oBAAQ,IAAI,wCAAwC,WAAW;AAAA,UACjE;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,QAAI,CAAC,aAAa;AAChB,cAAQ,IAAI,qCAAqC,MAAM;AACvD,aAAO,0BAA0B,mBAAmB;AAAA,QAClD,WAAW;AAAA,QACX,WAAW;AAAA,QACX,QAAQ;AAAA,QACR,iBAAiB;AAAA,MACnB,CAAC,GAAG,MAAM;AAAA,IACZ;AAGA,UAAM,OAAM,oBAAI,KAAK,GAAE,QAAQ;AAC/B,UAAM,mBAAmB,YAAY;AAGrC,QAAI,WAAW;AACf,QAAI,YAAY,WAAW,UAAU;AACnC,UAAI,kBAAkB;AAEpB,cAAM,cAAc,mBAAmB,OAAgB,mBAAmB,mBAAmB;AAC7F,mBAAW,MAAM;AACjB,gBAAQ,IAAI,uBAAuB;AAAA,UACjC,QAAQ,YAAY;AAAA,UACpB;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH,OAAO;AAEL,mBAAW;AACX,gBAAQ,IAAI,+DAA+D,YAAY,MAAM;AAAA,MAC/F;AAAA,IACF;AAIA,QAAI,CAAC,YAAY,YAAY,WAAW,YAAY,CAAC,kBAAkB;AACrE,YAAM,mBAAmB,IAAI,KAAK,YAAY,SAAS;AACvD,YAAM,gBAAgB,IAAI,KAAK,MAAM,KAAK,KAAK,KAAK,KAAK,GAAI;AAC7D,UAAI,mBAAmB,eAAe;AACpC,mBAAW;AACX,gBAAQ,IAAI,8EAA8E;AAAA,MAC5F;AAAA,IACF;AAEA,QAAI,UAAU;AACZ,cAAQ,IAAI,iCAAiC,MAAM;AACnD,aAAO,0BAA0B,mBAAmB;AAAA,QAClD,WAAW;AAAA,QACX,WAAW;AAAA,QACX,QAAQ;AAAA,QACR,eAAe,YAAY;AAAA,QAC3B,YAAY,IAAI,KAAK,mBAAmB,GAAI,EAAE,YAAY;AAAA,QAC1D,gBAAgB,YAAY;AAAA,MAC9B,CAAC,GAAG,MAAM;AAAA,IACZ,OAAO;AACL,cAAQ,IAAI,qCAAqC,QAAQ,WAAW,YAAY,MAAM;AACtF,aAAO,0BAA0B,mBAAmB;AAAA,QAClD,WAAW;AAAA,QACX,WAAW;AAAA,QACX,QAAQ;AAAA,QACR,eAAe,YAAY;AAAA,QAC3B,YAAY,mBAAmB,IAAI,KAAK,mBAAmB,GAAI,EAAE,YAAY,IAAI;AAAA,QACjF,iBAAiB;AAAA,MACnB,CAAC,GAAG,MAAM;AAAA,IACZ;AAAA,EAEF,SAAS,OAAO;AACd,YAAQ,MAAM,+BAA+B,KAAK;AAClD,UAAM,gBAAgB,mBAAmB;AAAA,MACvC,OAAO;AAAA,MACP,SAAS,MAAM;AAAA,IACjB,GAAG,GAAG;AACN,WAAO,0BAA0B,eAAe,MAAM;AAAA,EACxD;AACF;AAvIe;AA0If,eAAe,mBAAmB,SAAS,KAAK;AAC9C,QAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ;AAC3C,QAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,QAAM,SAAS,IAAI,aAAa,IAAI,QAAQ;AAC5C,QAAM,SAAS,IAAI,aAAa,IAAI,QAAQ;AAE5C,MAAI;AACF,YAAQ,IAAI,uCAAuC,QAAQ,WAAW,MAAM;AAG5E,UAAM,gBAAgB,UAAU,QAAQ,QAAQ,IAAI,SAAS,KAAK;AAGlE,UAAM,kBAAkB,cAAc,SAAS,aAAa,KACrC,cAAc,SAAS,cAAc,KACrC,cAAc,SAAS,WAAW,KAClC,cAAc,SAAS,WAAW,KAClC,cAAc,SAAS,SAAS;AAEvD,QAAI,iBAAiB;AACnB,cAAQ,IAAI,mDAAmD,aAAa;AAC5E,aAAO,IAAI,SAAS,gBAAgB,IAAI,GAAG;AAAA,QACzC,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,+BAA+B;AAAA,UAC/B,iBAAiB;AAAA,QACnB;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,cAAc;AAGlB,QAAI,QAAQ;AACV,YAAM,gBAAgB,MAAM,IAAI,mBAAmB,IAAI,WAAW,MAAM,EAAE;AAC1E,UAAI,eAAe;AACjB,sBAAc,KAAK,MAAM,aAAa;AACtC,gBAAQ,IAAI,iCAAiC,WAAW;AAAA,MAC1D;AAAA,IACF;AAGA,QAAI,CAAC,aAAa;AAChB,YAAM,YAAY,UAAU,aAAa;AACzC,YAAM,aAAa,MAAM,IAAI,mBAAmB,IAAI,SAAS;AAC7D,UAAI,YAAY;AACd,cAAM,aAAa,KAAK,MAAM,UAAU;AACxC,cAAM,mBAAmB,WAAW;AACpC,YAAI,kBAAkB;AACpB,gBAAM,gBAAgB,MAAM,IAAI,mBAAmB,IAAI,WAAW,gBAAgB,EAAE;AACpF,cAAI,eAAe;AACjB,0BAAc,KAAK,MAAM,aAAa;AACtC,oBAAQ,IAAI,wCAAwC,WAAW;AAAA,UACjE;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,QAAI,CAAC,aAAa;AAChB,cAAQ,IAAI,qCAAqC,aAAa;AAC9D,aAAO,IAAI,SAAS,gBAAgB,OAAO,kCAAkC,GAAG;AAAA,QAC9E,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,+BAA+B;AAAA,UAC/B,iBAAiB;AAAA,QACnB;AAAA,MACF,CAAC;AAAA,IACH;AAGA,UAAM,OAAM,oBAAI,KAAK,GAAE,QAAQ;AAC/B,UAAM,mBAAmB,YAAY;AAGrC,QAAI,WAAW;AACf,QAAI,YAAY,WAAW,UAAU;AACnC,UAAI,kBAAkB;AAEpB,cAAM,cAAc,mBAAmB,OAAgB,mBAAmB,mBAAmB;AAC7F,mBAAW,MAAM;AACjB,gBAAQ,IAAI,uBAAuB;AAAA,UACjC,QAAQ,YAAY;AAAA,UACpB;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH,OAAO;AAEL,mBAAW;AACX,gBAAQ,IAAI,+DAA+D,YAAY,MAAM;AAAA,MAC/F;AAAA,IACF;AAIA,QAAI,CAAC,YAAY,YAAY,WAAW,YAAY,CAAC,kBAAkB;AACrE,YAAM,mBAAmB,IAAI,KAAK,YAAY,SAAS;AACvD,YAAM,gBAAgB,IAAI,KAAK,MAAM,KAAK,KAAK,KAAK,KAAK,GAAI;AAC7D,UAAI,mBAAmB,eAAe;AACpC,mBAAW;AACX,gBAAQ,IAAI,8EAA8E;AAAA,MAC5F;AAAA,IACF;AAEA,QAAI,UAAU;AACZ,cAAQ,IAAI,iCAAiC,aAAa;AAC1D,aAAO,IAAI,SAAS,gBAAgB,IAAI,GAAG;AAAA,QACzC,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,+BAA+B;AAAA,UAC/B,iBAAiB;AAAA,QACnB;AAAA,MACF,CAAC;AAAA,IACH,OAAO;AACL,cAAQ,IAAI,qCAAqC,eAAe,WAAW,YAAY,MAAM;AAC7F,YAAM,SAAS,YAAY,WAAW,WAAW,oBAAoB;AACrE,aAAO,IAAI,SAAS,gBAAgB,OAAO,MAAM,GAAG;AAAA,QAClD,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,+BAA+B;AAAA,UAC/B,iBAAiB;AAAA,QACnB;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EAEF,SAAS,OAAO;AACd,YAAQ,MAAM,wBAAwB,KAAK;AAC3C,WAAO,IAAI,SAAS,gBAAgB,OAAO,+BAA+B,GAAG;AAAA,MAC3E,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,+BAA+B;AAAA,QAC/B,iBAAiB;AAAA,MACnB;AAAA,IACF,CAAC;AAAA,EACH;AACF;AAzIe;AA4If,SAAS,gBAAgB,WAAW,SAAS,IAAI;AAC/C,MAAI,WAAW;AAEbmJT,OAAO;AAEL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA,yBAKc,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA6C7B;AACF;AA3MS;AA8MT,eAAe,yBAAyB,SAAS,KAAK;AACpD,QAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ;AAE3C,MAAI;AACF,UAAM,EAAE,gBAAgB,QAAQ,oBAAoB,KAAK,IAAI,MAAM,QAAQ,KAAK;AAEhF,QAAI,sBAAsB;AAG1B,QAAI,CAAC,uBAAuB,QAAQ;AAClC,cAAQ,IAAI,uDAAuD,MAAM;AAGzE,YAAM,cAAc,MAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,EAAE;AAC1E,UAAI,aAAa;AACf,cAAM,WAAW,KAAK,MAAM,WAAW;AACvC,8BAAsB,SAAS;AAC/B,gBAAQ,IAAI,sCAAsC,mBAAmB;AACrE,gBAAQ,IAAI,mBAAmB,QAAQ;AAAA,MACzC;AAGA,UAAI,CAAC,qBAAqB;AACxB,cAAM,qBAAqB,MAAM,IAAI,mBAAmB,IAAI,WAAW,MAAM,EAAE;AAC/E,YAAI,oBAAoB;AACtB,gBAAM,kBAAkB,KAAK,MAAM,kBAAkB;AACrD,gCAAsB,gBAAgB;AACtC,kBAAQ,IAAI,6CAA6C,mBAAmB;AAAA,QAC9E;AAAA,MACF;AAAA,IACF;AAEA,QAAI,CAAC,qBAAqB;AACxB,YAAM,gBAAgB,mBAAmB,EAAE,OAAO,0BAA0B,GAAG,GAAG;AAClF,aAAO,0BAA0B,eAAe,MAAM;AAAA,IACxD;AAEA,YAAQ,IAAI,gCAAgC,EAAE,gBAAgB,qBAAqB,QAAQ,kBAAkB,CAAC;AAC9G,YAAQ,IAAI,kDAAkD,mBAAmB;AAEjF,QAAIC;AAEJ,QAAI,mBAAmB;AAGrB,cAAQ,IAAI,sCAAsC;AAClD,YAAM,uBAAuB,MAAM,MAAM,2CAA2C,mBAAmB,IAAI;AAAA,QAC3G,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,eAAe,UAAU,IAAI,iBAAiB;AAAA,UAC9C,gBAAgB;AAAA,QAClB;AAAA,QACA,MAAM,IAAI,gBAAgB;AAAA,UACxB,sBAAsB;AAAA,QACxB,CAAC;AAAA,MACH,CAAC;AAED,UAAI,CAAC,qBAAqB,IAAI;AAC5B,cAAM,YAAY,MAAM,qBAAqB,KAAK;AAChD,gBAAQ,MAAM,kCAAkC,SAAS;AAC3D,cAAM,IAAI,MAAM,kCAAkC,SAAS,EAAE;AAAA,MAC/D;AAEE,MAAAA,gBAAe,MAAM,qBAAqB,KAAK;AAC/C,cAAQ,IAAI,8CAA8CA,aAAY;AAAA,IACxE,OAAO;AAGL,cAAQ,IAAI,oCAAoC;AAChD,YAAM,uBAAuB,MAAM,MAAM,2CAA2C,mBAAmB,IAAI;AAAA,QACzG,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,eAAe,UAAU,IAAI,iBAAiB;AAAA,QAChD;AAAA,MACF,CAAC;AAED,UAAI,CAAC,qBAAqB,IAAI;AAC5B,cAAM,YAAY,MAAM,qBAAqB,KAAK;AAClD,gBAAQ,MAAM,iCAAiC,SAAS;AACxD,cAAM,IAAI,MAAM,kCAAkC,SAAS,EAAE;AAAA,MAC/D;AAEA,MAAAA,gBAAe,MAAM,qBAAqB,KAAK;AAC/C,cAAQ,IAAI,6CAA6CA,aAAY;AAAA,IACvE;AAGA,QAAI,QAAQ;AACV,cAAQ,IAAI,uCAAuC,EAAE,QAAQ,kBAAkB,CAAC;AAGhF,YAAM,cAAc,MAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,EAAE;AAC1E,UAAI,aAAa;AACf,cAAM,WAAW,KAAK,MAAM,WAAW;AACvC,iBAAS,gBAAgB,oBAAoB,cAAc;AAC3D,iBAAS,oBAAoBA,cAAa;AAC1C,iBAAS,mBAAmBA,cAAa;AACzC,iBAAS,eAAc,oBAAI,KAAK,GAAE,YAAY;AAC9C,iBAAS,oBAAmB,oBAAI,KAAK,GAAE,YAAY;AACnD,iBAAS,eAAc,oBAAI,KAAK,GAAE,YAAY;AAE9C,cAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,IAAI,KAAK,UAAU,QAAQ,CAAC;AAChF,gBAAQ,IAAI,sDAAsD;AAAA,MACpE;AAGA,YAAM,qBAAqB,MAAM,IAAI,mBAAmB,IAAI,WAAW,MAAM,EAAE;AAC/E,UAAI,oBAAoB;AACtB,cAAM,kBAAkB,KAAK,MAAM,kBAAkB;AACrD,wBAAgB,SAAS,oBAAoB,cAAc;AAC3D,wBAAgB,oBAAoBA,cAAa;AACjD,wBAAgB,mBAAmBA,cAAa;AAChD,wBAAgB,oBAAmB,oBAAI,KAAK,GAAE,YAAY;AAC1D,wBAAgB,eAAc,oBAAI,KAAK,GAAE,YAAY;AACrD,wBAAgB,eAAc,oBAAI,KAAK,GAAE,YAAY;AAErD,cAAM,IAAI,mBAAmB,IAAI,WAAW,MAAM,IAAI,KAAK,UAAU,eAAe,CAAC;AACrF,gBAAQ,IAAI,oDAAoD;AAAA,MAClE;AAGE,YAAM,kBAAkB,KAAK,QAAQ;AAAA,QACnC;AAAA,QACF,eAAe,oBAAoB,cAAc;AAAA,QAC/C,mBAAmBA,cAAa;AAAA,QAChC,kBAAkBA,cAAa;AAAA,QACjC,mBAAkB,oBAAI,KAAK,GAAE,YAAY;AAAA,QACzC,cAAa,oBAAI,KAAK,GAAE,YAAY;AAAA,MACpC,CAAC;AACH,cAAQ,IAAI,gDAAgD;AAAA,IAC9D;AAEA,UAAM,kBAAkB,mBAAmB;AAAA,MACzC,SAAS;AAAA,MACT,cAAc;AAAA,QACZ,IAAIA,cAAa;AAAA,QACjB,QAAQA,cAAa;AAAA,QACrB,sBAAsBA,cAAa;AAAA,QACnC,oBAAoBA,cAAa;AAAA,QACjC,aAAaA,cAAa;AAAA,QAC1B,gBAAgB;AAAA,UACd,YAAYA,cAAa,WAAW;AAAA,UACpC,cAAcA,cAAa;AAAA,UAC3B,cAAcA,cAAa;AAAA,UAC3B,aAAaA,cAAa;AAAA,UAC1B,aAAaA,cAAa;AAAA,QAC5B;AAAA,MACF;AAAA,MACA,SAAS,oBACL,2EACA;AAAA,IACN,CAAC;AACD,WAAO,0BAA0B,iBAAiB,MAAM;AAAA,EAE1D,SAAS,OAAO;AACd,YAAQ,MAAM,8BAA8B,KAAK;AACjD,UAAM,gBAAgB,mBAAmB;AAAA,MACvC,SAAS;AAAA,MACT,OAAO;AAAA,MACP,SAAS,MAAM;AAAA,IACjB,GAAG,GAAG;AACN,WAAO,0BAA0B,eAAe,MAAM;AAAA,EACxD;AACF;AAnKe;AAsKf,eAAe,4BAA4B,SAAS,KAAK;AACvD,QAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ;AAE3C,MAAI;AACF,UAAM,EAAE,OAAO,IAAI,MAAM,QAAQ,KAAK;AAEtC,QAAI,CAAC,QAAQ;AACX,YAAM,gBAAgB,mBAAmB,EAAE,OAAO,kBAAkB,GAAG,GAAG;AAC1E,aAAO,0BAA0B,eAAe,MAAM;AAAA,IACxD;AAGA,UAAM,cAAc,MAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,EAAE;AAC1E,QAAI,CAAC,aAAa;AAChB,YAAM,gBAAgB,mBAAmB,EAAE,OAAO,sCAAsC,GAAG,GAAG;AAC9F,aAAO,0BAA0B,eAAe,MAAM;AAAA,IACxD;AAEA,UAAM,WAAW,KAAK,MAAM,WAAW;AACvC,YAAQ,IAAI,yCAAkC;AAAA,MAC5C,gBAAgB,SAAS;AAAA,MACzB,eAAe,SAAS;AAAA,MACxB,kBAAkB,SAAS;AAAA,IAC7B,CAAC;AAGD,QAAI,sBAAsB;AAC1B,QAAI,SAAS,gBAAgB;AAC3B,cAAQ,IAAI,oDAA6C,SAAS,cAAc;AAChF,UAAI;AACF,cAAM,uBAAuB,MAAM,MAAM,2CAA2C,SAAS,cAAc,IAAI;AAAA,UAC7G,SAAS;AAAA,YACP,eAAe,UAAU,IAAI,iBAAiB;AAAA,UAChD;AAAA,QACF,CAAC;AAED,gBAAQ,IAAI,kDAA2C,qBAAqB,MAAM;AAElF,YAAI,qBAAqB,IAAI;AAC3B,gCAAsB,MAAM,qBAAqB,KAAK;AAGtD,gBAAM,mBAAmB,oBAAoB,SACrB,oBAAoB,MAAM,QAC1B,oBAAoB,MAAM,KAAK,SAAS,IACxC,oBAAoB,MAAM,KAAK,CAAC,EAAE,qBAAqB;AAE/E,kBAAQ,IAAI,mDAA4C;AAAA,YACtD,IAAI,oBAAoB;AAAA,YACxB,oBAAoB;AAAA,YACpB,sBAAsB,oBAAoB,OAAO,OAAO,CAAC,GAAG;AAAA,YAC5D,QAAQ,oBAAoB;AAAA,YAC5B,SAAS,oBAAoB;AAAA,YAC7B,sBAAsB,oBAAoB;AAAA,UAC5C,CAAC;AAGD,cAAI,kBAAkB;AACpB,gCAAoB,qBAAqB;AACzC,oBAAQ,IAAI,uEAAgE,gBAAgB;AAAA,UAC9F,OAAO;AACL,oBAAQ,MAAM,qEAA8D;AAAA,UAC9E;AAAA,QACF,OAAO;AACL,gBAAM,YAAY,MAAM,qBAAqB,KAAK;AAClD,kBAAQ,MAAM,wCAAiC,qBAAqB,QAAQ,SAAS;AAAA,QACvF;AAAA,MACF,SAAS,OAAO;AACd,gBAAQ,MAAM,wEAAiE,KAAK;AAAA,MACtF;AAAA,IACF,OAAO;AACL,cAAQ,IAAI,0DAAmD;AAAA,IACjE;AAEA,UAAM,kBAAkB,mBAAmB;AAAA,MACzC,SAAS;AAAA,MACT,cAAc;AAAA,QACZ,IAAI,SAAS;AAAA,QACb,QAAQ,SAAS;AAAA,QACjB,mBAAmB,SAAS,qBAAqB;AAAA,QACjD,kBAAkB,SAAS;AAAA,QAC3B,iBAAiB,SAAS;AAAA,QAC1B,oBAAoB,sBAAsB,oBAAoB,qBAAqB,SAAS;AAAA,QAC5F,SAAS;AAAA,MACX;AAAA,IACF,CAAC;AAED,YAAQ,IAAI,mDAA4C;AAAA,MACtD,IAAI,SAAS;AAAA,MACb,QAAQ,SAAS;AAAA,MACjB,kBAAkB,SAAS;AAAA,MAC3B,oBAAoB,sBAAsB,oBAAoB,qBAAqB,SAAS;AAAA,MAC5F,SAAS,sBAAsB;AAAA,QAC7B,oBAAoB,oBAAoB;AAAA,QACxC,QAAQ,oBAAoB;AAAA,MAC9B,IAAI;AAAA,IACN,CAAC;AACD,WAAO,0BAA0B,iBAAiB,MAAM;AAAA,EAE1D,SAAS,OAAO;AACd,YAAQ,MAAM,kCAAkC,KAAK;AACrD,UAAM,gBAAgB,mBAAmB;AAAA,MACvC,OAAO;AAAA,MACP,SAAS,MAAM;AAAA,IACjB,GAAG,GAAG;AACN,WAAO,0BAA0B,eAAe,MAAM;AAAA,EACxD;AACF;AA3Ge;AA6Gf,eAAe,iCAAiC,SAAS,KAAK;AAC5D,QAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ;AAE3C,MAAI;AACF,UAAM,EAAE,QAAQ,gBAAgB,SAAS,IAAI,MAAM,QAAQ,KAAK;AAEhE,QAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,UAAU;AAC3C,YAAM,gBAAgB,mBAAmB,EAAE,OAAO,0BAA0B,GAAG,GAAG;AAClF,aAAO,0BAA0B,eAAe,MAAM;AAAA,IACxD;AAEA,YAAQ,IAAI,mCAAmC,EAAE,QAAQ,gBAAgB,SAAS,CAAC;AAGnF,UAAM,+BAA+B,MAAM,MAAM,2CAA2C,cAAc,IAAI;AAAA,MAC5G,SAAS;AAAA,QACP,eAAe,UAAU,IAAI,iBAAiB;AAAA,MAChD;AAAA,IACF,CAAC;AAED,QAAI,CAAC,6BAA6B,IAAI;AACpC,YAAM,YAAY,MAAM,6BAA6B,KAAK;AAC1D,cAAQ,MAAM,6CAA6C,SAAS;AACpE,YAAM,gBAAgB,mBAAmB;AAAA,QACvC,OAAO;AAAA,QACP,SAAS;AAAA,MACX,GAAG,GAAG;AACN,aAAO,0BAA0B,eAAe,MAAM;AAAA,IACxD;AAEA,UAAM,uBAAuB,MAAM,6BAA6B,KAAK;AACrE,UAAM,mBAAmB,qBAAqB,YAAY,CAAC;AAG3D,UAAM,iBAAiB;AAAA,MACrB,GAAG;AAAA,MACH,GAAG;AAAA,MACH,aAAY,oBAAI,KAAK,GAAE,YAAY;AAAA,IACrC;AAEA,YAAQ,IAAI,oBAAoB,cAAc;AAI9C,UAAM,WAAW,IAAI,gBAAgB;AACrC,WAAO,QAAQ,cAAc,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAM;AACvD,eAAS,OAAO,YAAY,GAAG,KAAK,KAAK;AAAA,IAC3C,CAAC;AAED,UAAM,iBAAiB,MAAM,MAAM,2CAA2C,cAAc,IAAI;AAAA,MAC9F,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,iBAAiB,UAAU,IAAI,iBAAiB;AAAA,QAChD,gBAAgB;AAAA,MAClB;AAAA,MACA,MAAM;AAAA,IACR,CAAC;AAED,QAAI,CAAC,eAAe,IAAI;AACtB,YAAM,YAAY,MAAM,eAAe,KAAK;AAC5C,cAAQ,MAAM,2CAA2C,SAAS;AAClE,YAAM,gBAAgB,mBAAmB;AAAA,QACvC,OAAO;AAAA,QACP,SAAS;AAAA,MACX,GAAG,GAAG;AACN,aAAO,0BAA0B,eAAe,MAAM;AAAA,IACxD;AAEA,UAAM,sBAAsB,MAAM,eAAe,KAAK;AACtD,YAAQ,IAAI,+CAA+C,oBAAoB,QAAQ;AAGvF,QAAI;AACF,YAAM,cAAc,MAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,EAAE;AAC1E,UAAI,aAAa;AACf,cAAM,WAAW,KAAK,MAAM,WAAW;AACvC,iBAAS,SAAS,SAAS,UAAU,SAAS;AAC9C,iBAAS,eAAc,oBAAI,KAAK,GAAE,YAAY;AAC9C,cAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,IAAI,KAAK,UAAU,QAAQ,CAAC;AAChF,gBAAQ,IAAI,sCAAsC,SAAS,MAAM;AAAA,MACnE;AAGA,YAAM,qBAAqB,MAAM,IAAI,mBAAmB,IAAI,WAAW,MAAM,EAAE;AAC/E,UAAI,oBAAoB;AACtB,cAAM,kBAAkB,KAAK,MAAM,kBAAkB;AACrD,wBAAgB,WAAW;AAC3B,wBAAgB,eAAc,oBAAI,KAAK,GAAE,YAAY;AACrD,cAAM,IAAI,mBAAmB,IAAI,WAAW,MAAM,IAAI,KAAK,UAAU,eAAe,CAAC;AACrF,gBAAQ,IAAI,4CAA4C;AAAA,MAC1D;AAGA,UAAI,SAAS,QAAQ;AACnB,cAAM,YAAY,UAAU,SAAS,MAAM;AAC3C,cAAM,IAAI,mBAAmB,IAAI,WAAW,KAAK,UAAU;AAAA,UACzD;AAAA,UACA,QAAQ,SAAS;AAAA,UACjB,cAAa,oBAAI,KAAK,GAAE,YAAY;AAAA,UACpC,cAAa,oBAAI,KAAK,GAAE,YAAY;AAAA,QACtC,CAAC,GAAG,EAAE,eAAe,QAAQ,GAAG,CAAC;AACjC,gBAAQ,IAAI,+BAA+B,SAAS,MAAM;AAAA,MAC5D;AAAA,IAEF,SAAS,SAAS;AAChB,cAAQ,KAAK,8BAA8B,OAAO;AAAA,IAEpD;AAEA,UAAM,kBAAkB,mBAAmB;AAAA,MACzC,SAAS;AAAA,MACT,cAAc;AAAA,QACZ,IAAI,oBAAoB;AAAA,QACxB,UAAU,oBAAoB;AAAA,MAChC;AAAA,IACF,CAAC;AACD,WAAO,0BAA0B,iBAAiB,MAAM;AAAA,EAE1D,SAAS,OAAO;AACd,YAAQ,MAAM,uCAAuC,KAAK;AAC1D,UAAM,gBAAgB,mBAAmB;AAAA,MACvC,OAAO;AAAA,MACP,SAAS,MAAM;AAAA,IACjB,GAAG,GAAG;AACN,WAAO,0BAA0B,eAAe,MAAM;AAAA,EACxD;AACF;AA9He;AAgIf,eAAe,uBAAuB,SAAS,KAAK;AAClD,QAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ;AAE3C,MAAI;AACF,UAAM,EAAE,QAAQ,OAAO,IAAI,MAAM,QAAQ,KAAK;AAE9C,QAAI,CAAC,UAAU,CAAC,QAAQ;AACtB,YAAM,gBAAgB,mBAAmB,EAAE,OAAO,2BAA2B,GAAG,GAAG;AACnF,aAAO,0BAA0B,eAAe,MAAM;AAAA,IACxD;AAEA,YAAQ,IAAI,8BAA8B,QAAQ,WAAW,MAAM;AAGnE,UAAM,YAAY,UAAU,MAAM;AAClC,UAAM,IAAI,mBAAmB,IAAI,WAAW,KAAK,UAAU;AAAA,MACzD;AAAA,MACA;AAAA,MACA,cAAa,oBAAI,KAAK,GAAE,YAAY;AAAA,MACpC,cAAa,oBAAI,KAAK,GAAE,YAAY;AAAA,IACtC,CAAC,GAAG,EAAE,eAAe,QAAQ,GAAG,CAAC;AAEjC,YAAQ,IAAI,4CAA4C,MAAM;AAE9D,UAAM,kBAAkB,mBAAmB;AAAA,MACzC,SAAS;AAAA,MACT,SAAS;AAAA,MACT;AAAA,MACA;AAAA,IACF,CAAC;AACD,WAAO,0BAA0B,iBAAiB,MAAM;AAAA,EAE1D,SAAS,OAAO;AACd,YAAQ,MAAM,oCAAoC,KAAK;AACvD,UAAM,gBAAgB,mBAAmB,EAAE,OAAO,+BAA+B,GAAG,GAAG;AACvF,WAAO,0BAA0B,eAAe,MAAM;AAAA,EACxD;AACF;AArCe;AAuCf,eAAe,mBAAmB,SAAS,KAAK;AAC9C,QAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ;AAE3C,MAAI;AACF,UAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,UAAM,SAAS,IAAI,aAAa,IAAI,QAAQ;AAE5C,QAAI,CAAC,QAAQ;AACX,YAAM,gBAAgB,mBAAmB,EAAE,OAAO,2BAA2B,GAAG,GAAG;AACnF,aAAO,0BAA0B,eAAe,MAAM;AAAA,IACxD;AAEA,YAAQ,IAAI,kCAAkC,MAAM;AAGpD,UAAM,aAAa,WAAW,MAAM;AACpC,UAAM,cAAc,aAAa,MAAM;AACvC,UAAM,cAAc,aAAa,MAAM;AAEvC,UAAM,cAAc,MAAM,IAAI,mBAAmB,IAAI,UAAU;AAC/D,UAAM,WAAW,MAAM,IAAI,mBAAmB,IAAI,WAAW;AAC7D,UAAM,WAAW,MAAM,IAAI,mBAAmB,IAAI,WAAW;AAE7D,UAAM,YAAY;AAAA,MAChB;AAAA,MACA,aAAa,cAAc,KAAK,MAAM,WAAW,IAAI;AAAA,MACrD,UAAU,WAAW,KAAK,MAAM,QAAQ,IAAI;AAAA,MAC5C,UAAU,WAAW,KAAK,MAAM,QAAQ,IAAI;AAAA,MAC5C,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,IACpC;AAEA,YAAQ,IAAI,uBAAuB,SAAS;AAE5C,UAAM,kBAAkB,mBAAmB,SAAS;AACpD,WAAO,0BAA0B,iBAAiB,MAAM;AAAA,EAE1D,SAAS,OAAO;AACd,YAAQ,MAAM,gCAAgC,KAAK;AACnD,UAAM,gBAAgB,mBAAmB,EAAE,OAAO,+BAA+B,GAAG,GAAG;AACvF,WAAO,0BAA0B,eAAe,MAAM;AAAA,EACxD;AACF;AAzCe;AA6Cf,eAAe,6BAA6B,SAAS,KAAK;AACxD,QAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ;AAE3C,MAAI;AACF,UAAM,EAAE,OAAO,IAAI,MAAM,QAAQ,KAAK;AAEtC,QAAI,CAAC,QAAQ;AACX,YAAM,gBAAgB,mBAAmB,EAAE,OAAO,iBAAiB,GAAG,GAAG;AACzE,aAAO,0BAA0B,eAAe,MAAM;AAAA,IACxD;AAEA,YAAQ,IAAI,yCAAyC,MAAM;AAG3D,UAAM,cAAc,MAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,EAAE;AAC1E,QAAI,aAAa;AACf,YAAM,WAAW,KAAK,MAAM,WAAW;AACvC,eAAS,gBAAgB;AACzB,eAAS,mBAAkB,oBAAI,KAAK,GAAE,YAAY;AAClD,eAAS,qBAAqB,KAAK,MAAM,KAAK,IAAI,IAAI,GAAI;AAC1D,eAAS,mBAAmB,KAAK,MAAM,KAAK,IAAI,IAAI,GAAI,IAAK,MAAM,KAAK,KAAK;AAC7E,eAAS,oBAAoB;AAC7B,eAAS,eAAc,oBAAI,KAAK,GAAE,YAAY;AAE9C,YAAM,IAAI,mBAAmB,IAAI,aAAa,MAAM,IAAI,KAAK,UAAU,QAAQ,CAAC;AAChF,cAAQ,IAAI,gDAAgD;AAAA,IAC9D;AAGA,UAAM,qBAAqB,MAAM,IAAI,mBAAmB,IAAI,WAAW,MAAM,EAAE;AAC/E,QAAI,oBAAoB;AACtB,YAAM,kBAAkB,KAAK,MAAM,kBAAkB;AACrD,sBAAgB,SAAS;AACzB,sBAAgB,mBAAkB,oBAAI,KAAK,GAAE,YAAY;AACzD,sBAAgB,qBAAqB,KAAK,MAAM,KAAK,IAAI,IAAI,GAAI;AACjE,sBAAgB,mBAAmB,KAAK,MAAM,KAAK,IAAI,IAAI,GAAI,IAAK,MAAM,KAAK,KAAK;AACpF,sBAAgB,oBAAoB;AACpC,sBAAgB,eAAc,oBAAI,KAAK,GAAE,YAAY;AAErD,YAAM,IAAI,mBAAmB,IAAI,WAAW,MAAM,IAAI,KAAK,UAAU,eAAe,CAAC;AACrF,cAAQ,IAAI,8CAA8C;AAAA,IAC5D;AAEA,UAAM,kBAAkB,mBAAmB;AAAA,MACzC,SAAS;AAAA,MACT,SAAS;AAAA,MACT;AAAA,MACA,QAAQ;AAAA,MACR,YAAY,IAAI,KAAK,KAAK,IAAI,IAAK,MAAM,KAAK,KAAK,KAAK,GAAK,EAAE,YAAY;AAAA,IAC7E,CAAC;AACD,WAAO,0BAA0B,iBAAiB,MAAM;AAAA,EAE1D,SAAS,OAAO;AACd,YAAQ,MAAM,0CAA0C,KAAK;AAC7D,UAAM,gBAAgB,mBAAmB,EAAE,OAAO,oCAAoC,GAAG,GAAG;AAC5F,WAAO,0BAA0B,eAAe,MAAM;AAAA,EACxD;AACF;AAzDe;;;ACltJf,IAAM,YAAwB,8BAAO,SAAS,KAAK,MAAM,kBAAkB;AAC1E,MAAI;AACH,WAAO,MAAM,cAAc,KAAK,SAAS,GAAG;AAAA,EAC7C,UAAE;AACD,QAAI;AACH,UAAI,QAAQ,SAAS,QAAQ,CAAC,QAAQ,UAAU;AAC/C,cAAM,SAAS,QAAQ,KAAK,UAAU;AACtC,eAAO,EAAE,MAAM,OAAO,KAAK,GAAG,MAAM;AAAA,QAAC;AAAA,MACtC;AAAA,IACD,SAAS,GAAG;AACX,cAAQ,MAAM,4CAA4C,CAAC;AAAA,IAC5D;AAAA,EACD;AACD,GAb8B;AAe9B,IAAO,6CAAQ;;;ACRf,SAAS,YAAY,GAAmB;AACvC,SAAO;AAAA,IACN,MAAM,GAAG;AAAA,IACT,SAAS,GAAG,WAAW,OAAO,CAAC;AAAA,IAC/B,OAAO,GAAG;AAAA,IACV,OAAO,GAAG,UAAU,SAAY,SAAY,YAAY,EAAE,KAAK;AAAA,EAChE;AACD;AAPS;AAUT,IAAM,YAAwB,8BAAO,SAAS,KAAK,MAAM,kBAAkB;AAC1E,MAAI;AACH,WAAO,MAAM,cAAc,KAAK,SAAS,GAAG;AAAA,EAC7C,SAAS,GAAQ;AAChB,UAAM,QAAQ,YAAY,CAAC;AAC3B,WAAO,SAAS,KAAK,OAAO;AAAA,MAC3B,QAAQ;AAAA,MACR,SAAS,EAAE,+BAA+B,OAAO;AAAA,IAClD,CAAC;AAAA,EACF;AACD,GAV8B;AAY9B,IAAO,2CAAQ;;;ACzBJ,IAAM,mCAAmC;AAAA,EAE9B;AAAA,EAAyB;AAC3C;AACA,IAAO,sCAAQ;;;ACcnB,IAAM,wBAAsC,CAAC;AAKtC,SAAS,uBAAuB,MAAqC;AAC3E,wBAAsB,KAAK,GAAG,KAAK,KAAK,CAAC;AAC1C;AAFgB;AAShB,SAAS,uBACR,SACA,KACA,KACA,UACA,iBACsB;AACtB,QAAM,CAAC,MAAM,GAAG,IAAI,IAAI;AACxB,QAAM,gBAAmC;AAAA,IACxC;AAAA,IACA,KAAK,YAAY,QAAQ;AACxB,aAAO,uBAAuB,YAAY,QAAQ,KAAK,UAAU,IAAI;AAAA,IACtE;AAAA,EACD;AACA,SAAO,KAAK,SAAS,KAAK,KAAK,aAAa;AAC7C;AAfS;AAiBF,SAAS,kBACf,SACA,KACA,KACA,UACA,iBACsB;AACtB,SAAO,uBAAuB,SAAS,KAAK,KAAK,UAAU;AAAA,IAC1D,GAAG;AAAA,IACH;AAAA,EACD,CAAC;AACF;AAXgB;;;AC3ChB,IAAM,iCAAN,MAAM,gCAA8D;AAAA,EAGnE,YACU,eACA,MACT,SACC;AAHQ;AACA;AAGT,SAAK,WAAW;AAAA,EACjB;AAAA,EArBD,OAYoE;AAAA;AAAA;AAAA,EAC1D;AAAA,EAUT,UAAU;AACT,QAAI,EAAE,gBAAgB,kCAAiC;AACtD,YAAM,IAAI,UAAU,oBAAoB;AAAA,IACzC;AAEA,SAAK,SAAS;AAAA,EACf;AACD;AAEA,SAAS,oBAAoB,QAA0C;AAEtE,MACC,qCAAqC,UACrC,iCAAiC,WAAW,GAC3C;AACD,WAAO;AAAA,EACR;AAEA,aAAW,cAAc,kCAAkC;AAC1D,wBAAoB,UAAU;AAAA,EAC/B;AAEA,QAAM,kBAA+C,gCACpD,SACA,KACA,KACC;AACD,QAAI,OAAO,UAAU,QAAW;AAC/B,YAAM,IAAI,MAAM,6CAA6C;AAAA,IAC9D;AACA,WAAO,OAAO,MAAM,SAAS,KAAK,GAAG;AAAA,EACtC,GATqD;AAWrD,SAAO;AAAA,IACN,GAAG;AAAA,IACH,MAAM,SAAS,KAAK,KAAK;AACxB,YAAM,aAAyB,gCAAU,MAAM,MAAM;AACpD,YAAI,SAAS,eAAe,OAAO,cAAc,QAAW;AAC3D,gBAAM,aAAa,IAAI;AAAA,YACtB,KAAK,IAAI;AAAA,YACT,KAAK,QAAQ;AAAA,YACb,MAAM;AAAA,YAAC;AAAA,UACR;AACA,iBAAO,OAAO,UAAU,YAAY,KAAK,GAAG;AAAA,QAC7C;AAAA,MACD,GAT+B;AAU/B,aAAO,kBAAkB,SAAS,KAAK,KAAK,YAAY,eAAe;AAAA,IACxE;AAAA,EACD;AACD;AAxCS;AA0CT,SAAS,qBACR,OAC8B;AAE9B,MACC,qCAAqC,UACrC,iCAAiC,WAAW,GAC3C;AACD,WAAO;AAAA,EACR;AAEA,aAAW,cAAc,kCAAkC;AAC1D,wBAAoB,UAAU;AAAA,EAC/B;AAGA,SAAO,cAAc,MAAM;AAAA,IAC1B,mBAAyE,wBACxE,SACA,KACA,QACI;AACJ,WAAK,MAAM;AACX,WAAK,MAAM;AACX,UAAI,MAAM,UAAU,QAAW;AAC9B,cAAM,IAAI,MAAM,sDAAsD;AAAA,MACvE;AACA,aAAO,MAAM,MAAM,OAAO;AAAA,IAC3B,GAXyE;AAAA,IAazE,cAA0B,wBAAC,MAAM,SAAS;AACzC,UAAI,SAAS,eAAe,MAAM,cAAc,QAAW;AAC1D,cAAM,aAAa,IAAI;AAAA,UACtB,KAAK,IAAI;AAAA,UACT,KAAK,QAAQ;AAAA,UACb,MAAM;AAAA,UAAC;AAAA,QACR;AACA,eAAO,MAAM,UAAU,UAAU;AAAA,MAClC;AAAA,IACD,GAT0B;AAAA,IAW1B,MAAM,SAAwD;AAC7D,aAAO;AAAA,QACN;AAAA,QACA,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,MACN;AAAA,IACD;AAAA,EACD;AACD;AAnDS;AAqDT,IAAI;AACJ,IAAI,OAAO,wCAAU,UAAU;AAC9B,kBAAgB,oBAAoB,mCAAK;AAC1C,WAAW,OAAO,wCAAU,YAAY;AACvC,kBAAgB,qBAAqB,mCAAK;AAC3C;AACA,IAAO,kCAAQ;",
  "names": ["url", "storedAuthData", "realEmail", "realFirstName", "errorResponse", "successResponse", "customerId", "subscription"]
}
