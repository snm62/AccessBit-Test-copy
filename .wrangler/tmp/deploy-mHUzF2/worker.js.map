{
  "version": 3,
  "sources": ["../../../worker.js"],
  "sourceRoot": "C:\\Users\\sures\\ContrastKit\\.wrangler\\tmp\\deploy-mHUzF2",
  "sourcesContent": ["// Complete Accessibility Widget Cloudflare Worker\nexport default {\n  async fetch(request, env, ctx) {\n    const url = new URL(request.url);\n    \n    // Handle CORS preflight\n    if (request.method === 'OPTIONS') {\n      return handleCORS();\n    }\n    \n    // OAuth Authorization - redirect to Webflow\n    if (url.pathname === '/api/auth/authorize') {\n      return handleOAuthAuthorize(request, env);\n    }\n    \n    // OAuth Callback - handle Webflow redirect\n    if (url.pathname === '/api/auth/callback') {\n      return handleOAuthCallback(request, env);\n    }\n    \n    // Token Authentication\n    if (url.pathname === '/api/auth/token' && request.method === 'POST') {\n      return handleTokenAuth(request, env);\n    }\n    \n    // Get accessibility settings\n    if (url.pathname === '/api/accessibility/settings' && request.method === 'GET') {\n      return handleGetSettings(request, env);\n    }\n    \n    // Update accessibility settings\n    if (url.pathname === '/api/accessibility/settings' && (request.method === 'POST' || request.method === 'PUT')) {\n      return handleUpdateSettings(request, env);\n    }\n    \n    // Verify authentication\n    if (url.pathname === '/api/auth/verify') {\n      return handleVerifyAuth(request, env);\n    }\n    \n    // Publish accessibility settings\n    if (url.pathname === '/api/accessibility/publish' && request.method === 'POST') {\n      return handlePublishSettings(request, env);\n    }\n    \n    // Register accessibility script\n    if (url.pathname === '/api/accessibility/register-script') {\n      return handleRegisterScript(request, env);\n    }\n    \n    // Apply accessibility script\n    if (url.pathname === '/api/accessibility/apply-script') {\n      return handleApplyScript(request, env);\n    }\n    \n// Get accessibility configuration for hosted script\nif (url.pathname === '/api/accessibility/config' && request.method === 'GET') {\n  return handleGetConfig(request, env);\n}\n\n// Domain lookup endpoint\nif (url.pathname === '/api/accessibility/domain-lookup' && request.method === 'GET') {\n  return handleDomainLookup(request, env);\n}\n    \n    // Default response\n    return new Response('Accessibility Widget API', { \n      status: 200,\n      headers: { \n        'Content-Type': 'text/plain',\n        'Access-Control-Allow-Origin': '*'\n      }\n    });\n  }\n};\n\n// Handle CORS preflight requests\nfunction handleCORS() {\n  return new Response(null, {\n    status: 204,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, POST, PUT, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n      'Access-Control-Max-Age': '86400'\n    }\n  });\n}\n\n// Handle OAuth Authorization\nasync function handleOAuthAuthorize(request, env) {\n  const url = new URL(request.url);\n  const incomingState = url.searchParams.get(\"state\");\n  const siteId = url.searchParams.get(\"siteId\");\n  \n  // Determine flow type and extract site ID\n  const isDesigner = incomingState && incomingState.startsWith(\"webflow_designer\");\n  \n  const scopes = [\n    \"sites:read\",\n    \"sites:write\", \n    \"custom_code:read\",\n    \"custom_code:write\",\n    \"authorized_user:read\"\n  ];\n  \n  // Use your worker's redirect URI for both flows\n  const redirectUri = \"https://accessibility-widget.web-8fb.workers.dev/api/auth/callback\";\n  \n  const authUrl = new URL('https://webflow.com/oauth/authorize');\n  authUrl.searchParams.set('client_id', env.WEBFLOW_CLIENT_ID);\n  authUrl.searchParams.set('response_type', 'code');\n  authUrl.searchParams.set('redirect_uri', redirectUri);\n  authUrl.searchParams.set('scope', scopes.join(' '));\n  \n  // Set state parameter with site ID for App Interface\n  if (isDesigner) {\n    const currentSiteId = siteId || (incomingState.includes('_') ? incomingState.split('_')[1] : null);\n    if (currentSiteId) {\n      authUrl.searchParams.set('state', `webflow_designer_${currentSiteId}`);\n    } else {\n      authUrl.searchParams.set('state', 'webflow_designer');\n    }\n  } else {\n    // For Apps & Integrations flow, try to get site info from referrer\n    const referrer = request.headers.get('referer') || '';\n    let siteInfo = '';\n    \n    if (referrer.includes('.design.webflow.com')) {\n      const match = referrer.match(/([^.]+)\\.design\\.webflow\\.com/);\n      if (match) {\n        siteInfo = `_${match[1]}`;\n        console.log('Apps & Integrations: Including site info in state:', siteInfo);\n      }\n    }\n    \n    authUrl.searchParams.set('state', `accessibility_widget${siteInfo}`);\n  }\n  \n  return new Response(null, {\n    status: 302,\n    headers: {\n      'Location': authUrl.toString()\n    }\n  });\n}\n\n// Handle OAuth Callback\nasync function handleOAuthCallback(request, env) {\n  const url = new URL(request.url);\n  const code = url.searchParams.get('code');\n  const state = url.searchParams.get('state');\n  \n  if (!code) {\n    return new Response(JSON.stringify({ error: 'No authorization code provided' }), {\n      status: 400,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n\n  // Handle missing state parameter - assume Apps & Integrations flow\n  if (!state) {\n    // Continue with Apps & Integrations flow instead of throwing error\n  }\n  \n  try {\n    const isDesigner = state && state.startsWith('webflow_designer');\n    const isAppsIntegrations = state && state.startsWith('accessibility_widget');\n    const redirectUri = \"https://accessibility-widget.web-8fb.workers.dev/api/auth/callback\";\n    \n    // Extract site info from Apps & Integrations state\n    let appsIntegrationsSiteInfo = null;\n    if (isAppsIntegrations && state.includes('_')) {\n      const parts = state.split('_');\n      if (parts.length >= 3) {\n        appsIntegrationsSiteInfo = parts.slice(2).join('_'); // Get everything after accessibility_widget_\n        console.log('Apps & Integrations: Extracted site info from state:', appsIntegrationsSiteInfo);\n      }\n    }\n    \n    console.log('=== OAUTH CALLBACK DEBUG ===');\n    console.log('Request URL:', request.url);\n    console.log('Code received:', code);\n    console.log('State:', state);\n    console.log('Using redirect URI:', redirectUri);\n    console.log('Client ID:', env.WEBFLOW_CLIENT_ID);\n    console.log('Flow type:', isDesigner ? 'App Interface' : 'Apps & Integrations');\n    \n    // Build token exchange request body conditionally\n    const tokenRequestBody = {\n      client_id: env.WEBFLOW_CLIENT_ID,\n      client_secret: env.WEBFLOW_CLIENT_SECRET,\n      code: code,\n      grant_type: 'authorization_code'\n    };\n    \n    // Only include redirect_uri for App Interface flow\n    if (isDesigner) {\n      tokenRequestBody.redirect_uri = redirectUri;\n    }\n    \n    console.log('Token request body:', JSON.stringify(tokenRequestBody, null, 2));\n    \n    const tokenResponse = await fetch('https://api.webflow.com/oauth/access_token', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(tokenRequestBody)\n    });\n    \n    if (!tokenResponse.ok) {\n      const errorText = await tokenResponse.text();\n      console.error('Token exchange failed:', tokenResponse.status, errorText);\n      throw new Error(`Token exchange failed: ${tokenResponse.status} - ${errorText}`);\n    }\n    \n    const tokenData = await tokenResponse.json();\n    console.log('Token exchange successful');\n    \n    // Get user info\n    const userResponse = await fetch('https://api.webflow.com/v2/token/authorized_by', {\n      headers: {\n        'Authorization': `Bearer ${tokenData.access_token}`,\n        'accept-version': '2.0.0'\n      }\n    });\n    \n    if (!userResponse.ok) {\n      throw new Error(`User fetch failed: ${userResponse.status}`);\n    }\n    \n    const userData = await userResponse.json();\n    \n    // Get sites\n    const sitesResponse = await fetch('https://api.webflow.com/v2/sites', {\n      headers: {\n        'Authorization': `Bearer ${tokenData.access_token}`,\n        'accept-version': '2.0.0'\n      }\n    });\n    \n    if (!sitesResponse.ok) {\n      throw new Error(`Sites fetch failed: ${sitesResponse.status}`);\n    }\n    \n    const sitesData = await sitesResponse.json();\n    let sites = [];\n    if (sitesData.sites) {\n      sites = sitesData.sites;\n    } else if (sitesData.items) {\n      sites = sitesData.items;\n    } else if (Array.isArray(sitesData)) {\n      sites = sitesData;\n    }\n    \n    if (sites.length === 0) {\n      throw new Error('No Webflow sites found');\n    }\n    \n    // Generate JWT session token FIRST\n    const userId = userData.id || userData.email || `user_${Date.now()}`;\n    const sessionToken = await createSessionToken({...userData, id: userId}, env);\n    \n    // Handle different redirect scenarios\n    if (isDesigner) {\n      // App Interface flow - only store data for the current site\n      const siteIdFromState = state.includes('_') ? state.split('_')[1] : null;\n      \n      // Find the specific site or use the first one\n      let currentSite;\n      if (siteIdFromState) {\n        currentSite = sites.find(site => site.id === siteIdFromState) || sites[0];\n      } else {\n        currentSite = sites[0];\n      }\n      \n      // Store user authentication data in KV (REQUIRED for verifyAuth)\n      const userId = userData.id || userData.email || `user_${Date.now()}`;\n      await env.ACCESSIBILITY_AUTH.put(`user-auth:${userId}`, JSON.stringify({\n        accessToken: tokenData.access_token,\n        userData: {\n          id: userId,\n          email: userData.email,\n          firstName: userData.firstName\n        },\n        siteId: currentSite.id,\n        createdAt: new Date().toISOString()\n      }), { expirationTtl: 86400 });\n      \n      // Store site data with correct key structure\n      await env.ACCESSIBILITY_AUTH.put(`Accessibility-Settings:${currentSite.id}`, JSON.stringify({\n        accessToken: tokenData.access_token,\n        siteName: currentSite.name || currentSite.shortName || 'Unknown Site',\n        siteId: currentSite.id,\n        user: userData,\n        installedAt: new Date().toISOString(),\n        customization: {},\n        accessibilityProfiles: {},\n        widgetVersion: '1.0.0',\n        lastUsed: new Date().toISOString()\n      }), { expirationTtl: 86400 });\n      \n      // App Interface flow - send data to parent window with siteId parameter\n      return new Response(`<!DOCTYPE html>\n        <html>\n          <head>\n            <title>Accessibility Widget Installed</title>\n            <style>\n              body { font-family: Arial, sans-serif; text-align: center; padding: 50px; }\n              .success { color: #28a745; }\n            </style>\n          </head>\n          <body>\n            <h1 class=\"success\">\u2705 Accessibility Widget Installed Successfully!</h1>\n            <p>Your accessibility widget is now active on this site.</p>\n            <script>\n              const sessionData = {\n                type: 'AUTH_SUCCESS',\n                sessionToken: '${sessionToken.token}',\n                user: {\n                  firstName: '${userData.firstName || 'User'}',\n                  email: '${userData.email}',\n                  siteId: '${currentSite.id}'\n                },\n                siteInfo: {\n                  siteId: '${currentSite.id}',\n                  siteName: '${currentSite.name || currentSite.shortName || 'Unknown Site'}',\n                  shortName: '${currentSite.shortName}',\n                  url: '${currentSite.url || `https://${currentSite.shortName}.webflow.io`}'\n                }\n              };\n              \n              // Store siteId in sessionStorage for the widget to use\n              sessionStorage.setItem('accessibility_site_id', '${currentSite.id}');\n              console.log('Stored siteId in sessionStorage:', '${currentSite.id}');\n              \n              window.opener.postMessage(sessionData, '*');\n              window.close();\n            </script>\n          </body>\n        </html>`, {\n        headers: { 'Content-Type': 'text/html' }\n      });\n    }\n    \n    // Apps & Integrations flow - store data for the correct site only\n    console.log('Apps & Integrations: Determining correct site for data storage...');\n    \n    let targetSite = sites[0]; // Default to first site\n    \n    // First, try to use site info from state parameter (most reliable)\n    if (appsIntegrationsSiteInfo) {\n      console.log('Apps & Integrations: Using site info from state parameter:', appsIntegrationsSiteInfo);\n      \n      // Find the site with matching shortName\n      const foundSite = sites.find(site => site.shortName === appsIntegrationsSiteInfo);\n      if (foundSite) {\n        targetSite = foundSite;\n        console.log('Apps & Integrations: Found matching site from state:', foundSite.id, foundSite.name || foundSite.shortName);\n      } else {\n        console.log('Apps & Integrations: No matching site found for state shortName:', appsIntegrationsSiteInfo);\n      }\n    } else {\n      // Fallback: try to get site info from referrer\n      const referrer = request.headers.get('referer') || '';\n      console.log('Apps & Integrations: No state site info, trying referrer:', referrer);\n      \n      if (referrer.includes('.design.webflow.com')) {\n        const match = referrer.match(/([^.]+)\\.design\\.webflow\\.com/);\n        if (match) {\n          const shortName = match[1];\n          console.log('Apps & Integrations: Found shortName from referrer:', shortName);\n          \n          const foundSite = sites.find(site => site.shortName === shortName);\n          if (foundSite) {\n            targetSite = foundSite;\n            console.log('Apps & Integrations: Found matching site from referrer:', foundSite.id, foundSite.name || foundSite.shortName);\n          }\n        }\n      }\n    }\n    \n    console.log('Apps & Integrations: Storing data for site:', targetSite.id, targetSite.name || targetSite.shortName);\n    \n    // Store data only for the target site with correct key structure\n    await env.ACCESSIBILITY_AUTH.put(`Accessibility-Settings:${targetSite.id}`, JSON.stringify({\n      accessToken: tokenData.access_token,\n      siteName: targetSite.name || targetSite.shortName || 'Unknown Site',\n      siteId: targetSite.id,\n      user: userData,\n      installedAt: new Date().toISOString(),\n      customization: {},\n      accessibilityProfiles: {},\n      widgetVersion: '1.0.0',\n      lastUsed: new Date().toISOString()\n    }), { expirationTtl: 86400 });\n    \n    // Also store the Webflow subdomain mapping for this site\n    try {\n      if (targetSite.shortName) {\n        const webflowSubdomain = `${targetSite.shortName}.webflow.io`;\n        const domainKey = `domain:${webflowSubdomain}`;\n        \n        await env.ACCESSIBILITY_AUTH.put(domainKey, JSON.stringify({\n          siteId: targetSite.id,\n          domain: webflowSubdomain,\n          isPrimary: true,\n          isWebflowSubdomain: true,\n          connectedAt: new Date().toISOString()\n        }), { expirationTtl: 86400 * 30 }); // 30 days\n        \n        console.log('Apps & Integrations: Stored Webflow subdomain mapping:', webflowSubdomain, '->', targetSite.id);\n      }\n    } catch (domainError) {\n      console.warn('Apps & Integrations: Failed to store subdomain mapping:', domainError);\n    }\n    \n    // Apps & Integrations flow - redirect to site with success message\n    return new Response(`<!DOCTYPE html>\n      <html>\n        <head>\n          <title>Accessibility Widget Installed</title>\n          <style>\n            body { font-family: Arial, sans-serif; text-align: center; padding: 50px; }\n            .success { color: #28a745; }\n            .redirect { color: #007bff; margin-top: 20px; }\n          </style>\n        </head>\n        <body>\n          <h1 class=\"success\">\u2705Accessibility Widget Installed Successfully!</h1>\n          <p>Your accessibility widget is now active on this site.</p>\n          <p class=\"redirect\">Redirecting to your site...</p>\n          <script>\n            // Store site info in session storage for the correct site\n            sessionStorage.setItem('wf_hybrid_user', JSON.stringify({\n              sessionToken: '${sessionToken.token}',\n              firstName: '${userData.firstName || 'User'}',\n              email: '${userData.email}',\n              exp: Date.now() + (24 * 60 * 60 * 1000),\n              siteInfo: {\n                siteId: '${targetSite.id}',\n                siteName: '${targetSite.name || targetSite.shortName || 'Unknown Site'}',\n                shortName: '${targetSite.shortName}',\n                url: '${targetSite.url || `https://${targetSite.shortName}.webflow.io`}'\n              }\n            }));\n            \n            // Also store siteId directly for easy access by the widget\n            sessionStorage.setItem('accessibility_site_id', '${targetSite.id}');\n            console.log('Apps & Integrations: Stored siteId in sessionStorage:', '${targetSite.id}');\n            \n            // Redirect to the correct site after a short delay\n            setTimeout(() => {\n              window.location.href = 'https://${targetSite.shortName}.design.webflow.com?app=${env.WEBFLOW_CLIENT_ID}';\n            }, 2000);\n          </script>\n        </body>\n      </html>`, {\n      headers: { 'Content-Type': 'text/html' }\n    });\n    \n  } catch (error) {\n    console.error('OAuth callback error:', error);\n    return new Response(JSON.stringify({ \n      error: 'Authorization failed', \n      details: error.message\n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\n// Handle publish accessibility settings\nasync function handlePublishSettings(request, env) {\n  const requestId = `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  console.log(`[PUBLISH] ${requestId} Starting publish request`);\n  \n  try {\n    // Verify authentication\n    const authResult = await verifyAuth(request, env);\n    if (!authResult) {\n      console.log(`[PUBLISH] ${requestId} Authentication failed`);\n      return new Response(JSON.stringify({ \n        error: \"Unauthorized\", \n        requestId \n      }), {\n        status: 401,\n        headers: { \n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'POST, OPTIONS',\n          'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n        }\n      });\n    }\n    \n    // Get siteId from URL parameter (preferred) or from auth result\n    const url = new URL(request.url);\n    const urlSiteId = url.searchParams.get('siteId');\n    const siteId = urlSiteId || authResult.siteId;\n    \n    console.log(`[PUBLISH] ${requestId} Using siteId: ${siteId} (from ${urlSiteId ? 'URL parameter' : 'auth result'})`);\n    \n    if (!siteId) {\n      console.log(`[PUBLISH] ${requestId} No siteId available`);\n      return new Response(JSON.stringify({ \n        error: \"No siteId provided\", \n        requestId \n      }), {\n        status: 400,\n        headers: { \n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'POST, OPTIONS',\n          'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n        }\n      });\n    }\n    \n    // Parse the request body\n    const body = await request.json();\n    console.log(`[PUBLISH] ${requestId} Received body:`, body);\n    console.log(`[PUBLISH] ${requestId} Body keys:`, Object.keys(body));\n    console.log(`[PUBLISH] ${requestId} Customization keys:`, body.customization ? Object.keys(body.customization) : 'No customization');\n    \n        // Extract data from frontend\n    const { \n      customization, \n      accessibilityProfiles, \n      customDomain, \n      publishedAt\n    } = body;\n    \n        // Debug authResult\n    console.log(`[PUBLISH] ${requestId} Auth result:`, JSON.stringify(authResult, null, 2));\n    console.log(`[PUBLISH] ${requestId} User data from auth:`, authResult.userData);\n    console.log(`[PUBLISH] ${requestId} Site name from auth:`, authResult.siteName);\n    \n    // Create the data to store in KV\n    const dataToStore = {\n      // Authorization data\n      accessToken: authResult.accessToken,\n      user: {\n        email: authResult.userData?.email || 'unknown@example.com',\n        firstName: authResult.userData?.firstName || 'Unknown',\n        id: authResult.userData?.id || 'unknown'\n      },\n      \n      // Site info\n      siteId: siteId,\n      siteName: authResult.siteName || 'Unknown Site',\n      \n      // Customization data from frontend\n      customization: customization || {},\n      accessibilityProfiles: accessibilityProfiles || [],\n      customDomain: customDomain || null,\n   \n      \n      // Metadata\n      publishedAt: publishedAt || new Date().toISOString(),\n      lastUpdated: new Date().toISOString(),\n      lastUsed: new Date().toISOString(),\n      widgetVersion: '1.0.0'\n    };\n    \n    // Store the data in KV\n    const kvKey = `Accessibility-Settings:${siteId}`;\n    console.log(`[PUBLISH] ${requestId} Storing data with key: ${kvKey}`);\n    console.log(`[PUBLISH] ${requestId} Data to store:`, JSON.stringify(dataToStore, null, 2));\n    \n    await env.ACCESSIBILITY_AUTH.put(kvKey, JSON.stringify(dataToStore));\n    \n    // Also store domain mappings for easy lookup\n    // Get the site's domains from Webflow API\n    try {\n      const domainsResponse = await fetch(`https://api.webflow.com/v2/sites/${siteId}/domains`, {\n        headers: {\n          'Authorization': `Bearer ${authResult.accessToken}`,\n          'accept-version': '1.0.0'\n        }\n      });\n      \n      if (domainsResponse.ok) {\n        const domainsData = await domainsResponse.json();\n        console.log(`[PUBLISH] ${requestId} Found domains:`, domainsData);\n        \n        // Store mapping for each domain\n        for (const domain of domainsData.domains || []) {\n          const domainKey = `domain:${domain.name}`;\n          await env.ACCESSIBILITY_AUTH.put(domainKey, JSON.stringify({\n            siteId: siteId,\n            domain: domain.name,\n            isPrimary: domain.isPrimary || false,\n            connectedAt: new Date().toISOString()\n          }), { expirationTtl: 86400 * 30 }); // 30 days\n          \n          console.log(`[PUBLISH] ${requestId} Stored domain mapping: ${domain.name} -> ${siteId}`);\n        }\n      }\n    } catch (domainError) {\n      console.warn(`[PUBLISH] ${requestId} Failed to get domains:`, domainError);\n    }\n    \n    // IMPORTANT: Also store the Webflow subdomain mapping\n    // This is crucial for sites that only have Webflow subdomains (like test-dbae38.webflow.io)\n    try {\n      // Get site info to get the shortName for Webflow subdomain\n      const siteResponse = await fetch(`https://api.webflow.com/v2/sites/${siteId}`, {\n        headers: {\n          'Authorization': `Bearer ${authResult.accessToken}`,\n          'accept-version': '2.0.0'\n        }\n      });\n      \n      if (siteResponse.ok) {\n        const siteData = await siteResponse.json();\n        console.log(`[PUBLISH] ${requestId} Site data:`, siteData);\n        \n        if (siteData.shortName) {\n          const webflowSubdomain = `${siteData.shortName}.webflow.io`;\n          const domainKey = `domain:${webflowSubdomain}`;\n          \n          await env.ACCESSIBILITY_AUTH.put(domainKey, JSON.stringify({\n            siteId: siteId,\n            domain: webflowSubdomain,\n            isPrimary: true, // Webflow subdomain is always primary\n            isWebflowSubdomain: true,\n            connectedAt: new Date().toISOString()\n          }), { expirationTtl: 86400 * 30 }); // 30 days\n          \n          console.log(`[PUBLISH] ${requestId} Stored Webflow subdomain mapping: ${webflowSubdomain} -> ${siteId}`);\n        }\n      }\n    } catch (siteError) {\n      console.warn(`[PUBLISH] ${requestId} Failed to get site info for subdomain mapping:`, siteError);\n    }\n    \n    // If custom domain is provided, create a domain mapping\n    if (customDomain) {\n      const domainKey = `domain:${customDomain}`;\n      await env.ACCESSIBILITY_AUTH.put(domainKey, JSON.stringify({\n        siteId: siteId,\n        customDomain: customDomain,\n        connectedAt: new Date().toISOString()\n      }), { expirationTtl: 86400 });\n    }\n    \n    console.log(`[PUBLISH] ${requestId} Settings published successfully`);\n    \n    return new Response(JSON.stringify({\n      success: true,\n      message: \"Accessibility settings published successfully\",\n      data: {\n        customization: dataToStore.customization,\n        accessibilityProfiles: dataToStore.accessibilityProfiles,\n        customDomain: dataToStore.customDomain,\n        publishedAt: dataToStore.publishedAt\n      },\n      requestId\n    }), {\n      status: 200,\n      headers: { \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'POST, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n      }\n    });\n    \n  } catch (error) {\n    console.error(`[PUBLISH] ${requestId} Error in publish handler:`, error);\n    return new Response(JSON.stringify({\n      error: \"Failed to publish accessibility settings\",\n      details: String(error),\n      requestId\n    }), {\n      status: 500,\n      headers: { \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'POST, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n      }\n    });\n  }\n}\n\n// Get accessibility settings - UPDATED TO USE ONLY PUBLISHED SETTINGS\nasync function handleGetSettings(request, env) {\n  const authResult = await verifyAuth(request, env);\n  if (!authResult) {\n    return new Response(JSON.stringify({ error: 'Unauthorized' }), {\n      status: 401,\n      headers: { \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n      }\n    });\n  }\n  \n  // Get siteId from URL parameter (preferred) or from auth result\n  const url = new URL(request.url);\n  const urlSiteId = url.searchParams.get('siteId');\n  const siteId = urlSiteId || authResult.siteId;\n  \n  if (!siteId) {\n    return new Response(JSON.stringify({ error: 'No siteId provided' }), {\n      status: 400,\n      headers: { \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n      }\n    });\n  }\n  \n  const publishedData = await env.ACCESSIBILITY_AUTH.get(`Accessibility-Settings:${siteId}`);\n  if (!publishedData) {\n    return new Response(JSON.stringify({ error: 'Site not found' }), {\n      status: 404,\n      headers: { \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n      }\n    });\n  }\n  \n  const published = JSON.parse(publishedData);\n  return new Response(JSON.stringify({\n    settings: published.accessibilitySettings,\n    customization: published.customization,\n    accessibilityProfiles: published.accessibilityProfiles,\n    customDomain: published.customDomain,\n    siteId: siteId,\n    siteName: published.siteName,\n    installedAt: published.installedAt,\n    lastUsed: published.lastUsed,\n    widgetVersion: published.widgetVersion,\n    publishedAt: published.publishedAt\n  }), {\n    headers: { \n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n    }\n  });\n}\n\n// Handle Token Authentication - UPDATED TO USE PUBLISHED SETTINGS\nasync function handleTokenAuth(request, env) {\n  try {\n    console.log('=== TOKEN AUTH DEBUG START ===');\n    console.log('Request method:', request.method);\n    console.log('Request URL:', request.url);\n    console.log('Request headers:', Object.fromEntries(request.headers.entries()));\n    \n    const { siteId, idToken } = await request.json();\n    console.log('Parsed request body:', { siteId: !!siteId, idToken: !!idToken });\n    \n    if (!siteId || !idToken) {\n      console.error('Missing required parameters');\n      return new Response(JSON.stringify({ error: 'Missing siteId or idToken' }), {\n        status: 400,\n        headers: { \n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'POST, OPTIONS',\n          'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n        }\n      });\n    }\n    \n    // Get access token from published settings\n    console.log('Looking up published settings for siteId:', siteId);\n    const publishedData = await env.ACCESSIBILITY_AUTH.get(`Accessibility-Settings:${siteId}`);\n    if (!publishedData) {\n      console.error('Published settings not found in KV store');\n      return new Response(JSON.stringify({ error: 'Site not found or not authorized' }), {\n        status: 401,\n        headers: { \n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'POST, OPTIONS',\n          'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n        }\n      });\n    }\n    \n    const { accessToken } = JSON.parse(publishedData);\n    console.log('Found access token for site');\n    \n    // Verify user with Webflow - UPDATED TO V2\n    console.log('Verifying user with Webflow...');\n    const resolveResponse = await fetch('https://api.webflow.com/v2/token/resolve', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${accessToken}`,\n        'accept-version': '2.0.0'\n      },\n      body: JSON.stringify({ idToken })\n    });\n    \n    console.log('Webflow resolve response status:', resolveResponse.status);\n    \n    if (!resolveResponse.ok) {\n      const errorText = await resolveResponse.text();\n      console.error('Token resolve failed:', resolveResponse.status, errorText);\n      return new Response(JSON.stringify({ error: 'Failed to verify user' }), {\n        status: 401,\n        headers: { \n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'POST, OPTIONS',\n          'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n        }\n      });\n    }\n    \n    const userData = await resolveResponse.json();\n    console.log('Resolved user data:', JSON.stringify(userData, null, 2));\n    \n    if (!userData.id || !userData.email) {\n      console.error('Invalid user data received');\n      return new Response(JSON.stringify({ error: 'Invalid user data received' }), {\n        status: 400,\n        headers: { \n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'POST, OPTIONS',\n          'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n        }\n      });\n    }\n    \n    // Create session token\n    console.log('Creating session token...');\n    const sessionToken = await createSessionToken(userData, env);\n    console.log('Session token created successfully');\n    \n    // Store user authentication\n    await env.ACCESSIBILITY_AUTH.put(`user-auth:${userData.id}`, JSON.stringify({\n      accessToken,\n      userData: {\n        id: userData.id,\n        email: userData.email,\n        firstName: userData.firstName\n      },\n      siteId,\n      widgetType: 'accessibility'\n    }), { expirationTtl: 86400 });\n    \n    console.log('User authentication stored');\n    console.log('=== TOKEN AUTH DEBUG END ===');\n    \n    return new Response(JSON.stringify({\n      sessionToken: sessionToken.token,\n      email: userData.email,\n      firstName: userData.firstName,\n      exp: sessionToken.exp,\n      widgetType: 'accessibility'\n    }), {\n      headers: { \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'POST, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n      }\n    });\n    \n  } catch (error) {\n    console.error('Token auth error:', error);\n    return new Response(JSON.stringify({ \n      error: 'Authentication failed',\n      details: error.message \n    }), {\n      status: 500,\n      headers: { \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'POST, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n      }\n    });\n  }\n}\n\n// Update accessibility settings - UPDATED TO USE PUBLISHED SETTINGS\nasync function handleUpdateSettings(request, env) {\n  const authResult = await verifyAuth(request, env);\n  if (!authResult) {\n    return new Response(JSON.stringify({ error: 'Unauthorized' }), {\n      status: 401,\n      headers: { \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'POST, PUT, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n      }\n    });\n  }\n  \n  const { siteId } = authResult;\n  const newSettings = await request.json();\n  \n  const publishedData = await env.ACCESSIBILITY_AUTH.get(`Accessibility-Settings:${siteId}`);\n  if (!publishedData) {\n    return new Response(JSON.stringify({ error: 'Site not found' }), {\n      status: 404,\n      headers: { \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'POST, PUT, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n      }\n    });\n  }\n  \n  const siteInfo = JSON.parse(publishedData);\n  siteInfo.accessibilitySettings = { ...siteInfo.accessibilitySettings, ...newSettings };\n  siteInfo.lastUpdated = new Date().toISOString();\n  siteInfo.lastUsed = new Date().toISOString();\n  \n  await env.ACCESSIBILITY_AUTH.put(`Accessibility-Settings:${siteId}`, JSON.stringify(siteInfo));\n  \n  return new Response(JSON.stringify({\n    success: true,\n    settings: siteInfo.accessibilitySettings,\n    lastUpdated: siteInfo.lastUpdated\n  }), {\n    headers: { \n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'POST, PUT, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n    }\n  });\n}\n\n// Verify authentication\nasync function handleVerifyAuth(request, env) {\n  const authResult = await verifyAuth(request, env);\n  \n  return new Response(JSON.stringify({\n    authenticated: !!authResult,\n    user: authResult?.userData || null\n  }), {\n    headers: { \n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n    }\n  });\n}\n\n\n// Register Script - Using actual Webflow API\nasync function handleRegisterScript(request, env) {\n  try {\n    console.log('=== REGISTER SCRIPT DEBUG START ===');\n    \n    const authResult = await verifyAuth(request, env);\n    if (!authResult) {\n      console.log('Authentication failed in register script');\n      return new Response(JSON.stringify({ error: 'Authentication failed' }), {\n        status: 401,\n        headers: { \n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n    }\n    \n    // Get siteId from URL parameter (preferred) or from auth result\n    const url = new URL(request.url);\n    const urlSiteId = url.searchParams.get('siteId');\n    const siteId = urlSiteId || authResult.siteId;\n    \n    console.log('Authentication successful, using siteId:', siteId, `(from ${urlSiteId ? 'URL parameter' : 'auth result'})`);\n    \n    if (!siteId) {\n      console.log('No siteId available for script registration');\n      return new Response(JSON.stringify({ error: 'No siteId provided' }), {\n        status: 400,\n        headers: { \n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n    }\n    \n    const scriptUrl = 'https://cdn.jsdelivr.net/gh/snm62/accessibility-test@3d026ef/accessibility-widget.js';\n    // Check if script is already registered - CORRECTED: Use exact match\n    const existingScriptsResponse = await fetch(`https://api.webflow.com/v2/sites/${siteId}/registered_scripts`, {\n      headers: {\n        'Authorization': `Bearer ${authResult.accessToken}`,\n        'accept-version': '2.0.0'\n      }\n    });\n    if (existingScriptsResponse.ok) {\n      const existingScripts = await existingScriptsResponse.json();\n      // CORRECTED: Use exact match instead of includes\n      const existingScript = existingScripts.registeredScripts?.find(script =>\n        script.hostedLocation === scriptUrl  // Exact match\n      );\n      if (existingScript) {\n        console.log('Script already registered:', existingScript.id);\n        return new Response(JSON.stringify({\n          success: true,\n          message: \"Script already registered\",\n          result: existingScript,\n          skipApplyScript: true  // ADDED: Flag to skip apply script in frontend\n        }), {\n          headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*'\n          }\n        });\n      }\n    }\n    \n   \n    const scriptResponse = await fetch(scriptUrl);\n    const scriptContent = await scriptResponse.text();\n    const scriptBuffer = new TextEncoder().encode(scriptContent);\n    const hashBuffer = await crypto.subtle.digest('SHA-384', scriptBuffer);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    const hashBase64 = btoa(String.fromCharCode.apply(null, hashArray));\n    const integrityHash = `sha384-${hashBase64}`;\n    \n    console.log('Generated SRI hash:', integrityHash);\n    \n    // Register the script with Webflow\n    const registerResponse = await fetch(`https://api.webflow.com/v2/sites/${authResult.siteId}/registered_scripts/hosted`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${authResult.accessToken}`,\n        'Content-Type': 'application/json',\n        'accept-version': '2.0.0'\n      },\n        body: JSON.stringify({\n          displayName: `ContrastKit${Date.now()}`,\n          scriptUrl: scriptUrl,\n          version: '1.0.0',\n          hostedLocation: scriptUrl,\n          integrityHash: integrityHash,\n          canCopy: false,\n          isRequired: false\n        })\n    });\n    \n    console.log('Webflow API response status:', registerResponse.status);\n    \n    if (!registerResponse.ok) {\n      const errorText = await registerResponse.text();\n      console.error('Script registration failed:', registerResponse.status, errorText);\n      throw new Error(`Script registration failed: ${registerResponse.status} - ${errorText}`);\n    }\n    \n    const scriptResult = await registerResponse.json();\n    console.log('Script registered successfully:', JSON.stringify(scriptResult, null, 2));\n    console.log('=== REGISTER SCRIPT DEBUG END ===');\n    \n    return new Response(JSON.stringify({\n      success: true,\n      result: scriptResult\n    }), {\n      headers: { \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      }\n    });\n    \n  } catch (error) {\n    console.error('Register script error:', error);\n    console.error('Error details:', error.message, error.stack);\n    return new Response(JSON.stringify({ \n      error: 'Failed to register script',\n      details: error.message \n    }), {\n      status: 500,\n      headers: { \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      }\n    });\n  }\n}\n\n// Apply Script\nasync function handleApplyScript(request, env) {\n  try {\n    const authResult = await verifyAuth(request, env);\n    if (!authResult) {\n      return new Response(JSON.stringify({ error: 'Authentication failed' }), {\n        status: 401,\n        headers: { \n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n    }\n    \n    // Get siteId from URL parameter (preferred) or from auth result\n    const url = new URL(request.url);\n    const urlSiteId = url.searchParams.get('siteId');\n    const siteId = urlSiteId || authResult.siteId;\n    \n    if (!siteId) {\n      return new Response(JSON.stringify({ error: 'No siteId provided' }), {\n        status: 400,\n        headers: { \n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n    }\n    \n    const requestBody = await request.json();\n    const { targetType, scriptId, location, version, skipApplyScript } = requestBody;\n    console.log(\"script request body:\", requestBody);\n    \n    // Check if skipApplyScript is true\n    if (skipApplyScript) {\n      console.log(\"skipApplyScript is true, skipping script application\");\n      return new Response(JSON.stringify({\n        success: true,\n        message: \"Script application skipped as requested\",\n        skipped: true\n      }), {\n        headers: { \n          'Content-Type': 'application/json',\n          'Accessibility-Allow-Origin': '*'\n        }\n      });\n    }\n    \n    // Get existing custom code\n    const existingResponse = await fetch(`https://api.webflow.com/v2/sites/${authResult.siteId}/custom_code`, {\n      headers: {\n        'Authorization': `Bearer ${authResult.accessToken}`,\n        'accept-version': '2.0.0'\n      }\n    });\n    console.log(\"existing response status:\", existingResponse.status);\n\n    const already_registered_scripts = await fetch(`https://api.webflow.com/v2/sites/${authResult.siteId}/registered_scripts`, {\n      headers: {\n        'Authorization': `Bearer ${authResult.accessToken}`,\n        \n      }\n    });\n    console.log(already_registered_scripts.registeredScripts,\"already registered script\");\n    let existingScripts = [];\n    if (existingResponse.ok) {\n      const existingData = await existingResponse.json();\n      existingScripts = existingData.scripts || [];\n    }\n    \n        // Filter out duplicates - remove any existing accessibility widget scripts\n    // Filter out duplicates - remove ALL accessibility widget scripts and any with same ID\n    const scriptUrl = 'https://cdn.jsdelivr.net/gh/snm62/accessibility-test@3d026ef/accessibility-widget.js';\n\n    const existingAccessibilityScript = existingScripts.find(script => \n      script.scriptUrl === scriptUrl\n      \n    );\n    console.log(existingAccessibilityScript);\n    \n    if (existingAccessibilityScript) {\n      console.log(\"Exact same script already exists, not adding duplicate\");\n      return new Response(JSON.stringify({\n        success: true,\n        message: \"Script already exists\",\n        result: existingAccessibilityScript\n      }), {\n        headers: { \n          'Content-Type': 'application/json',\n          'Accessibility-Allow-Origin': '*'\n        }\n      });\n    }\n\n    const isAccessibilityScript = (url) => {\n      return (\n        url &&\n        (url === scriptUrl ||                // exact match\n         url.includes('snm-accessibility-widget') || // any version of this widget\n         url.includes('accessibility-widget'))\n      );\n    };\n     \n    const filteredScripts = existingScripts.filter(script =>\n      !isAccessibilityScript(script.scriptUrl)\n    );\n    \n    // Add new script\n    const newScript = {\n      id: scriptId,\n      version: version,\n      location: 'header',\n      \n    };\n    \n    filteredScripts.push(newScript);\n    \n    console.log(\"Scripts to send to custom_code API:\", JSON.stringify(filteredScripts, null, 2));\n    \n    // Update custom code\n    const updateResponse = await fetch(`https://api.webflow.com/v2/sites/${authResult.siteId}/custom_code`, {\n      method: 'PUT',\n      headers: {\n        'Authorization': `Bearer ${authResult.accessToken}`,\n        'Content-Type': 'application/json',\n        'accept-version': '2.0.0'\n      },\n      body: JSON.stringify({\n        scripts: filteredScripts\n      })\n    });\n    console.log(\"update response status:\", updateResponse.status);\n    if (!updateResponse.ok) {\n      const errorText = await updateResponse.text();\n      console.error('Script application failed:', updateResponse.status, errorText);\n      throw new Error(`Script application failed: ${updateResponse.status} - ${errorText}`);\n    }\n    \n    const result = await updateResponse.json();\n    \n    return new Response(JSON.stringify({\n      success: true,\n      result: {\n        ...result,\n        scriptUrl: newScript.scriptUrl\n      }\n    }), {\n      headers: { \n        'Content-Type': 'application/json',\n        'Accessibility-Allow-Origin': '*'\n      }\n    });\n    \n  } catch (error) {\n    console.error('Apply script error:', error);\n    return new Response(JSON.stringify({ error: 'Failed to apply script' }), {\n      status: 500,\n      headers: { \n        'Content-Type': 'application/json',\n        'Accessibility-Allow-Origin': '*'\n      }\n    });\n  }\n}\n\n// Helper function to verify authentication\nasync function verifyAuth(request, env) {\n  const authHeader = request.headers.get('authorization');\n  if (!authHeader) return null;\n  \n  const token = authHeader.split(' ')[1];\n  if (!token) return null;\n  \n  try {\n    // Verify JWT token\n    const payload = await verifyJWT(token, env.WEBFLOW_CLIENT_SECRET);\n    const userId = payload.user.id;\n    \n    // Get user data from KV\n    const userData = await env.ACCESSIBILITY_AUTH.get(`user-auth:${userId}`);\n    if (!userData) return null;\n    \n    const { accessToken, userData: user, siteId } = JSON.parse(userData);\n    \n    // Get site name from the site-specific data\n    let siteName = 'Unknown Site';\n    try {\n      const siteData = await env.ACCESSIBILITY_AUTH.get(`Accessibility-Settings:${siteId}`);\n      if (siteData) {\n        const parsedSiteData = JSON.parse(siteData);\n        siteName = parsedSiteData.siteName || 'Unknown Site';\n      }\n    } catch (error) {\n      console.warn('Failed to get site name:', error);\n    }\n    \n    return {\n      accessToken,\n      userData: user,\n      siteId,\n      siteName\n    };\n  } catch (error) {\n    console.error('Auth verification error:', error);\n    return null;\n  }\n}\n\n// Create JWT session token\nasync function createSessionToken(user, env) {\n  const header = {\n    alg: 'HS256',\n    typ: 'JWT'\n  };\n  \n  const payload = {\n    user: user,\n    exp: Math.floor(Date.now() / 1000) + (24 * 60 * 60) // 24 hours\n  };\n  \n  const encodedHeader = base64UrlEncode(JSON.stringify(header));\n  const encodedPayload = base64UrlEncode(JSON.stringify(payload));\n  \n  const signature = await signJWT(\n    `${encodedHeader}.${encodedPayload}`,\n    env.WEBFLOW_CLIENT_SECRET\n  );\n  \n  return {\n    token: `${encodedHeader}.${encodedPayload}.${signature}`,\n    exp: payload.exp\n  };\n}\n\n// Verify JWT token\nasync function verifyJWT(token, secret) {\n  const parts = token.split('.');\n  if (parts.length !== 3) throw new Error('Invalid JWT format');\n  \n  const [header, payload, signature] = parts;\n  \n  // Verify signature\n  const expectedSignature = await signJWT(`${header}.${payload}`, secret);\n  if (signature !== expectedSignature) {\n    throw new Error('Invalid signature');\n  }\n  \n  // Check expiration\n  const decodedPayload = JSON.parse(base64UrlDecode(payload));\n  if (decodedPayload.exp < Math.floor(Date.now() / 1000)) {\n    throw new Error('Token expired');\n  }\n  \n  return decodedPayload;\n}\n\n// Sign JWT\nasync function signJWT(data, secret) {\n  const key = await crypto.subtle.importKey(\n    'raw',\n    new TextEncoder().encode(secret),\n    { name: 'HMAC', hash: 'SHA-256' },\n    false,\n    ['sign']\n  );\n  \n  const signature = await crypto.subtle.sign('HMAC', key, new TextEncoder().encode(data));\n  return base64UrlEncode(new Uint8Array(signature));\n}\n\n// Base64 URL encoding helpers\nfunction base64UrlEncode(str) {\n  return btoa(str)\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n    .replace(/=/g, '');\n}\n\nfunction base64UrlDecode(str) {\n  str += '='.repeat((4 - str.length % 4) % 4);\n  str = str.replace(/-/g, '+').replace(/_/g, '/');\n  return atob(str);\n}\n\n// Get accessibility configuration for hosted script\nasync function handleGetConfig(request, env) {\n  try {\n    const url = new URL(request.url);\n    const siteId = url.searchParams.get('siteId');\n    \n    if (!siteId) {\n      return new Response(JSON.stringify({ \n        error: 'Missing siteId parameter' \n      }), {\n        status: 400,\n        headers: { \n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET, OPTIONS',\n          'Access-Control-Allow-Headers': 'Content-Type'\n        }\n      });\n    }\n    \n    // Get customization data from KV store\n    const kvKey = `Accessibility-Settings:${siteId}`;\n    const storedData = await env.ACCESSIBILITY_AUTH.get(kvKey);\n    \n    if (!storedData) {\n      return new Response(JSON.stringify({ \n        error: 'Site configuration not found' \n      }), {\n        status: 404,\n        headers: { \n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET, OPTIONS',\n          'Access-Control-Allow-Headers': 'Content-Type'\n        }\n      });\n    }\n    \n    const siteData = JSON.parse(storedData);\n    \n    // Return only the customization data needed by the widget\n    const config = {\n      customization: siteData.customization || {},\n      accessibilityProfiles: siteData.accessibilityProfiles || [],\n      siteId: siteId,\n      publishedAt: siteData.publishedAt,\n      widgetVersion: siteData.widgetVersion || '1.0.0'\n    };\n    \n    return new Response(JSON.stringify(config), {\n      headers: { \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type',\n        'Cache-Control': 'public, max-age=300' // Cache for 5 minutes\n      }\n    });\n    \n  } catch (error) {\n    console.error('Get config error:', error);\n    return new Response(JSON.stringify({ \n      error: 'Failed to get configuration',\n      details: error.message \n    }), {\n      status: 500,\n      headers: { \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type'\n      }\n    });\n  }\n}\n\n// Domain lookup function\nasync function handleDomainLookup(request, env) {\n  try {\n    const url = new URL(request.url);\n    const domain = url.searchParams.get('domain');\n    \n    console.log('Domain lookup request for:', domain);\n    \n    if (!domain) {\n      return new Response(JSON.stringify({ error: 'Missing domain parameter' }), {\n        status: 400,\n        headers: { \n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET, OPTIONS',\n          'Access-Control-Allow-Headers': 'Content-Type'\n        }\n      });\n    }\n    \n    // Check if there's a domain mapping\n    const domainKey = `domain:${domain}`;\n    const domainData = await env.ACCESSIBILITY_AUTH.get(domainKey);\n    \n    if (domainData) {\n      const data = JSON.parse(domainData);\n      console.log('Found domain mapping:', data);\n      return new Response(JSON.stringify({ \n        siteId: data.siteId,\n        domain: data.domain,\n        isPrimary: data.isPrimary\n      }), {\n        headers: { \n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET, OPTIONS',\n          'Access-Control-Allow-Headers': 'Content-Type'\n        }\n      });\n    }\n    \n    console.log('No domain mapping found for:', domain);\n    return new Response(JSON.stringify({ error: 'Domain not found' }), {\n      status: 404,\n      headers: { \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type'\n      }\n    });\n    \n  } catch (error) {\n    console.error('Domain lookup error:', error);\n    return new Response(JSON.stringify({ error: 'Lookup failed' }), {\n      status: 500,\n      headers: { \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type'\n      }\n    });\n  }\n}"],
  "mappings": "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",
  "names": ["userId", "url"]
}
